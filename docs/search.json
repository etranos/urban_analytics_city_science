[
  {
    "objectID": "src/diversity.html#economic-diversity",
    "href": "src/diversity.html#economic-diversity",
    "title": "Diversity in cities",
    "section": "Economic diversity",
    "text": "Economic diversity\n\nProduction, i.e. firms\nConsumption, i.e. product variety\nLabour pool, i.e. skills in labour market\n\nIn general is a good thing for:\n\nurban economies\nproductivity\nurban and industrial agglomeration",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#opposing-forces",
    "href": "src/diversity.html#opposing-forces",
    "title": "Diversity in cities",
    "section": "Opposing forces",
    "text": "Opposing forces\n\nWithin-sector or Marshall–Arrow–Romer (MAR) spillovers\nBetween-sector or Jacobs spillovers\nLarge empirical literature trying to identify the optimal ratio, e.g. Saviotti and Frenken (2008) and Caragliu, Dominicis, and Groot (2016)\nMAR externalities (or spillovers): good for productivity and short-term growth\nJacobean externalities: good for innovation and long-term growth",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#opposing-forces-1",
    "href": "src/diversity.html#opposing-forces-1",
    "title": "Diversity in cities",
    "section": "Opposing forces",
    "text": "Opposing forces\nUsing more clear economics terminology (Fujita et al. 1989):\n\nDiverse cities (heterogeneous agglomerations) enjoy economies of scope\nHomogeneous agglomeration enjoy increasing returns from economies of scale",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#on-the-ground",
    "href": "src/diversity.html#on-the-ground",
    "title": "Diversity in cities",
    "section": "On the ground",
    "text": "On the ground\n\nAmbiguous concepts\nVariety, diversity, difference: a relative concept of agglomeration and the clustering of activities\nNot only higher ‘abundance’, ‘difference’ or ‘number’, but also the degrees of ‘richness’, ‘concentration’ or ‘evenness’ (Yuo and Tseng 2021)\nDifferent ways to measure (Bettencourt 2021)",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#spieces-richness",
    "href": "src/diversity.html#spieces-richness",
    "title": "Diversity in cities",
    "section": "Spieces richness…",
    "text": "Spieces richness…\n\n… aka variety\n\\(D = \\sum_{i}^n p_{i}^0\\)\n\\(p_i\\) is the proportion of data points in the \\(i\\)th category\n\\(n\\) is the number of total categories\nA count of different species / categories / …\n\nInterpretation:\n\nPlurality\nAvailability of options",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#shannon-entropy",
    "href": "src/diversity.html#shannon-entropy",
    "title": "Diversity in cities",
    "section": "Shannon entropy",
    "text": "Shannon entropy\n\n\\(H = -\\sum_{i}^n p_{i} \\ln{p_{i}}\\)\n\\(n\\) is the number of total categories\n\\(p_i\\) is the proportion of data points in the \\(i\\)th category\nProbably the most common diversity index.\nInterpretation:\n\nIf one category dominates ➔ less surprise ➔ low entropy\nNo category dominates ➔ more surprise ➔ high entropy",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#herfindahl-hirschman-index",
    "href": "src/diversity.html#herfindahl-hirschman-index",
    "title": "Diversity in cities",
    "section": "Herfindahl-Hirschman index",
    "text": "Herfindahl-Hirschman index\n\n\\(HHI = \\sum_{i}^{n}(p_{i}^2)\\)\n\\(p_i\\) is the proportion of data points in the \\(i\\)th category\nConcentration of the market.\nInterpretation:\n\n\\(1/n \\leq HHI \\leq 1\\)\nTwo scenarios:\n\n\n\nHHI_1 = .8^2 + .05^2 + .05^2 + .1^2\nHHI_1\n\n[1] 0.655\n\nHHI_2 = .25^2 + .25^2 + .25^2 + .25^2\nHHI_2\n\n[1] 0.25",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#herfindahl-hirschman-index-1",
    "href": "src/diversity.html#herfindahl-hirschman-index-1",
    "title": "Diversity in cities",
    "section": "Herfindahl-Hirschman index",
    "text": "Herfindahl-Hirschman index\n\nCaution: alternative specification\n\\(HHI = 1- \\sum_{i}^{n}(p_{i}^2)\\)",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#relatedness",
    "href": "src/diversity.html#relatedness",
    "title": "Diversity in cities",
    "section": "Relatedness",
    "text": "Relatedness\n\nRelatedness spans the continuum between MAR and Jacobs (Hidalgo 2021)\nRelated activities are neither exactly the same nor completely different (Frenken, Van Oort, and Verburg 2007; Boschma et al. 2012)\nWhy? Because:\n\nidentical activities compete for customers and resources,\nno learning between very dissimilar economic activities",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#relatedness-1",
    "href": "src/diversity.html#relatedness-1",
    "title": "Diversity in cities",
    "section": "Relatedness",
    "text": "Relatedness\n\nAbsorptive capacity: a firm’s capacity to absorb new knowledge depends on its prior level of related knowledge (Cohen and Levinthal 1990)",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#economic-complexity",
    "href": "src/diversity.html#economic-complexity",
    "title": "Diversity in cities",
    "section": "Economic complexity",
    "text": "Economic complexity\n\nLarge scale fine-grained data on economic activities\nLearn about abstract factors of production and the way they combine into outputs\nDimensionality reduction techniques to data on the geography of activities, e.g. employment by industry or patents by technology\nMachine learning and network techniques to predict and explain the economic trajectories of countries, cities and regions\n\nFor a review, check Hidalgo (2021) and Balland et al. (2022).",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#measuring-diversity",
    "href": "src/diversity.html#measuring-diversity",
    "title": "Diversity in cities",
    "section": "Measuring diversity",
    "text": "Measuring diversity\n\n\n Source: Companies House",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#measuring-diversity-1",
    "href": "src/diversity.html#measuring-diversity-1",
    "title": "Diversity in cities",
    "section": "Measuring diversity",
    "text": "Measuring diversity\n\nGo to data.london.gov.uk\nDownload and and save locally the Businesses-in-London.csv\nMake sure you know the file location!\nWe will use the REAT and entropy packages. Check what these packages do here and here.\nInstall them if needed with install.packages(\"packagename\")",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#measuring-diversity-2",
    "href": "src/diversity.html#measuring-diversity-2",
    "title": "Diversity in cities",
    "section": "Measuring diversity",
    "text": "Measuring diversity\n\nlibrary(tidyverse)  # for data wrangling\nlibrary(rprojroot)  # for relative paths\nlibrary(REAT)       # for diversity measures\nlibrary(entropy)    # for entropy\nlibrary(cluster)    # for cluster analysis\nlibrary(factoextra) # help functions for clustering \nlibrary(kableExtra) # for nice html tables\nlibrary(dbscan)     # for HDBSCAL\nlibrary(sf)         # for mapping\n\n# This is the project path\npath &lt;- find_rstudio_root_file()\npath.data &lt;- paste0(path, \"/data/businesses-in-london.csv\")\n\nlondon.firms &lt;- read_csv(path.data) \n\nlondon.firms.sum &lt;- london.firms %&gt;% \n  filter(SICCode.SicText_1!=\"None Supplied\") %&gt;% # dropping NAs in essence\n  group_by(oslaua, SICCode.SicText_1) %&gt;%        # grouping by Local Authority and SIC code\n  summarise(n = n()) %&gt;%                         # summarise: n is the number of firms per Local Authority and SIC code\n  mutate(total = sum(n),                         # total equal all firms\n         freq = n / total) %&gt;%                   # just a frequency\n  group_by(oslaua) %&gt;%                           # grouping again only by Local Authority\n  summarise(richness = n_distinct(SICCode.SicText_1), # the number of distinct SIC per Local Authority\n            entropy = entropy(freq, method = \"ML\"),   # entropy for each Local Authority, we did the first group_by() and mutate() to be                                                           able to calculate freq so we can calculate entropy\n            herf = herf(n)) %&gt;%                       # HHI for each local authority\n  arrange(-herf)                                      # sort based on HHI (descending)\n\nlondon.firms.sum %&gt;% kbl() %&gt;%\n  kable_styling(full_width = F) %&gt;%                   # A nice(r) table\n  scroll_box(width = \"800px\", height = \"300px\")\n\n\n\n\n\noslaua\nrichness\nentropy\nherf\n\n\n\n\nE09000013\n602\n4.637865\n0.0301165\n\n\nE09000001\n744\n4.520774\n0.0288396\n\n\nE09000033\n827\n4.607933\n0.0258339\n\n\nE09000003\n723\n4.671225\n0.0233361\n\n\nE09000008\n678\n4.786546\n0.0221182\n\n\nE09000027\n558\n4.712318\n0.0220274\n\n\nE09000015\n633\n4.730619\n0.0205194\n\n\nE09000010\n667\n4.790814\n0.0204714\n\n\nE09000007\n827\n4.829186\n0.0204085\n\n\nE09000020\n577\n4.774282\n0.0196181\n\n\nE09000030\n690\n4.802693\n0.0193494\n\n\nE09000025\n623\n4.816502\n0.0188794\n\n\nE09000032\n571\n4.831936\n0.0184425\n\n\nE09000026\n630\n4.806874\n0.0180738\n\n\nE09000012\n729\n4.915068\n0.0178886\n\n\nE09000014\n595\n4.830779\n0.0178559\n\n\nE09000019\n803\n4.904964\n0.0178424\n\n\nE09000006\n599\n4.833756\n0.0177523\n\n\nE09000021\n529\n4.856868\n0.0176720\n\n\nE09000004\n569\n4.849445\n0.0176348\n\n\nE09000024\n582\n4.860828\n0.0168338\n\n\nE09000018\n603\n4.906424\n0.0163947\n\n\nE09000029\n543\n4.879529\n0.0162662\n\n\nE09000022\n594\n4.925276\n0.0157286\n\n\nE09000017\n640\n4.960676\n0.0153900\n\n\nE09000005\n644\n4.958913\n0.0146799\n\n\nE09000016\n564\n4.936603\n0.0145663\n\n\nE09000028\n681\n4.996227\n0.0145643\n\n\nE09000002\n543\n4.916217\n0.0143203\n\n\nE09000009\n645\n4.992793\n0.0142574\n\n\nE09000031\n587\n4.977460\n0.0136438\n\n\nE09000011\n565\n4.995980\n0.0136430\n\n\nE09000023\n540\n5.008342\n0.0130329",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#measuring-diversity-3",
    "href": "src/diversity.html#measuring-diversity-3",
    "title": "Diversity in cities",
    "section": "Measuring diversity",
    "text": "Measuring diversity\n\n\n\n\n\n\nTip\n\n\nYou don’t know what local authorities these codes refer to. You should download the codes and names and join them with your data from here.\n\n\n\n\n\n\n\n\n\nTip\n\n\nDiscuss what we can learn from this exercise.\nCan you think of a way to understand how different these indices are among London’s Local Authorities?",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#mapping-diversity",
    "href": "src/diversity.html#mapping-diversity",
    "title": "Diversity in cities",
    "section": "Mapping diversity",
    "text": "Mapping diversity\npath.shape &lt;- paste0(path, \"/data/Local_Authority_Districts_(May_2021)_UK_BFE.geojson\")\n\nlondon &lt;- st_read(path.shape, quiet = T) %&gt;%\n  dplyr::filter(LAD21CD %in% (london.firms$oslaua))\n\nlondon &lt;- merge(london, london.firms.sum, by.x = \"LAD21CD\", by.y = \"oslaua\" )\n  \nggplot() +\n  geom_sf(data = london, aes(fill = entropy), color = NA) +\n  labs(\n    title = \"Business diversity in London' Local Autorities\",\n    fill = \"Entropy\") +\n  scale_fill_viridis_c() +\n  theme_void() +\n  theme(plot.title = element_text(hjust = 0.5)) # centres the title",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#clustering",
    "href": "src/diversity.html#clustering",
    "title": "Diversity in cities",
    "section": "Clustering",
    "text": "Clustering\n\nReducing the dimensions of the observation space\nClassification of observations into (exclusive) groups\nDistance or (dis)similarity between each pair of observations to create a distance or dissimilarity or matrix\nObservations within the same group are as similar as possible\nBased on Boehmke and Greenwell (2019) available here\nPlenty of other resources online and in textbooks",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#clustering-1",
    "href": "src/diversity.html#clustering-1",
    "title": "Diversity in cities",
    "section": "Clustering",
    "text": "Clustering\n\nk-means\nHierarchical clustering",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#k-means",
    "href": "src/diversity.html#k-means",
    "title": "Diversity in cities",
    "section": "k-means",
    "text": "k-means\n\n\nk is the number of clusters and is pre-defined\nThe algorithm selects k random observations (starting centres)\nThe remaining observations are assigned to the nearest centre\nRecalculates the new centres\nRe-check cluster assignment\nIterative process to minimise within-cluster variation until convergence\n\n\n\\(SS_{within} = \\sum_{k=1}^k W(C_{k}) = \\sum_{k=1}^k \\sum_{x_i\\in C_K}(x_i-\\mu_k)^2\\)",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#k-means-1",
    "href": "src/diversity.html#k-means-1",
    "title": "Diversity in cities",
    "section": "k-means",
    "text": "k-means\nFirst, create an appropriate data frame\n\nla.sic &lt;- london.firms %&gt;% \n  filter(SICCode.SicText_1!=\"None Supplied\") %&gt;% # Drop firms which haven't declared SIC code\n  group_by(oslaua, SICCode.SicText_1) %&gt;%        # Group by Local Authorities and SIC code\n  summarise(n = n()) %&gt;%                         # Summarise; n = number of observations\n  mutate(total = sum(n),                         # New column: total number of observations\n         freq = n / total) %&gt;%                   # New column: frequency\n  arrange(oslaua,-n) %&gt;%                         # Just arrange by Local Authority and descenting order of n\n  select(-n, -total) %&gt;%                         # Drop n and total, we don't need them any more.\n  pivot_wider(names_from = SICCode.SicText_1, values_from = freq) %&gt;% # Data transformation: from long to wide. Have a look: https://tidyr.tidyverse.org/reference/pivot_wider.html\n  replace(is.na(.), 0)                          # Replace any missing values with 0 as missing value represent SIC codes with 0 frequency\n\nla.sic %&gt;%  \n  select(1:20) %&gt;%  # Select the first 20 columns as there 1037 in total\n  kbl() %&gt;%\n  kable_styling()   # Nice(r) table\n\n\n\n\noslaua\n82990 - Other business support service activities n.e.c.\n64209 - Activities of other holding companies n.e.c.\n70229 - Management consultancy activities other than financial management\n64999 - Financial intermediation not elsewhere classified\n99999 - Dormant Company\n74990 - Non-trading company\n70100 - Activities of head offices\n68209 - Other letting and operating of own or leased real estate\n62020 - Information technology consultancy activities\n68100 - Buying and selling of own real estate\n65120 - Non-life insurance\n96090 - Other service activities n.e.c.\n41100 - Development of building projects\n62012 - Business and domestic software development\n62090 - Other information technology service activities\n35110 - Production of electricity\n64205 - Activities of financial services holding companies\n74909 - Other professional, scientific and technical activities n.e.c.\n65110 - Life insurance\n\n\n\n\nE09000001\n0.1108145\n0.0606884\n0.0401823\n0.0379038\n0.0363252\n0.0361787\n0.0271462\n0.0261046\n0.0247376\n0.0239889\n0.0239238\n0.0232403\n0.0208642\n0.0198714\n0.0193018\n0.0183579\n0.0161282\n0.0155586\n0.0117829\n\n\nE09000002\n0.0270344\n0.0027363\n0.0241340\n0.0024626\n0.0061840\n0.0026816\n0.0013681\n0.0173480\n0.0254474\n0.0313030\n0.0001095\n0.0348602\n0.0163629\n0.0068954\n0.0107262\n0.0000547\n0.0004378\n0.0078258\n0.0000547\n\n\nE09000003\n0.0600694\n0.0131911\n0.0403222\n0.0081328\n0.0314536\n0.0152407\n0.0037313\n0.0658109\n0.0258041\n0.0686751\n0.0003942\n0.0442374\n0.0313223\n0.0093678\n0.0109181\n0.0010511\n0.0012876\n0.0106816\n0.0003022\n\n\nE09000004\n0.0714510\n0.0073915\n0.0429860\n0.0039316\n0.0150975\n0.0074963\n0.0025163\n0.0291466\n0.0347033\n0.0404173\n0.0004718\n0.0300377\n0.0214406\n0.0071818\n0.0114280\n0.0004194\n0.0004194\n0.0112183\n0.0001573\n\n\nE09000005\n0.0357725\n0.0060626\n0.0302829\n0.0057610\n0.0234964\n0.0061229\n0.0027749\n0.0451228\n0.0273572\n0.0451529\n0.0002111\n0.0339326\n0.0193039\n0.0080533\n0.0110394\n0.0003318\n0.0006937\n0.0120951\n0.0000603\n\n\nE09000006\n0.0475336\n0.0079285\n0.0482441\n0.0065073\n0.0258798\n0.0078537\n0.0035529\n0.0407644\n0.0376977\n0.0391937\n0.0012716\n0.0269270\n0.0253562\n0.0119675\n0.0129773\n0.0002618\n0.0007854\n0.0157448\n0.0001870\n\n\nE09000007\n0.0541925\n0.0147704\n0.0451042\n0.0091985\n0.0176188\n0.0095582\n0.0063354\n0.0248425\n0.0352450\n0.0353404\n0.0002790\n0.0431734\n0.0260612\n0.0269274\n0.0163561\n0.0019454\n0.0036706\n0.0121643\n0.0001688\n\n\nE09000008\n0.0358566\n0.0042869\n0.0328511\n0.0057082\n0.0886745\n0.0097621\n0.0027492\n0.0308940\n0.0316861\n0.0352275\n0.0002563\n0.0260246\n0.0205261\n0.0105543\n0.0156800\n0.0003728\n0.0027026\n0.0091098\n0.0002097\n\n\nE09000009\n0.0325698\n0.0062051\n0.0333419\n0.0044036\n0.0177290\n0.0084928\n0.0036602\n0.0394327\n0.0277087\n0.0445226\n0.0002002\n0.0352864\n0.0220468\n0.0095222\n0.0106374\n0.0002860\n0.0011152\n0.0100369\n0.0000858\n\n\nE09000010\n0.0361647\n0.0106993\n0.0303793\n0.0056159\n0.0855462\n0.0089807\n0.0024207\n0.0462347\n0.0218102\n0.0379076\n0.0004115\n0.0357532\n0.0213987\n0.0127811\n0.0115466\n0.0002421\n0.0017913\n0.0091501\n0.0002421\n\n\nE09000011\n0.0352018\n0.0036909\n0.0420300\n0.0038754\n0.0134717\n0.0044752\n0.0021223\n0.0251903\n0.0373702\n0.0333564\n0.0003691\n0.0352480\n0.0183622\n0.0120877\n0.0130104\n0.0004614\n0.0014302\n0.0120415\n0.0000923\n\n\nE09000012\n0.0512285\n0.0097657\n0.0496767\n0.0063622\n0.0329695\n0.0031242\n0.0022862\n0.0412559\n0.0384524\n0.0476801\n0.0002897\n0.0205038\n0.0148865\n0.0235245\n0.0167486\n0.0015621\n0.0025449\n0.0118450\n0.0000621\n\n\nE09000013\n0.0423722\n0.0123893\n0.0448190\n0.0076899\n0.0190306\n0.0101755\n0.0087774\n0.1304179\n0.0213220\n0.0310704\n0.0001554\n0.0332453\n0.0167780\n0.0116126\n0.0129719\n0.0013982\n0.0015147\n0.0148361\n0.0000388\n\n\nE09000014\n0.0339895\n0.0056534\n0.0407460\n0.0045848\n0.0256127\n0.0055500\n0.0031370\n0.0527423\n0.0272674\n0.0578096\n0.0001379\n0.0438829\n0.0167879\n0.0113758\n0.0085491\n0.0003792\n0.0009307\n0.0091696\n0.0000345\n\n\nE09000015\n0.0486010\n0.0124162\n0.0466257\n0.0083570\n0.0189498\n0.0074019\n0.0031692\n0.0576744\n0.0423495\n0.0634049\n0.0002605\n0.0342313\n0.0266123\n0.0127418\n0.0140876\n0.0002171\n0.0012373\n0.0184940\n0.0001954\n\n\nE09000016\n0.0449873\n0.0058253\n0.0335324\n0.0070981\n0.0186019\n0.0052379\n0.0017623\n0.0327981\n0.0270217\n0.0414137\n0.0008811\n0.0315743\n0.0251126\n0.0092520\n0.0097415\n0.0000979\n0.0009301\n0.0105248\n0.0000979\n\n\nE09000017\n0.0340671\n0.0094125\n0.0317595\n0.0047062\n0.0160012\n0.0068316\n0.0052528\n0.0389252\n0.0357674\n0.0526188\n0.0003036\n0.0352513\n0.0235616\n0.0123273\n0.0135722\n0.0002429\n0.0015181\n0.0123577\n0.0002429\n\n\nE09000018\n0.0348997\n0.0088552\n0.0347881\n0.0054322\n0.0130223\n0.0102690\n0.0069576\n0.0298396\n0.0549540\n0.0416341\n0.0002232\n0.0361275\n0.0193474\n0.0161848\n0.0141385\n0.0004093\n0.0013766\n0.0104178\n0.0001488\n\n\nE09000019\n0.0509646\n0.0133515\n0.0490896\n0.0090981\n0.0198825\n0.0094630\n0.0062919\n0.0248783\n0.0370846\n0.0317616\n0.0005537\n0.0470006\n0.0223615\n0.0277725\n0.0190771\n0.0017617\n0.0040646\n0.0131753\n0.0002139\n\n\nE09000020\n0.0499206\n0.0187149\n0.0547281\n0.0133494\n0.0227926\n0.0141649\n0.0104735\n0.0411641\n0.0188866\n0.0365712\n0.0002575\n0.0403056\n0.0202601\n0.0148517\n0.0121475\n0.0031335\n0.0041207\n0.0146371\n0.0000000\n\n\nE09000021\n0.0478516\n0.0081613\n0.0512695\n0.0039063\n0.0151367\n0.0095564\n0.0043248\n0.0353655\n0.0399693\n0.0358538\n0.0006975\n0.0272740\n0.0177176\n0.0142997\n0.0145787\n0.0002790\n0.0014648\n0.0150670\n0.0002790\n\n\nE09000022\n0.0335485\n0.0086577\n0.0420129\n0.0044448\n0.0180111\n0.0090055\n0.0052951\n0.0372976\n0.0252773\n0.0306497\n0.0001546\n0.0331620\n0.0143006\n0.0117497\n0.0112472\n0.0028215\n0.0009276\n0.0134890\n0.0000773\n\n\nE09000023\n0.0320543\n0.0035557\n0.0378921\n0.0041925\n0.0113570\n0.0044579\n0.0016982\n0.0268535\n0.0312583\n0.0294008\n0.0000531\n0.0311522\n0.0145412\n0.0110917\n0.0118877\n0.0001061\n0.0013268\n0.0110917\n0.0000531\n\n\nE09000024\n0.0354735\n0.0083443\n0.0490793\n0.0051381\n0.0251973\n0.0069878\n0.0037817\n0.0349803\n0.0517511\n0.0415571\n0.0005344\n0.0318563\n0.0206347\n0.0218267\n0.0152088\n0.0011098\n0.0009865\n0.0107284\n0.0001644\n\n\nE09000025\n0.0443489\n0.0029330\n0.0243489\n0.0040202\n0.0653097\n0.0060430\n0.0018710\n0.0201770\n0.0310999\n0.0305689\n0.0001517\n0.0287737\n0.0136030\n0.0141087\n0.0113780\n0.0001264\n0.0010619\n0.0068015\n0.0001517\n\n\nE09000026\n0.0483713\n0.0060341\n0.0313726\n0.0041454\n0.0177836\n0.0118475\n0.0019133\n0.0443240\n0.0351011\n0.0608320\n0.0003434\n0.0384615\n0.0226403\n0.0095418\n0.0106211\n0.0001962\n0.0008830\n0.0094192\n0.0001472\n\n\nE09000027\n0.0492061\n0.0080081\n0.0828589\n0.0082396\n0.0301810\n0.0121742\n0.0049067\n0.0392075\n0.0431422\n0.0453641\n0.0007406\n0.0244410\n0.0208767\n0.0152294\n0.0154145\n0.0006018\n0.0010647\n0.0200435\n0.0002314\n\n\nE09000028\n0.0530189\n0.0184414\n0.0437391\n0.0094275\n0.0362030\n0.0226084\n0.0137424\n0.0285782\n0.0310016\n0.0226084\n0.0004433\n0.0282235\n0.0125307\n0.0165204\n0.0143630\n0.0043148\n0.0039306\n0.0142152\n0.0001773\n\n\nE09000029\n0.0425879\n0.0045226\n0.0459799\n0.0059673\n0.0157663\n0.0069724\n0.0035176\n0.0339824\n0.0466080\n0.0415829\n0.0005025\n0.0298995\n0.0246859\n0.0138191\n0.0140704\n0.0002513\n0.0020101\n0.0120603\n0.0000628\n\n\nE09000030\n0.0652078\n0.0159285\n0.0484445\n0.0199271\n0.0342956\n0.0172467\n0.0089199\n0.0253977\n0.0509271\n0.0293084\n0.0007250\n0.0367343\n0.0160603\n0.0187187\n0.0393927\n0.0019554\n0.0097109\n0.0105457\n0.0001977\n\n\nE09000031\n0.0310170\n0.0067606\n0.0308121\n0.0036876\n0.0120052\n0.0036057\n0.0014750\n0.0304024\n0.0251168\n0.0375727\n0.0002049\n0.0402360\n0.0259772\n0.0095059\n0.0092190\n0.0006556\n0.0009424\n0.0093420\n0.0000410\n\n\nE09000032\n0.0381731\n0.0072472\n0.0655832\n0.0074624\n0.0180461\n0.0091845\n0.0041976\n0.0402540\n0.0311771\n0.0355900\n0.0003946\n0.0311771\n0.0202346\n0.0123417\n0.0119470\n0.0008969\n0.0018297\n0.0158935\n0.0000359\n\n\nE09000033\n0.0871492\n0.0369990\n0.0475242\n0.0180250\n0.0727706\n0.0228702\n0.0137720\n0.0385974\n0.0192951\n0.0375056\n0.0004424\n0.0307623\n0.0292781\n0.0150850\n0.0143358\n0.0047239\n0.0074997\n0.0153490\n0.0001570",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#k-means-2",
    "href": "src/diversity.html#k-means-2",
    "title": "Diversity in cities",
    "section": "k-means",
    "text": "k-means\n\nkclust = kmeans(la.sic[,-1], centers = 10, nstart = 10) # be aware of the [,-1]\nstr(kclust)\n\nList of 9\n $ cluster     : int [1:33] 5 6 10 8 6 1 3 2 6 2 ...\n $ centers     : num [1:10, 1:1036] 0.0444 0.036 0.0521 0.0591 0.099 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : chr [1:10] \"1\" \"2\" \"3\" \"4\" ...\n  .. ..$ : chr [1:1036] \"82990 - Other business support service activities n.e.c.\" \"64209 - Activities of other holding companies n.e.c.\" \"70229 - Management consultancy activities other than financial management\" \"64999 - Financial intermediation not elsewhere classified\" ...\n $ totss       : num 0.0945\n $ withinss    : num [1:10] 0.0042 0.00182 0.0019 0.00112 0.00271 ...\n $ tot.withinss: num 0.0235\n $ betweenss   : num 0.071\n $ size        : int [1:10] 6 2 3 2 2 8 1 5 1 3\n $ iter        : int 3\n $ ifault      : int 0\n - attr(*, \"class\")= chr \"kmeans\"\n\n\ncenters is 10 x 1036: 1036 is the number of SIC codes.",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#choosing-k",
    "href": "src/diversity.html#choosing-k",
    "title": "Diversity in cities",
    "section": "Choosing k",
    "text": "Choosing k\n\nRule of thumb: \\(k = \\sqrt{n/2}\\)\nThe elbow method\n\nCompute k-means clustering for different values of k\nCalculate \\(SS_{within}\\)\nPlot and spot the loction of a bend",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#choosing-k-1",
    "href": "src/diversity.html#choosing-k-1",
    "title": "Diversity in cities",
    "section": "Choosing k",
    "text": "Choosing k\n\nfviz_nbclust(\n  la.sic[,-1], \n  kmeans, \n  k.max = 20,\n  method = \"wss\"\n)",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#hierarchical-clustering",
    "href": "src/diversity.html#hierarchical-clustering",
    "title": "Diversity in cities",
    "section": "Hierarchical clustering",
    "text": "Hierarchical clustering\n\n\n\n Source: @boehmke2019hands \n\n\nAgglomerative clustering (AGNES – AGglomerative NESting)\nDivisive hierarchical clustering (DIANA – DIvise ANAlysis)\n\nDissimilarity (distance) of observations",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#hierarchical-clustering-1",
    "href": "src/diversity.html#hierarchical-clustering-1",
    "title": "Diversity in cities",
    "section": "Hierarchical clustering",
    "text": "Hierarchical clustering\n\n# distances between observations\nd &lt;- dist(la.sic)\n\n# creates labels for the dendrogam\nl &lt;- london.firms %&gt;% distinct(oslaua) %&gt;% arrange(oslaua)\n\nhclust = hclust(d)\n\nplot(hclust, hang=-1, labels=l$oslaua, main='Default from hclust') \n\n#hang: the fraction of the plot height by which labels should hang below the rest of the plot. A negative value will cause the labels to hang down from 0.",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#optimal-number-of-clusters",
    "href": "src/diversity.html#optimal-number-of-clusters",
    "title": "Diversity in cities",
    "section": "Optimal number of clusters",
    "text": "Optimal number of clusters",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#optimal-number-of-clusters-1",
    "href": "src/diversity.html#optimal-number-of-clusters-1",
    "title": "Diversity in cities",
    "section": "Optimal number of clusters",
    "text": "Optimal number of clusters\n\n\n\n\n\n\nTip\n\n\nExplore what the 2 cluster solution tells us about London?",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#clusters-in-space",
    "href": "src/diversity.html#clusters-in-space",
    "title": "Diversity in cities",
    "section": "Clusters in space",
    "text": "Clusters in space\n\nCreate a SIC frequency table\n\n\n# This will build an SIC frequency table\nlondon.firms %&gt;% \n  group_by(SICCode.SicText_1) %&gt;% \n  summarise(n=n()) %&gt;% \n  arrange(-n) %&gt;% \n  glimpse()\n\nRows: 1,037\nColumns: 2\n$ SICCode.SicText_1 &lt;chr&gt; \"82990 - Other business support service activities n…\n$ n                 &lt;int&gt; 72756, 58526, 55309, 52058, 46572, 45312, 44270, 439…",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#clusters-in-space-1",
    "href": "src/diversity.html#clusters-in-space-1",
    "title": "Diversity in cities",
    "section": "Clusters in space",
    "text": "Clusters in space\n\nFocus on, let’s say “70221 - Financial management”\n\n\nlondon.firms.sample &lt;- london.firms %&gt;% \n  filter(SICCode.SicText_1==\"70221 - Financial management\") %&gt;% \n  select(oseast1m, osnrth1m) %&gt;% \n  drop_na()",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#financial-management-in-london",
    "href": "src/diversity.html#financial-management-in-london",
    "title": "Diversity in cities",
    "section": "Financial management in London",
    "text": "Financial management in London\n\nplot(london.firms.sample)",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#clusters-in-space-k-means",
    "href": "src/diversity.html#clusters-in-space-k-means",
    "title": "Diversity in cities",
    "section": "Clusters in space, k-means",
    "text": "Clusters in space, k-means\n\nfviz_nbclust(\n  london.firms.sample, \n  kmeans, \n  k.max = 10,\n  method = \"wss\"\n)",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#clusters-in-space-k-means-1",
    "href": "src/diversity.html#clusters-in-space-k-means-1",
    "title": "Diversity in cities",
    "section": "Clusters in space, k-means",
    "text": "Clusters in space, k-means\n\nsp.cluster = kmeans(london.firms.sample, 6) \n\nplot(london.firms.sample, col = sp.cluster$cluster)",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#clusters-in-space-hdbscan",
    "href": "src/diversity.html#clusters-in-space-hdbscan",
    "title": "Diversity in cities",
    "section": "Clusters in space, hdbscan",
    "text": "Clusters in space, hdbscan\n\nTransform the space according to the density/sparsity\nBuild the minimum spanning tree of the distance weighted graph\nConstruct a cluster hierarchy of connected components\nCondense the cluster hierarchy based on minimum cluster size\nExtract the stable clusters from the condensed tree.\n\nResources: SciKit-learn docs and dbscan package",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#clusters-in-space-hdbscan-1",
    "href": "src/diversity.html#clusters-in-space-hdbscan-1",
    "title": "Diversity in cities",
    "section": "Clusters in space, hdbscan",
    "text": "Clusters in space, hdbscan\n\ncl &lt;- hdbscan(london.firms.sample, \n              minPts = 10)         #minimum size of clusters\n\nplot(london.firms.sample, col=cl$cluster+1, pch=20)",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/diversity.html#references",
    "href": "src/diversity.html#references",
    "title": "Diversity in cities",
    "section": "References",
    "text": "References\n\n\n\n\n\n\n\n\nBalland, Pierre-Alexandre, Tom Broekel, Dario Diodato, Elisa Giuliani, Ricardo Hausmann, Neave O’Clery, and David Rigby. 2022. “The New Paradigm of Economic Complexity.” Research Policy 51 (3): 104450.\n\n\nBettencourt, Luı́s MA. 2021. “Introduction to Urban Science: Evidence and Theory of Cities as Complex Systems.”\n\n\nBoehmke, Brad, and Brandon Greenwell. 2019. Hands-on Machine Learning with r. Chapman; Hall/CRC.\n\n\nBoschma, Ron, Koen Frenken, H Bathelt, M Feldman, D Kogler, et al. 2012. “Technological Relatedness and Regional Branching.” Beyond Territory. Dynamic Geographies of Knowledge Creation, Diffusion and Innovation 29: 64–68.\n\n\nCaragliu, Andrea, Laura de Dominicis, and Henri LF de Groot. 2016. “Both Marshall and Jacobs Were Right!” Economic Geography 92 (1): 87–111.\n\n\nCohen, Wesley M, and Daniel A Levinthal. 1990. “Absorptive Capacity: A New Perspective on Learning and Innovation.” Administrative Science Quarterly, 128–52.\n\n\nFrenken, Koen, Frank Van Oort, and Thijs Verburg. 2007. “Related Variety, Unrelated Variety and Regional Economic Growth.” Regional Studies 41 (5): 685–97.\n\n\nFujita, Masahisa et al. 1989. “Urban Economic Theory.” Cambridge Books.\n\n\nHidalgo, César A. 2021. “Economic Complexity Theory and Applications.” Nature Reviews Physics 3 (2): 92–113.\n\n\nSaviotti, Pier Paolo, and Koen Frenken. 2008. “Export Variety and the Economic Performance of Countries.” Journal of Evolutionary Economics 18 (2): 201–18.\n\n\nYuo, Tony Shun-Te, and Tzuhui Angie Tseng. 2021. “The Environmental Product Variety and Retail Rents on Central Urban Shopping Areas: A Multi-Stage Spatial Data Mining Method.” Environment and Planning B: Urban Analytics and City Science 48 (8): 2167–87.",
    "crumbs": [
      "Lectures",
      "Diversity in cities"
    ]
  },
  {
    "objectID": "src/network_science.html#network-science-the-evolution-of-a-new-science",
    "href": "src/network_science.html#network-science-the-evolution-of-a-new-science",
    "title": "Network science, urban laws and scaling",
    "section": "Network Science: The Evolution of a ‘New’ Science",
    "text": "Network Science: The Evolution of a ‘New’ Science\n\nNot really new\nGraph Theory in the 18th century\nLeonhard Euler’s work on small graphs\nHigh degree of regularity: similar degree centrality among different nodes",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#regular-graphs",
    "href": "src/network_science.html#regular-graphs",
    "title": "Network science, urban laws and scaling",
    "section": "Regular graphs",
    "text": "Regular graphs",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#st-milestone-random-networks-rn",
    "href": "src/network_science.html#st-milestone-random-networks-rn",
    "title": "Network science, urban laws and scaling",
    "section": "1st milestone: Random networks (RN)",
    "text": "1st milestone: Random networks (RN)\n\n20th Century: advances in mathematics and statistics\nAlgorithmic network analysis\nErdős, Rényi, et al. (1960)\nLarge scale networks with no obvious structure\nNodes degree follows a Poisson distribution: similar degree, close to the average degree , rare exceptions\nRepresentative of real world network?",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#st-milestone-random-networks-rn-1",
    "href": "src/network_science.html#st-milestone-random-networks-rn-1",
    "title": "Network science, urban laws and scaling",
    "section": "1st milestone: Random networks (RN)",
    "text": "1st milestone: Random networks (RN)\n\n Source: Watts and Strogatz (1998)",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#st-milestone-random-networks-rn-2",
    "href": "src/network_science.html#st-milestone-random-networks-rn-2",
    "title": "Network science, urban laws and scaling",
    "section": "1st milestone: Random networks (RN)",
    "text": "1st milestone: Random networks (RN)\n\n Source: Torres et al. (2009)",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#networks-become-important",
    "href": "src/network_science.html#networks-become-important",
    "title": "Network science, urban laws and scaling",
    "section": "Networks become important…",
    "text": "Networks become important…\n\n… in different fields, from social science to biology\nDigitization of data in many different fields + large databases ➔ real world systems as networks\nAdvances in computer science and in computing\nLooseness between different disciplinary boundaries\nReductionist approaches lose ground in favor of holistic research approaches, which try to understand the system as a whole",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#nd-milestone-small-worlds",
    "href": "src/network_science.html#nd-milestone-small-worlds",
    "title": "Network science, urban laws and scaling",
    "section": "2nd milestone: Small-worlds",
    "text": "2nd milestone: Small-worlds\n\nSmall world effect\nMilgram’s six degrees of separation (1967)\nBacon number\nShort average distances, enabling nodes to reach each other within a few steps\nCharacteristic of numerous real world networks\nStructural characteristic rather than an organizing principle\nEven RN networks are characterized by short average distances",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#nd-milestone-small-worlds-1",
    "href": "src/network_science.html#nd-milestone-small-worlds-1",
    "title": "Network science, urban laws and scaling",
    "section": "2nd milestone: Small-worlds",
    "text": "2nd milestone: Small-worlds\n\nWatts and Strogatz (1998) Small-world (SW) model\nCoexistence of short average distance with high clustering coefficient\nSW networks are located between regular and random networks:\n\nHighly clustered like regular lattices\nSmall distances like random networks\nNode degree distribution is quite similar with the RN and decays exponentially",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#nd-milestone-small-worlds-2",
    "href": "src/network_science.html#nd-milestone-small-worlds-2",
    "title": "Network science, urban laws and scaling",
    "section": "2nd milestone: Small-worlds",
    "text": "2nd milestone: Small-worlds\n\nA set of intensively interconnected local clusters, which gain global connectivity via a few links, which span the entire network linking distant clusters\nNodes in SW networks benefit from the high local connectivity and easy distant communication with remote clusters using the intra-cluster links\nProbability of finding a highly connected node decreases exponentially as highly connected nodes are practically absent in RN and SW models",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#nd-milestone-small-worlds-3",
    "href": "src/network_science.html#nd-milestone-small-worlds-3",
    "title": "Network science, urban laws and scaling",
    "section": "2nd milestone: Small-worlds",
    "text": "2nd milestone: Small-worlds\n\n Source: Watts and Strogatz (1998)",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#nd-milestone-small-worlds-4",
    "href": "src/network_science.html#nd-milestone-small-worlds-4",
    "title": "Network science, urban laws and scaling",
    "section": "2nd milestone: Small-worlds",
    "text": "2nd milestone: Small-worlds\nPros and cons\n\nSocial capital (bridging and bonding)\nDisease spread\nReal world examples?",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#rd-milestone-scale-free-sf-networks",
    "href": "src/network_science.html#rd-milestone-scale-free-sf-networks",
    "title": "Network science, urban laws and scaling",
    "section": "3rd milestone: Scale-free (SF) networks",
    "text": "3rd milestone: Scale-free (SF) networks\n\n\nBarabási and Albert (1999)\nVery few super connected nodes and a vast majority of less connected nodes\nSF: nodes degree distribution follows a power law distribution regardless the scale of observation\n2 main formation mechanisms:\n\ngrowth: expansion of networks over time\npreferential attachment: growth is not equally dispersed across the nodes; highly connected nodes are more likely to receive new links than the lower degree nodes",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#rd-milestone-scale-free-sf-networks-1",
    "href": "src/network_science.html#rd-milestone-scale-free-sf-networks-1",
    "title": "Network science, urban laws and scaling",
    "section": "3rd milestone: Scale-free (SF) networks",
    "text": "3rd milestone: Scale-free (SF) networks\n\nAn initial difference in the connectivity between two nodes will increase further as the network grows\nThis is a cumulative — rich get richer — process\nThe probability \\(P(k)\\) that a node has a degree \\(k\\) decays following a power function, with usually \\(2 &lt; \\gamma &lt; 3\\)\n\\(P(k)≈𝑘^{−\\gamma}\\)\nPower laws in networks are related with the existence of both of the above two mechanisms\nLater versions of SF models included more realistic options for the network growth",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#rd-milestone-scale-free-sf-networks-2",
    "href": "src/network_science.html#rd-milestone-scale-free-sf-networks-2",
    "title": "Network science, urban laws and scaling",
    "section": "3rd milestone: Scale-free (SF) networks",
    "text": "3rd milestone: Scale-free (SF) networks\n\n Source: Albert, Jeong, and Barabási (2000)",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#rd-milestone-scale-free-sf-networks-3",
    "href": "src/network_science.html#rd-milestone-scale-free-sf-networks-3",
    "title": "Network science, urban laws and scaling",
    "section": "3rd milestone: Scale-free (SF) networks",
    "text": "3rd milestone: Scale-free (SF) networks",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#rd-milestone-scale-free-sf-networks-4",
    "href": "src/network_science.html#rd-milestone-scale-free-sf-networks-4",
    "title": "Network science, urban laws and scaling",
    "section": "3rd milestone: Scale-free (SF) networks",
    "text": "3rd milestone: Scale-free (SF) networks\nAnd finally the power law…",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#rd-milestone-scale-free-sf-networks-5",
    "href": "src/network_science.html#rd-milestone-scale-free-sf-networks-5",
    "title": "Network science, urban laws and scaling",
    "section": "3rd milestone: Scale-free (SF) networks",
    "text": "3rd milestone: Scale-free (SF) networks\nPros and cons?\n\nEfficiency\nResilience\nDisease spread prevention\nVulnerability towards targeted attacks\nReal world examples?",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#network-science-a-summary",
    "href": "src/network_science.html#network-science-a-summary",
    "title": "Network science, urban laws and scaling",
    "section": "Network Science: a summary",
    "text": "Network Science: a summary\n\nBoth RN and SW have short average distances\nRN cannot be included in SW because they lack the high clustering coefficient\nSF networks share the short average distance and the high cluster coefficient of SW ones, but the SW are not characterized by the scale-free distribution\nAll scale free networks display small world properties, while all small-world networks are not necessarily scale free",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#network-science-an-epistemological-discussion",
    "href": "src/network_science.html#network-science-an-epistemological-discussion",
    "title": "Network science, urban laws and scaling",
    "section": "Network science: An epistemological discussion",
    "text": "Network science: An epistemological discussion\n1. Complexity Science\n\nMost studies in the network science domain have a starting point in statistical physics\nStochastic approaches\nUnderlying probability model which usually follows a power law\nMain objective: identification of the underlying mechanisms using generative modeling and simulation\nPotential risk: the probability model might not follow a power law mechanism, which is a common assumption",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#network-science-an-epistemological-discussion-1",
    "href": "src/network_science.html#network-science-an-epistemological-discussion-1",
    "title": "Network science, urban laws and scaling",
    "section": "Network science: An epistemological discussion",
    "text": "Network science: An epistemological discussion\n2. Social Network Analysis\n\nSociology and graph theory\nFocus on social networks\nExtensive utilization of network metrics",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#network-science-an-epistemological-discussion-2",
    "href": "src/network_science.html#network-science-an-epistemological-discussion-2",
    "title": "Network science, urban laws and scaling",
    "section": "Network science: An epistemological discussion",
    "text": "Network science: An epistemological discussion\n3. Geography and Urban Analytics\n\nSofter’ approaches\nEx-post empirical modeling for identifying characteristics of theoretical network models in real world networks\nGlobal and local network statistics\nUse of network measures in mainstream statistical modeling\nEmpirical verification of the functions that better explain the node degree distribution (power vs. exponential functions)\nSpatial networks, but also dynamic networks",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#what-is-scale-and-scaling",
    "href": "src/network_science.html#what-is-scale-and-scaling",
    "title": "Network science, urban laws and scaling",
    "section": "What is scale and scaling",
    "text": "What is scale and scaling\n\n\nScale in geography\nScale in math:\n\n\\(y(x_i)\\) a function of \\(x_i\\) where \\(i\\) is a spatial unit\nIf we scale \\(x\\) by some scalar \\(\\lambda\\), the function scales if its scaled value is proportional to its previous value: \\(y(\\lambda x_i) \\propto y(x_i)\\)\n\\(y(x_i) = x_i^a\\)\n\\(y(\\lambda x_i) = (\\lambda x_i)^a = \\lambda^a x_i^a = \\lambda^a y(x_i)\\)\n➔ Power law",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#laws-of-urban-scaling",
    "href": "src/network_science.html#laws-of-urban-scaling",
    "title": "Network science, urban laws and scaling",
    "section": "Laws of urban scaling",
    "text": "Laws of urban scaling\n\nRegularities\nQuantitative revolution post WW2\nCultural turn\n… today …\n\n\nBased on Batty (2013). See also Bettencourt (2021)",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#metcalfes-law-moores-law",
    "href": "src/network_science.html#metcalfes-law-moores-law",
    "title": "Network science, urban laws and scaling",
    "section": "Metcalfe’s law / Moore’s law",
    "text": "Metcalfe’s law / Moore’s law\n\nAs cities grow…\n… the number of potential connections increases as the square of population.\n\\(C = p(p-1)/2 \\propto p^2\\)",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#von-thunens-law",
    "href": "src/network_science.html#von-thunens-law",
    "title": "Network science, urban laws and scaling",
    "section": "von Thunen’s law",
    "text": "von Thunen’s law\n\nAs cities grow in size …\nland values decline non-linearly from the centre\n\n\nSource: Coe, Kelly, and Yeung (2019)",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#law-of-gravitation-toblers-law",
    "href": "src/network_science.html#law-of-gravitation-toblers-law",
    "title": "Network science, urban laws and scaling",
    "section": "Law of gravitation / Tobler’s law",
    "text": "Law of gravitation / Tobler’s law\n\nAs cities grow…\n.. interactions between them decline with increasing distance\nNewton law of gravitation\n\n\nSource: I, Dennis Nilsson, CC BY 3.0, https://commons.wikimedia.org/w/index.php?curid=3455682",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#zipf-law",
    "href": "src/network_science.html#zipf-law",
    "title": "Network science, urban laws and scaling",
    "section": "Zipf law",
    "text": "Zipf law\n\nAs cities get larger…\n… there are less of them\nRegularity in the distribution of cities within a country\nEmpirical observation and quantification\nHierarchical urban systems:\n\none/a few big cities\nmore medium size cities\nlarge number of very small cities",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#zipf-law-1",
    "href": "src/network_science.html#zipf-law-1",
    "title": "Network science, urban laws and scaling",
    "section": "Zipf law",
    "text": "Zipf law",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#zipf-law-2",
    "href": "src/network_science.html#zipf-law-2",
    "title": "Network science, urban laws and scaling",
    "section": "Zipf law",
    "text": "Zipf law",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#zipf-law-3",
    "href": "src/network_science.html#zipf-law-3",
    "title": "Network science, urban laws and scaling",
    "section": "Zipf law",
    "text": "Zipf law\n\n\n\nSource: O’sullivan (2012) \n\nRank size rule\n\\(pop_i = pop_d r_i^{-a}\\)\nif \\(a=1\\): Zipf law\n\\(pop_i = pop_d / r_i\\)",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#zipf-law-4",
    "href": "src/network_science.html#zipf-law-4",
    "title": "Network science, urban laws and scaling",
    "section": "Zipf law",
    "text": "Zipf law\n\n\n\n\nRank size rule\n\\(pop_i = pop_d r_i^{-a}\\)\nif \\(a=1\\): Zipf law\n\\(pop_i = pop_d / r_i\\)",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#zipf-law-5",
    "href": "src/network_science.html#zipf-law-5",
    "title": "Network science, urban laws and scaling",
    "section": "Zipf law",
    "text": "Zipf law\n\nPrimary cities above what a Zipf law would predict\nNewly industrialised countries\nNo overall consensus why the rank-size rule holds\nStatistical regularity or an underpinning micro-economic process?",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#bettencourt-west-or-marshalls-law",
    "href": "src/network_science.html#bettencourt-west-or-marshalls-law",
    "title": "Network science, urban laws and scaling",
    "section": "Bettencourt-West or Marshall’s law",
    "text": "Bettencourt-West or Marshall’s law\n\nAs cities grow…\n… their average real income (and wealth) increases more than proportionately (Bettencourt et al. 2007)\n\n\\(Y_i = Y_0P_i^\\beta\\)\n\n\\(Y_i\\): material resources (energy or infrastructure) or social activity (wealth, patents, and pollution) in city \\(i\\)\n\\(Y_o\\): normalization constant\n\\(P_i\\): population of city i\n\\(\\beta\\): exponent",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#bettencourt-west-or-marshalls-law-1",
    "href": "src/network_science.html#bettencourt-west-or-marshalls-law-1",
    "title": "Network science, urban laws and scaling",
    "section": "Bettencourt-West or Marshall’s law",
    "text": "Bettencourt-West or Marshall’s law\n\n\n\nSource: Bettencourt et al. (2007) \n\n\nNot surprisingly another straight line\nAnother power law",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#bettencourt-west-or-marshalls-law-2",
    "href": "src/network_science.html#bettencourt-west-or-marshalls-law-2",
    "title": "Network science, urban laws and scaling",
    "section": "Bettencourt-West or Marshall’s law",
    "text": "Bettencourt-West or Marshall’s law\n\nSource: Bettencourt et al. (2007)",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#bettencourt-west-or-marshalls-law-3",
    "href": "src/network_science.html#bettencourt-west-or-marshalls-law-3",
    "title": "Network science, urban laws and scaling",
    "section": "Bettencourt-West or Marshall’s law",
    "text": "Bettencourt-West or Marshall’s law\n\n\n\n\n An average urban dweller in the capital, Lisbon, has approximately twice as many reciprocated mobile phone contacts, k, as an average individual in the rural town of Lixa.\nSource: Bettencourt (2021)",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#bettencourt-west-or-marshalls-law-4",
    "href": "src/network_science.html#bettencourt-west-or-marshalls-law-4",
    "title": "Network science, urban laws and scaling",
    "section": "Bettencourt-West or Marshall’s law",
    "text": "Bettencourt-West or Marshall’s law\n\n\n\n\n\n\n\\(Y=3P^b\\)\n300 random observation\nPlotting the results\nEconomies of scale\n\\(b&lt;1\\) decreasing returns to scale\n\\(b=1\\) constant returns\n\\(b&gt;1\\) increasing returns\nSF networks, economies of scale?",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#epilogue",
    "href": "src/network_science.html#epilogue",
    "title": "Network science, urban laws and scaling",
    "section": "Epilogue",
    "text": "Epilogue\nBettencourt (2021):\n\nCities, of course, do not really have their own dynamics; they depend on decisions made by people, corporations, governments, and others. The aggregate statistics of all their decisions will therefore emerge as key and provide another con- nection to the uses of information in urban science.",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/network_science.html#references",
    "href": "src/network_science.html#references",
    "title": "Network science, urban laws and scaling",
    "section": "References",
    "text": "References\n\n\n\n\n\n\n\n\nAlbert, Réka, Hawoong Jeong, and Albert-László Barabási. 2000. “Error and Attack Tolerance of Complex Networks.” Nature 406 (6794): 378–82.\n\n\nBarabási, Albert-László, and Réka Albert. 1999. “Emergence of Scaling in Random Networks.” Science 286 (5439): 509–12.\n\n\nBatty, Michael. 2013. The New Science of Cities. MIT press.\n\n\nBettencourt, Luı́s MA. 2021. “Introduction to Urban Science: Evidence and Theory of Cities as Complex Systems.”\n\n\nBettencourt, Luı́s MA, José Lobo, Dirk Helbing, Christian Kühnert, and Geoffrey B West. 2007. “Growth, Innovation, Scaling, and the Pace of Life in Cities.” Proceedings of the National Academy of Sciences 104 (17): 7301–6.\n\n\nCoe, Neil M, Philip F Kelly, and Henry WC Yeung. 2019. Economic Geography: A Contemporary Introduction. John Wiley & Sons.\n\n\nErdős, Paul, Alfréd Rényi, et al. 1960. “On the Evolution of Random Graphs.” Publ. Math. Inst. Hung. Acad. Sci 5 (1): 17–60.\n\n\nO’sullivan, Arthur. 2012. “Urban Economics 8th Ed.”\n\n\nTorres, Sonia H, Marı́a Montes de Oca, Eduardo Loeb, Priva Zabner-Oziel, Valentina Wallis, and Noelina Hernández. 2009. “Isoenzimas de Lactatodeshidrogenasa En El músculo Esquelético de Pacientes Con EPOC.” Archivos de Bronconeumologı́a 45 (2): 75–80.\n\n\nWatts, Duncan J, and Steven H Strogatz. 1998. “Collective Dynamics of ‘Small-World’networks.” Nature 393 (6684): 440–42.",
    "crumbs": [
      "Lectures",
      "Network science, urban laws and scaling"
    ]
  },
  {
    "objectID": "src/smart_cities.html#outline",
    "href": "src/smart_cities.html#outline",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "Outline",
    "text": "Outline\n\nBig data vs. just data\nSmart city\nUrban dashboards\nDigital twins",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#big-data-vs.-just-data",
    "href": "src/smart_cities.html#big-data-vs.-just-data",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "Big data vs. just data",
    "text": "Big data vs. just data\n\nDigital traces human activities leave behind\nAccidental (Arribas-Bel 2014)\nWhy?\nComputing power\nDigital turn\nGeospatial technologies [important for urban researchers]",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#big-data-vs.-just-data-1",
    "href": "src/smart_cities.html#big-data-vs.-just-data-1",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "Big data vs. just data",
    "text": "Big data vs. just data\n\n\nVolume [how big is big?]\nVelocity, being created in or near real time\nVariety, being structured and unstructured in nature\nExhaustive in scope, capture entire populations or systems\nFine-grained in resolution\nRelational in nature, common fields that enable the merging of different data sets\nFlexible, extensionable (can add new fields easily) and scalable (can expand in size rapidly) (Kitchin 2013).\n\nOr, whatever doesn’t fit in an excel spreadsheet (Batty, anecdotal)",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#big-data-vs.-just-data-2",
    "href": "src/smart_cities.html#big-data-vs.-just-data-2",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "Big data vs. just data",
    "text": "Big data vs. just data\n\nBiases\nNeed for new methods\nAccidental\nBig data can speak for themselves. Not really (Kitchin 2013)",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#smart-cities-different-approaces",
    "href": "src/smart_cities.html#smart-cities-different-approaces",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "Smart cities, different approaces",
    "text": "Smart cities, different approaces\nThe digital technologies approach\n\nUrban infrastructure and services are managed computationally\nNetworked digital instrumentation embedded into the urban fabric\nContinuous streams of data that dynamically feed into management systems and control rooms\nNew forms of governmentality\n\n\nBased on Kitchin (2019)",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#smart-cities-different-approaches",
    "href": "src/smart_cities.html#smart-cities-different-approaches",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "Smart cities, different approaches",
    "text": "Smart cities, different approaches\nThe outputs approach\n\nStrategic use of information and communications technology (ICT)\n➔ smarter citizens, workers, policy, and programs\n➔ innovation, economic development, and entrepreneurship\n➔ urban resilience and sustainability\n\n\nBased on Kitchin (2019)",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#smart-cities-different-approaches-1",
    "href": "src/smart_cities.html#smart-cities-different-approaches-1",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "Smart cities, different approaches",
    "text": "Smart cities, different approaches\nThe just approach\n\nICT-led, citizen-centric model of development\n➔ social innovation and social justice, civic engagement and activism\n➔ transparent and accountable governance\n\n\nBased on Kitchin (2019)",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#smart-cities-different-approaches-2",
    "href": "src/smart_cities.html#smart-cities-different-approaches-2",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "Smart cities, different approaches",
    "text": "Smart cities, different approaches\nIn reality…\n… a blend of all these approached\nRio de Janeiro, Brazil: The first smart city\n\n Source: Centro De Operacoes Prefeitura Do Rio",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#smart-cities-and-data",
    "href": "src/smart_cities.html#smart-cities-and-data",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "Smart cities and data",
    "text": "Smart cities and data\n\n(Smart) cities generate much more data nowadays\n\ne-government systems, city operating systems, centralized control rooms, digital surveillance, predictive policing, intelligent transport systems, smart grids, sensor networks, building management systems, civic apps … (Kitchin and Moore-Cherry 2021)",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#smart-cities-and-data-1",
    "href": "src/smart_cities.html#smart-cities-and-data-1",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "Smart cities and data",
    "text": "Smart cities and data\n\nLocal authorities are under pressure to release open data for:\n\npublic scrutiny\ncivic apps\n\nData reuse:\n\ninternally facing\nexternally facing",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#dashboards",
    "href": "src/smart_cities.html#dashboards",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "Dashboards",
    "text": "Dashboards\n\nA visual display of the most important information needed to achieve one or more objectives; a consolidated and arranged on a single screen so the information can be monitored at a glance (Few and Edge 2007)",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#dashboards-1",
    "href": "src/smart_cities.html#dashboards-1",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "Dashboards",
    "text": "Dashboards\n\nTransparency, open government philosophy, accountability (Young, Kitchin, and Naji 2022)\nImprove user’s ’span of control of large and complex data\nShare outputs",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#dashboards-2",
    "href": "src/smart_cities.html#dashboards-2",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "Dashboards",
    "text": "Dashboards\n\nNot just neutral, technical tools\nTranslators and engines rather than mirrors\nReductive in nature (vs. the complex nature of cities)\nDecontextualize cities (Kitchin, Maalsen, and McArdle 2016)",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#london-dashboard",
    "href": "src/smart_cities.html#london-dashboard",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "London dashboard",
    "text": "London dashboard\n\n\n Source: https://citydashboard.org/london/",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#nyc-dashboard",
    "href": "src/smart_cities.html#nyc-dashboard",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "NYC Dashboard",
    "text": "NYC Dashboard\n\n Source: https://datausa.io/profile/geo/new-york-ny",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#digital-twins",
    "href": "src/smart_cities.html#digital-twins",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "Digital twins",
    "text": "Digital twins\n\n\nA mirror image of a physical process that is articulated alongside the process in question, usually matching exactly the operation of the physical process which takes place in real time\n\n\nA variety of digital simulation models that run alongside real-time processes that pertain to social and economic systems as well as physical systems\n\n Models are simplifications not replications of the real thing\n\nBased on Batty (2018)",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#digital-twins-1",
    "href": "src/smart_cities.html#digital-twins-1",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "Digital twins",
    "text": "Digital twins\n\n\n  Source: (Bolton et al. 2018)",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/smart_cities.html#references",
    "href": "src/smart_cities.html#references",
    "title": "Smart cities, urban big data, digital twins and other buzz terms",
    "section": "References",
    "text": "References\n\n\n\n\n\n\n\n\nArribas-Bel, Daniel. 2014. “Accidental, Open and Everywhere: Emerging Data Sources for the Understanding of Cities.” Applied Geography 49: 45–53.\n\n\nBatty, Michael. 2018. “Digital Twins.” Environment and Planning B: Urban Analytics and City Science. SAGE Publications Sage UK: London, England.\n\n\nBolton, Alexandra, Lorraine Butler, Ian Dabson, Mark Enzer, Matthew Evans, Tim Fenemore, Fergus Harradence, et al. 2018. “Gemini Principles.”\n\n\nFew, Stephen, and Perceptual Edge. 2007. “Dashboard Confusion Revisited.” Perceptual Edge, 1–6.\n\n\nKitchin, Rob. 2013. “Big Data and Human Geography: Opportunities, Challenges and Risks.” Dialogues in Human Geography 3 (3): 262–67.\n\n\n———. 2019. “The Timescape of Smart Cities.” Annals of the American Association of Geographers 109 (3): 775–90.\n\n\nKitchin, Rob, Sophia Maalsen, and Gavin McArdle. 2016. “The Praxis and Politics of Building Urban Dashboards.” Geoforum 77: 93–101.\n\n\nKitchin, Rob, and Niamh Moore-Cherry. 2021. “Fragmented Governance, the Urban Data Ecosystem and Smart City-Regions: The Case of Metropolitan Boston.” Regional Studies 55 (12): 1913–23.\n\n\nYoung, Gareth W, Rob Kitchin, and Jeneen Naji. 2022. “Building City Dashboards for Different Types of Users.” In Sustainable Smart City Transitions, 259–79. Routledge.",
    "crumbs": [
      "Lectures",
      "Smart cities, urban big data, digital twins and other buzz terms"
    ]
  },
  {
    "objectID": "src/readings.html",
    "href": "src/readings.html",
    "title": "Key readings",
    "section": "",
    "text": "All lecture slides include a reference list. Please go through these materials.\nA indicative list of key readings include:\nAlso, the Big Book of R is a great collection of R related books. Some of these include:\nPlease don’t limit your reading in the following list.",
    "crumbs": [
      "Content",
      "Key readings"
    ]
  },
  {
    "objectID": "src/description.html",
    "href": "src/description.html",
    "title": "Unit description and aims",
    "section": "",
    "text": "This unit introduces students to the research fields of Urban Analytics and City Science. It enables them to utilise cutting-edge methods from these fields and pair them with new sources of data to answer urging research questions about cities. Moreover, the students will develop a critical understanding of these tools and data as well as their applicability and value for urban research, planning and urban policy making. Emphasis will be placed on the interactions between digital technologies and urban space and the smart city agenda.\nEmphasis will be placed on the network understanding of our cities. Networks have long formed a distinctive element of urban research. Various sub-fields of geography, such as transport, economic and urban geography, are heavily based on networks both from a conceptual and an analytical point of view. Moreover, the digital revolution and developments related to social media and connectivity as well as heightened flows of information within and between urban regions, have greatly enhanced the relevance of a network approach to contemporary socio-economic and cultural trends. This module will approach the above issues both from a theoretical and practical perspective.\nThe first part of this unit will be dedicated to concepts and tools from social network analysis, including hands-on practicals. This part will provide the fundamental knowledge of this module. Networks analysis will then lead to the concept of scaling in urban science, which will be linked with essential urban economic elements such as agglomeration economies and urban hierarchies. The practical knowledge of network analysis will be used as a stepping stone to understand ideas and methods from the field of transport geography regarding modelling flows within and between cities. Common thread here is the network structure which is an essential element of both transport geography and social network analysis. The empirical element of this part will deal with basic concepts such as gravity models as well as connectivity and accessibility measures.\nThe unit aims:",
    "crumbs": [
      "Content",
      "Unit description and aims"
    ]
  },
  {
    "objectID": "src/description.html#intended-learning-outcomes",
    "href": "src/description.html#intended-learning-outcomes",
    "title": "Unit description and aims",
    "section": "Intended Learning Outcomes",
    "text": "Intended Learning Outcomes\n\nBe able to creatively utilise cutting edge methods from Urban Analytics and Urban Science in order to answer urban research questions.\nBe able to critically assess the value of and utilise new sources of big data for urban research.\nIdentify key concepts and theories of digital transformations and smart cities.\nPresent the results of statistical analysis in a clear, cogent manner, using effective visualizations, tables, and written argument.",
    "crumbs": [
      "Content",
      "Unit description and aims"
    ]
  },
  {
    "objectID": "src/description.html#assessment-details",
    "href": "src/description.html#assessment-details",
    "title": "Unit description and aims",
    "section": "Assessment details",
    "text": "Assessment details\nOne 3500-word report (100% of the unit mark) for an urban data analysis project. The report will be written in a reproducible manner and will include the necessary code for the data analysis and the outputs (e.g. an Rmarkddown document).",
    "crumbs": [
      "Content",
      "Unit description and aims"
    ]
  },
  {
    "objectID": "src/description.html#software",
    "href": "src/description.html#software",
    "title": "Unit description and aims",
    "section": "Software",
    "text": "Software\nAll the analysis will be done using R and RStudio.",
    "crumbs": [
      "Content",
      "Unit description and aims"
    ]
  },
  {
    "objectID": "src/accessibility_full.html",
    "href": "src/accessibility_full.html",
    "title": "Accessibility in practice",
    "section": "",
    "text": "To run this pratical you need to have an RStudio project as discussed in the previous practical.\n\nlibrary(tidyverse)\nlibrary(accessibility)\nlibrary(sf)\nlibrary(kableExtra)\nlibrary(rprojroot)\nlibrary(osrm)\n\npath &lt;- find_rstudio_root_file()\n\n# This is the project path\nknitr::opts_chunk$set(include=TRUE, message=FALSE, warning=FALSE)",
    "crumbs": [
      "Practicals",
      "Accessibility in practice"
    ]
  },
  {
    "objectID": "src/accessibility_full.html#setup",
    "href": "src/accessibility_full.html#setup",
    "title": "Accessibility in practice",
    "section": "",
    "text": "To run this pratical you need to have an RStudio project as discussed in the previous practical.\n\nlibrary(tidyverse)\nlibrary(accessibility)\nlibrary(sf)\nlibrary(kableExtra)\nlibrary(rprojroot)\nlibrary(osrm)\n\npath &lt;- find_rstudio_root_file()\n\n# This is the project path\nknitr::opts_chunk$set(include=TRUE, message=FALSE, warning=FALSE)",
    "crumbs": [
      "Practicals",
      "Accessibility in practice"
    ]
  },
  {
    "objectID": "src/accessibility_full.html#aims-of-the-practical",
    "href": "src/accessibility_full.html#aims-of-the-practical",
    "title": "Accessibility in practice",
    "section": "Aims of the practical",
    "text": "Aims of the practical\nThe aim of this practical is to calculate different accessibility indicators. For a brief overview about accessibility, please have a look at (Rodrigue 2020) (for example here ). For in depth reviews have a look at Holl (2007), El-Geneidy and Levinson (2022) and Shi et al. (2020) as well as at some older and well-cited papers such as Geurs and Van Wee (2004) and Bruinsma and Rietveld (1998). The below typology of accessibility concepts is from Holl (2007).\n\nNetwork access\n\ndistance to access the network\ntravel opportunities\n\nTravel cost measures\n\nnetwork access + distance/time travelled on the network\n\nMarket potential accessibility\n\ndestinations at greater distance provide diminishing opportunities\n\\(Acc_i = \\sum_j\\frac{W_j} {c_{ij}^a}\\)\n\n\nAmong other R packages, the practical is based on the accessibility package. Some of the below materials are based on the package’s vignette.\nLet’s start with using the toy data that comes with the accessibility package. As you can see below, the data comes in R’s native data format called .Rds and, therefore, we use the relevant function to read it – readRDS().\nThe first data object we are using is the travel time matrix between all potential origins and destinations in city of Belo Horizonte, Brazil. As you can see, the matrix is stored in a long format and not as an \\(n*n\\) matrix. If you check the dimension of that object you will understand what I mean (dim(travel_matrix)).\n\ndata_dir &lt;- system.file(\"extdata\", package = \"accessibility\")\n\ntravel_matrix &lt;- readRDS(file.path(data_dir, \"travel_matrix.rds\")) \n\nhead(travel_matrix)\n\n           from_id           to_id travel_time\n            &lt;char&gt;          &lt;char&gt;       &lt;num&gt;\n1: 89a88cdb57bffff 89a88cdb57bffff         5.8\n2: 89a88cdb57bffff 89a88cdb597ffff        47.0\n3: 89a88cdb57bffff 89a88cdb5b3ffff        48.0\n4: 89a88cdb57bffff 89a88cdb5cfffff        47.0\n5: 89a88cdb57bffff 89a88cd909bffff        64.0\n6: 89a88cdb57bffff 89a88cd90b7ffff        59.0\n\n\nThen, we are loading the characteristics of each location. As you can see, the id records match with the from_id and to_id from the travel_matrix.\n\nland_use_data &lt;- readRDS(file.path(data_dir, \"land_use_data.rds\"))\nhead(land_use_data)\n\n                id population  jobs schools income_per_capita income_decile\n            &lt;char&gt;      &lt;int&gt; &lt;int&gt;   &lt;int&gt;             &lt;num&gt;        &lt;fctr&gt;\n1: 89a881a5a2bffff        381   180       0           22369.1            10\n2: 89a881a5a2fffff        269   134       0            3205.1             9\n3: 89a881a5a67ffff        929   143       0           11394.0            10\n4: 89a881a5a6bffff        249    61       0            3659.8             9\n5: 89a881a5a6fffff        176    11       0            4905.1            10\n6: 89a881a5b03ffff        681  1071       0            2200.2             8\n\n\nThe first accessibility function we are using is cost_to_closest(). As per its name, it calculates the minimum travel cost to the closest n number of opportunities. In our example, as travel cost we understand the travel time between origins and destinations included in the column travel_time from the travel_matrix object. We are only interested in the closest (n=1) opportunity, which in this example is a school.\n\nmtc &lt;- cost_to_closest(\n  travel_matrix,\n  land_use_data,\n  opportunity = \"schools\",\n  travel_cost = \"travel_time\",\n  n = 1\n)\n\nhead(mtc)\n\nKey: &lt;id&gt;\n                id travel_time\n            &lt;char&gt;       &lt;num&gt;\n1: 89a881a5a2bffff          29\n2: 89a881a5a2fffff          24\n3: 89a881a5a67ffff          28\n4: 89a881a5a6bffff          33\n5: 89a881a5a6fffff          32\n6: 89a881a5b03ffff          17\n\n\nThe next measure is the total number of opportunities (in other words, the cumulative opportunities) within a cut-off of the travel cost. So, the below provides the number of jobs accessible within 30 minutes of travel time.\n\ncum_cutoff &lt;- cumulative_cutoff(\n  travel_matrix,\n  land_use_data,\n  opportunity = \"jobs\",\n  travel_cost = \"travel_time\",\n  cutoff = 30\n)\n\nhead(cum_cutoff)\n\n                id  jobs\n            &lt;char&gt; &lt;int&gt;\n1: 89a881a5a2bffff 14561\n2: 89a881a5a2fffff 29452\n3: 89a881a5a67ffff 16647\n4: 89a881a5a6bffff 10700\n5: 89a881a5a6fffff  6669\n6: 89a881a5b03ffff 37029\n\n\nIf the above was a form of active accessibility – that is how many opportunities one can access from their location – the below offers a passive form of accessibility – that is how many individuals can be reached from each destination within a cuttof. The latter is based on travel_time in the below.\n\npassive_cum_cutoff &lt;- cumulative_cutoff(\n  travel_matrix,\n  land_use_data,\n  opportunity = \"population\",\n  travel_cost = \"travel_time\",\n  cutoff = 30,\n  active = FALSE\n)\n\nhead(passive_cum_cutoff)\n\n                id population\n            &lt;char&gt;      &lt;int&gt;\n1: 89a881a5a2bffff      11053\n2: 89a881a5a2fffff      31903\n3: 89a881a5a67ffff      12488\n4: 89a881a5a6bffff      14474\n5: 89a881a5a6fffff      15053\n6: 89a881a5b03ffff      69582\n\n\nLast, but not least we can calculate the gravity-based accessibility indicators, or, in other words, potential accessibility indicators. This is the same measure as the example we discussed during the class. The intuition is that the furthest away each opportunity is, the less important it becomes. So, the accessibility of a location \\(i\\) is equal to the sum of all opportunities available divided – in other words discounted – by the distance or the cost to reach them. The negative_exp function can take different decay functions (see here). We know from previous studies that the exponential function represents better shorter interactions (e.g. within cities) while the power function works better for longer distance interactions (e.g. migrations flows) Oshan (2021).\n\\(Acc_{i} = \\sum_j \\frac{W_j}{d_{ij}^2}\\)\n\nnegative_exp &lt;- gravity(\n  travel_matrix,\n  land_use_data,\n  opportunity = \"schools\",\n  travel_cost = \"travel_time\",\n  decay_function = decay_exponential(decay_value = 0.2)\n)\n\nhead(negative_exp)\n\n                id    schools\n            &lt;char&gt;      &lt;num&gt;\n1: 89a88cdb57bffff 0.03041853\n2: 89a88cdb597ffff 1.15549493\n3: 89a88cdb5b3ffff 0.56519126\n4: 89a88cdb5cfffff 0.19852152\n5: 89a88cd909bffff 0.41378042\n6: 89a88cd90b7ffff 0.95737555\n\n\nAnd now we can plot these metrics. The grid object is a toy spatial dataset of the places we calculate the above accessibility indicators. We first load these spatial data, merge them with the acessibility indicator we want to plot and then we plot these data.\n\ngrid &lt;- system.file(\"extdata/grid_bho.rds\", package = \"accessibility\")\ngrid &lt;- readRDS(grid)\n\nspatial_data &lt;- merge(grid, cum_cutoff, by = \"id\")\n\nggplot() +\n  geom_sf(data = spatial_data, aes(fill = jobs), color = NA) +\n  labs(\n    title = \"Job accessibility by transit in under 30 min.\",\n    fill = \"Accessible jobs\"\n  ) +\n  scale_fill_viridis_c() +\n  theme_void()",
    "crumbs": [
      "Practicals",
      "Accessibility in practice"
    ]
  },
  {
    "objectID": "src/accessibility_full.html#london-example",
    "href": "src/accessibility_full.html#london-example",
    "title": "Accessibility in practice",
    "section": "London example",
    "text": "London example\nAll the above were based on the data that came together with the accessibility package. Let’s repeat this exercise using some real world data from data.london.gov.uk. Jobs and population per Local Authority represent the opportunities.\n\njobs &lt;- read_csv(\"https://data.london.gov.uk/download/jobs-and-job-density-borough/79e85749-e38d-4bb6-8327-c60c6be27222/Jobs_and_Job_Density.csv\") %&gt;% \n  # filter(year == 2020) %&gt;%  # I am only using 2020 data. Remove this line \n  #                           # to see what will happen to the data.\n  select(Code, Area, '2020') %&gt;% \n  rename(number_of_jobs = '2020') %&gt;% \n  filter(!is.na(Code)) %&gt;% \n  glimpse()\n\nRows: 49\nColumns: 3\n$ Code           &lt;chr&gt; \"E09000001\", \"E09000002\", \"E09000003\", \"E09000004\", \"E0…\n$ Area           &lt;chr&gt; \"City of London\", \"Barking and Dagenham\", \"Barnet\", \"Be…\n$ number_of_jobs &lt;dbl&gt; 630000, 71000, 163000, 85000, 149000, 129000, 391000, 1…\n\npop &lt;- read_csv(\"https://data.london.gov.uk/download/land-area-and-population-density-ward-and-borough/77e9257d-ad9d-47aa-aeed-59a00741f301/housing-density-borough.csv\") %&gt;% \n  filter(Year == 2020) %&gt;% # This is a projection, but it will work for now\n  glimpse()\n\nRows: 36\nColumns: 10\n$ Code                            &lt;chr&gt; \"E09000001\", \"E09000002\", \"E09000003\",…\n$ Name                            &lt;chr&gt; \"City of London\", \"Barking and Dagenha…\n$ Year                            &lt;dbl&gt; 2020, 2020, 2020, 2020, 2020, 2020, 20…\n$ Source                          &lt;chr&gt; \"GLA Population Projections\", \"GLA Pop…\n$ Population                      &lt;dbl&gt; 8046, 218367, 407148, 254970, 343853, …\n$ `Inland_Area _Hectares`         &lt;dbl&gt; 290.4, 3610.8, 8674.8, 6058.1, 4323.3,…\n$ Total_Area_Hectares             &lt;dbl&gt; 314.9, 3779.9, 8674.8, 6428.6, 4323.3,…\n$ Population_per_hectare          &lt;dbl&gt; 27.7, 60.5, 46.9, 42.1, 79.5, 22.4, 11…\n$ Square_Kilometres               &lt;dbl&gt; 2.9, 36.1, 86.7, 60.6, 43.2, 150.1, 21…\n$ Population_per_square_kilometre &lt;dbl&gt; 2770.7, 6047.6, 4693.4, 4208.8, 7953.6…\n\n\nJobs and pop include observations for spatial units other than London’s 33 Local Authorities. Explore pop and jobs to see that. Therefore, we use the inner_join() function to join them. See here how it works. You should be able to understand the different functions to join data.\n\ndf &lt;- inner_join(jobs, pop, by = c(\"Code\" = \"Code\")) %&gt;% \n  filter(Area != \"London\") %&gt;% \n  rename(id = Code) \n\nTo produce a nicer looking table I am using here the kableExtra package. It just adds some nice styling for html outputs.\n\ndf %&gt;% kbl() %&gt;%\n  kable_styling(full_width = F) %&gt;%   #Nice(r) table\n  scroll_box(width = \"900px\", height = \"400px\")\n\n\n\n\n\nid\nArea\nnumber_of_jobs\nName\nYear\nSource\nPopulation\nInland_Area _Hectares\nTotal_Area_Hectares\nPopulation_per_hectare\nSquare_Kilometres\nPopulation_per_square_kilometre\n\n\n\n\nE09000001\nCity of London\n630000\nCity of London\n2020\nGLA Population Projections\n8046\n290.4\n314.9\n27.7\n2.9\n2770.7\n\n\nE09000002\nBarking and Dagenham\n71000\nBarking and Dagenham\n2020\nGLA Population Projections\n218367\n3610.8\n3779.9\n60.5\n36.1\n6047.6\n\n\nE09000003\nBarnet\n163000\nBarnet\n2020\nGLA Population Projections\n407148\n8674.8\n8674.8\n46.9\n86.7\n4693.4\n\n\nE09000004\nBexley\n85000\nBexley\n2020\nGLA Population Projections\n254970\n6058.1\n6428.6\n42.1\n60.6\n4208.8\n\n\nE09000005\nBrent\n149000\nBrent\n2020\nGLA Population Projections\n343853\n4323.3\n4323.3\n79.5\n43.2\n7953.6\n\n\nE09000006\nBromley\n129000\nBromley\n2020\nGLA Population Projections\n336395\n15013.5\n15013.5\n22.4\n150.1\n2240.6\n\n\nE09000007\nCamden\n391000\nCamden\n2020\nGLA Population Projections\n257384\n2178.9\n2178.9\n118.1\n21.8\n11812.4\n\n\nE09000008\nCroydon\n144000\nCroydon\n2020\nGLA Population Projections\n400272\n8650.4\n8650.4\n46.3\n86.5\n4627.2\n\n\nE09000009\nEaling\n160000\nEaling\n2020\nGLA Population Projections\n361833\n5554.4\n5554.4\n65.1\n55.5\n6514.3\n\n\nE09000010\nEnfield\n126000\nEnfield\n2020\nGLA Population Projections\n342993\n8083.2\n8220.1\n42.4\n80.8\n4243.3\n\n\nE09000011\nGreenwich\n102000\nGreenwich\n2020\nGLA Population Projections\n292466\n4733.4\n5043.9\n61.8\n47.3\n6178.8\n\n\nE09000012\nHackney\n152000\nHackney\n2020\nGLA Population Projections\n289488\n1904.9\n1904.9\n152.0\n19.0\n15197.0\n\n\nE09000013\nHammersmith and Fulham\n165000\nHammersmith and Fulham\n2020\nGLA Population Projections\n190721\n1639.7\n1715.4\n116.3\n16.4\n11631.1\n\n\nE09000014\nHaringey\n94000\nHaringey\n2020\nGLA Population Projections\n288913\n2959.8\n2959.8\n97.6\n29.6\n9761.1\n\n\nE09000015\nHarrow\n90000\nHarrow\n2020\nGLA Population Projections\n261348\n5046.3\n5046.3\n51.8\n50.5\n5179.0\n\n\nE09000016\nHavering\n95000\nHavering\n2020\nGLA Population Projections\n261830\n11235.0\n11445.7\n23.3\n112.3\n2330.5\n\n\nE09000017\nHillingdon\n206000\nHillingdon\n2020\nGLA Population Projections\n316253\n11570.1\n11570.1\n27.3\n115.7\n2733.4\n\n\nE09000018\nHounslow\n169000\nHounslow\n2020\nGLA Population Projections\n284358\n5597.8\n5658.5\n50.8\n56.0\n5079.8\n\n\nE09000019\nIslington\n247000\nIslington\n2020\nGLA Population Projections\n242827\n1485.7\n1485.7\n163.4\n14.9\n16344.7\n\n\nE09000020\nKensington and Chelsea\n149000\nKensington and Chelsea\n2020\nGLA Population Projections\n160794\n1212.4\n1238.4\n132.6\n12.1\n13262.4\n\n\nE09000021\nKingston upon Thames\n89000\nKingston upon Thames\n2020\nGLA Population Projections\n182728\n3726.1\n3726.1\n49.0\n37.3\n4904.0\n\n\nE09000022\nLambeth\n175000\nLambeth\n2020\nGLA Population Projections\n340324\n2681.0\n2724.9\n126.9\n26.8\n12693.9\n\n\nE09000023\nLewisham\n84000\nLewisham\n2020\nGLA Population Projections\n317465\n3514.9\n3532.0\n90.3\n35.1\n9031.9\n\n\nE09000024\nMerton\n97000\nMerton\n2020\nGLA Population Projections\n212658\n3762.5\n3762.5\n56.5\n37.6\n5652.1\n\n\nE09000025\nNewham\n136000\nNewham\n2020\nGLA Population Projections\n363552\n3619.8\n3857.4\n100.4\n36.2\n10043.3\n\n\nE09000026\nRedbridge\n90000\nRedbridge\n2020\nGLA Population Projections\n312264\n5641.9\n5644.2\n55.3\n56.4\n5534.7\n\n\nE09000027\nRichmond upon Thames\n100000\nRichmond upon Thames\n2020\nGLA Population Projections\n201713\n5740.7\n5876.1\n35.1\n57.4\n3513.7\n\n\nE09000028\nSouthwark\n310000\nSouthwark\n2020\nGLA Population Projections\n330290\n2886.2\n2991.3\n114.4\n28.9\n11443.8\n\n\nE09000029\nSutton\n82000\nSutton\n2020\nGLA Population Projections\n211297\n4384.7\n4384.7\n48.2\n43.8\n4819.0\n\n\nE09000030\nTower Hamlets\n321000\nTower Hamlets\n2020\nGLA Population Projections\n328043\n1978.1\n2157.9\n165.8\n19.8\n16583.5\n\n\nE09000031\nWaltham Forest\n85000\nWaltham Forest\n2020\nGLA Population Projections\n290024\n3880.8\n3880.8\n74.7\n38.8\n7473.3\n\n\nE09000032\nWandsworth\n147000\nWandsworth\n2020\nGLA Population Projections\n332731\n3426.4\n3522.0\n97.1\n34.3\n9710.8\n\n\nE09000033\nWestminster\n747000\nWestminster\n2020\nGLA Population Projections\n259981\n2148.7\n2203.0\n121.0\n21.5\n12099.5\n\n\n\n\n\n\n\nNext, we are bringing the spatial data – that is the polygons – for London’s Local Authorities. We start by downloading all the polygons for all Local Authorities in the country. Please go to this webpage, download the geojson file and save it to the appropriate data folder within your project directory.\nHowever, we don’t need all the Local Authorities, but instead we only need to ones within London. Therefore we use the filter option to select only the Local Authorities which are included within – this is the %in% operator – the df$id column. Finally, we create a new object which only includes the centroids of these polygons. Why are we doing this? Because we need to calculate distances and accessibility metrics for specific points and we will use these points as representative for each Local Authority.\n\n\n\n\n\n\nTip\n\n\n\nDo you see any problems with this approach?\n\n\n\npath.shape &lt;- paste0(path, \"/data/Local_Authority_Districts_(May_2021)_UK_BFE.geojson\")\n\nlondon &lt;- st_read(path.shape) %&gt;%\n  dplyr::filter(LAD21CD %in% (df$id))\n\nReading layer `LAD_MAY_2021_UK_BFE_V2' from data source \n  `/Users/nw19521/Library/CloudStorage/OneDrive-UniversityofBristol/Bristol/teaching/urban_analytics_city_science/data/Local_Authority_Districts_(May_2021)_UK_BFE.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 374 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -8.649996 ymin: 49.86463 xmax: 1.768937 ymax: 60.86087\nGeodetic CRS:  WGS 84\n\nlondon.centres &lt;- st_centroid(london)\n\nNow we need to actually calculate the distance matrix. We are going to use a real world road network to perform what is known as routing. There is a great discussion about routing and before you move forward I would encourage you to read the relevant section from Lovelace, Nowosad, and Muenchow (2019), which can be found here.\nWe are using the osmr package which can do routing for us. The details of the osrm package can be founf here.\nThe below code creates a distance table between all the london.centres. We are interested in distance measured as time – i.e. duration – by car. The osrm package offers other options too.\n\ndist &lt;- osrmTable(loc = london.centres, \n                  measure = \"duration\",\n                  osrm.profile = \"car\")\n\nThe output of the above is a list with an \\(n*n\\) distance matrix, and a dataframe with the longitude and latitude of the origins and destinations. We are mostly interested in the former, so we start the data wrangling by creating a help dataframe with these distances, or in other words, durations. We then add row and column names using the london.centres names. We can just do that because the matrix follows the same order as the intimal spatial data of Local Authorities. I always like to throw in a dim function just to keep an eye on the dimensions of the objects I create. Indeed, the dist object is a \\(33*33\\) matrix as it should have been.\nThen, we need to convert the \\(n*n\\) matrix to a long format. If you remember, we used to call this format an edge list. There are different way to do this. We can use the ready-made function odmatrix_to_od() from the od package. To see how it works, make sure that the od package is installed and then type the following: od::odmatrix_to_od. This will reveal how the odmatrix_to_od() function works under the hood. As you can see the magic happens by using the following R-base function: as.data.frame(as.table(odmatrix)). Therefore, I just used the below R-base function. You can, of course, use directly the odmatrix_to_od() function.\n\nhelp &lt;- dist$durations \n\n\nrownames(help) &lt;- as.vector(london.centres$LAD21CD)\ncolnames(help) &lt;- as.vector(london.centres$LAD21CD)\n\ndim(dist$durations)\n\n[1] 33 33\n\ndist.df &lt;- as.data.frame(as.table(help)) %&gt;% \n  rename(from_id = Var1,\n         to_id = Var2,\n         travel_time = Freq)\n\nAs before, we calculate the cumulative opportunities for London’s Local Authorities (the centroids to be more accurate) within a cut-off of 20 minutes.\n\nmtc &lt;- cumulative_cutoff(\n  dist.df,\n  df,\n  opportunity = \"number_of_jobs\",\n  travel_cost = \"travel_time\",\n  cutoff = 20\n)\nhead(mtc)\n\n         id number_of_jobs\n1 E09000001        2973000\n2 E09000002         392000\n3 E09000003         496000\n4 E09000004         187000\n5 E09000005         562000\n6 E09000006         357000\n\n\nAnd finally, we plot our accessibility map.\n\nlondon &lt;- merge(london, mtc, by.x = \"LAD21CD\", by.y = \"id\" )\n  \n  \nggplot() +\n  geom_sf(data = london, aes(fill = number_of_jobs), color = NA) +\n  labs(\n    title = \"Job accessibility by driving in under 20 min\",\n    fill = \"Accessible jobs\"\n  ) +\n  scale_fill_viridis_c() +\n  theme_void()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nCan you calculate and plot other accessibility metrics for London?\n\n\n\n\n\n\n\n\nTip\n\n\n\nWhat do we miss by focusing on London’ accessibility?",
    "crumbs": [
      "Practicals",
      "Accessibility in practice"
    ]
  },
  {
    "objectID": "src/network_models.html",
    "href": "src/network_models.html",
    "title": "Network models in practice",
    "section": "",
    "text": "Pay attention on the packages sand and igraphdata. The first one contains all the different network datasets used by (Kolaczyk and Csárdi 2020). Then, the second one contain network data to be used together with the igraph package. More information can be found here and here. Feel free to explore these network data on your own time.\n\nlibrary(tidyverse)\nlibrary(igraph)\n\nlibrary(sand)       \nlibrary(igraphdata)",
    "crumbs": [
      "Practicals",
      "Network models in practice"
    ]
  },
  {
    "objectID": "src/network_models.html#setup",
    "href": "src/network_models.html#setup",
    "title": "Network models in practice",
    "section": "",
    "text": "Pay attention on the packages sand and igraphdata. The first one contains all the different network datasets used by (Kolaczyk and Csárdi 2020). Then, the second one contain network data to be used together with the igraph package. More information can be found here and here. Feel free to explore these network data on your own time.\n\nlibrary(tidyverse)\nlibrary(igraph)\n\nlibrary(sand)       \nlibrary(igraphdata)",
    "crumbs": [
      "Practicals",
      "Network models in practice"
    ]
  },
  {
    "objectID": "src/network_models.html#aims-of-the-practical",
    "href": "src/network_models.html#aims-of-the-practical",
    "title": "Network models in practice",
    "section": "Aims of the practical",
    "text": "Aims of the practical\n\nSimulate network models\nAnalyse their key attributes\nCompare them\n\nigraph enables us to generate networks based on some of the some key network models we discussed. I list below some of these functions:\n\nsample_gnp()\nsample_smallworld()\nsample_pa()\n\nGo to igraph’s webpage and familiarise yourselves with the syntax of these functions.\n\n\n\nTask: Create three networks using these three functions with, let’s say, (n = 500) nodes each.\n\n\nVisualise and compare these networks.\n\n\n\nImportantly, just before you generate a network with one of the above three functions you will need to define a random seed for reproducibility reasons, e.g. set.seed(55).\n\n\n\nQuestion: Without defining a random seed, generate a network as per the above, run some type of quick analysis about this network and then repeat the code by generating a second network with the exact same characteristics. Run the same analysis for the second network. Are the results the same?\n\n\nWhy do we need to define the random seed ?",
    "crumbs": [
      "Practicals",
      "Network models in practice"
    ]
  },
  {
    "objectID": "src/network_models.html#examples-of-modelled-networks",
    "href": "src/network_models.html#examples-of-modelled-networks",
    "title": "Network models in practice",
    "section": "Examples of modelled networks",
    "text": "Examples of modelled networks\n\nsample_gnp(n = 500, p = 0.02) %&gt;% \n  plot(layout=layout_in_circle, vertex.label=NA)\n\n\n\n\n\n\n\nsample_pa(n = 500, directed=FALSE) %&gt;% \n  plot(layout=layout_in_circle, vertex.label=NA)\n\n\n\n\n\n\n\nsample_smallworld(dim = 1, size = 500, nei = 5, p = 0.05) %&gt;% \n  plot(layout=layout_in_circle, vertex.label=NA)\n\n\n\n\n\n\n\nmake_lattice(dim =1, length = 100, nei = 5) %&gt;% \n  plot(vertex.label=NA)",
    "crumbs": [
      "Practicals",
      "Network models in practice"
    ]
  },
  {
    "objectID": "src/apis.html",
    "href": "src/apis.html",
    "title": "APIs and urban data",
    "section": "",
    "text": "Understand the technicalities and the breadth of the urban data landscape\nUnderstand the messiness of real world (urban) data\nAccess programmatically urban data and understand the benefits of such data access practise.",
    "crumbs": [
      "Practicals",
      "APIs and urban data"
    ]
  },
  {
    "objectID": "src/apis.html#aims-of-the-practical",
    "href": "src/apis.html#aims-of-the-practical",
    "title": "APIs and urban data",
    "section": "",
    "text": "Understand the technicalities and the breadth of the urban data landscape\nUnderstand the messiness of real world (urban) data\nAccess programmatically urban data and understand the benefits of such data access practise.",
    "crumbs": [
      "Practicals",
      "APIs and urban data"
    ]
  },
  {
    "objectID": "src/apis.html#apis",
    "href": "src/apis.html#apis",
    "title": "APIs and urban data",
    "section": "APIs",
    "text": "APIs\nApplication Programming Interface (APIs) represent a ‘gate’ or otherwise a platform that enables a client (that is you) to interact with a server (for example opendata.bristol.gov.uk). According to AWS (2022):\n\nIn the context of APIs, the word Application refers to any software with a distinct function. Interface can be thought of as a contract of service between two applications. This contract defines how the two communicate with each other using requests and responses. Their API documentation contains information on how developers are to structure those requests and responses.\n\nThe client’s software (this might be R for example) sends a request to the server requesting specific data. The response is the data the client asked.\nMore commonly, the client might be a mobile phone app (e.g. train network status app) and the server is the network operator’s server.\nAPIs can be private or public types. For more inthe description from AWS (2022) here",
    "crumbs": [
      "Practicals",
      "APIs and urban data"
    ]
  },
  {
    "objectID": "src/apis.html#json-file-format",
    "href": "src/apis.html#json-file-format",
    "title": "APIs and urban data",
    "section": "JSON file format",
    "text": "JSON file format\nAlthough some urban data can be downloaded as a tidy1 table in a .csv format, most APIs will ship data to you in a JSON format.\nAccording to the official JSON website (JSON), JSON\n\nis a lightweight data-interchange format. It is easy for humans to read and write. It is easy for machines to parse and generate. It is based on a subset of the JavaScript Programming Language Standard ECMA-262 3rd Edition - December 1999. JSON is a text format that is completely language independent but uses conventions that are familiar to programmers of the C-family of languages, including C, C++, C#, Java, JavaScript, Perl, Python, and many others. These properties make JSON an ideal data-interchange language.\n\nIt adopts a hierarchical structure such as attribute:value instead of the fixed structure of tidy data. Following Singleton, Spielman, and Folch (2017), such attribute:value pairs might be:\n\n“mean income”:“50000”\n“internet speed”:“35”\n“jobs”:“15000”\n\nThese attributes might be organised hierarchically:\n(“city”:“Bristol,”mean income”: “27000”, “internet speed”: “55”, “jobs”:(“2019”:“15000”, “2020”:“14000”)), (“city”:“Newcastle,”mean income”: “25000”, “internet speed”: “45”, “jobs”:(“2019”:“11000”, “2020”:“10000”))\nAlthough this format is more verbose (attribute names are repeated) it is more flexible (not all observations need to have all attributes) (Singleton, Spielman, and Folch 2017)",
    "crumbs": [
      "Practicals",
      "APIs and urban data"
    ]
  },
  {
    "objectID": "src/apis.html#practical-example-with-api",
    "href": "src/apis.html#practical-example-with-api",
    "title": "APIs and urban data",
    "section": "Practical example with API",
    "text": "Practical example with API\nopendata.bristol.gov.uk offers a lot of data about Bristol. For this example, let’s try to work with Jobs by Ward (by industry) in Bristol 2020. You can also access these data by searching for ‘Jobs by industry in Bristol by Ward’. Use the filter icon to filter for 2020 data. As you can see, this is a small data set with \\(34\\) observations representing Bristol’s \\(34\\) Wards. You can visualise these data with the Table tab on the right hand-side and even download a .csv with these data. To begin with, do both of these things.\nThen, go to the More Info icon, scroll down on the left hand side and click on I want to use this. You can find the relevant link under View API Resources. We are interested in the GeoJSON. You can view the data in this format and also copy the links to access these data programmatically. The weird output on your screen is the data you requested in JSON format. If you carefully read the URL from right to left you can see some logic on how this URL is built.\n\n\n\nQuestion: Why should you go through all these efforts to build an API request and download the data in JSON file format instead of just downloading a .csv file?\n\n\n\nSo, let’s try to access these data programmatically. First, we need to load the relevant R packages\n\nlibrary(tidyverse)\nlibrary(jsonlite)\nlibrary(sf)\n\nTo access the data, we are going to use the function fromJSON() from the jsonlite package. Please check the syntax of this function as well as the other function of this package.\n\ndat &lt;- jsonlite::fromJSON(\"https://services2.arcgis.com/a4vR8lmmksFixzmB/ArcGIS/rest/services/Jobs_by_Ward_(by_industry)_in_Bristol_2020/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson\", flatten = TRUE)\n\n#dat &lt;- jsonlite::fromJSON(\"https://maps2.bristol.gov.uk/server2/rest/services/ext/ward_profiles/MapServer/9/query?where=1%3D1&outFields=*&outSR=4326&f=json\", flatten = TRUE)\n\noa.ew &lt;- st_read(\"https://maps2.bristol.gov.uk/server2/rest/services/ext/ward_profiles/MapServer/9/query?where=1%3D1&outFields=*&outSR=4326&f=json\")\n\nReading layer `ESRIJSON' from data source \n  `https://maps2.bristol.gov.uk/server2/rest/services/ext/ward_profiles/MapServer/9/query?where=1%3D1&outFields=*&outSR=4326&f=json' \n  using driver `ESRIJSON'\n\n\nWarning: no simple feature geometries present: returning a data.frame or tbl_df\n\n\nPlease note that the above API link is different than the one you can obtain today from opendata.bristol.gov.uk. If you use the most recent, you will need to tweak the code bellow. For the purpose of the practical, please use the link provided in the above chunk of code. This is an example of how ephemeral data structures can be!\nWe now have an R object called dat. Let’s try to see how it looks like\n\ntypeof(dat)\n\n[1] \"list\"\n\n\nSo, this is a list. If you need a reminder for what a list is, see here. Now the difficult part. Let’s try to figure out the structure of this JSON formatted data.\n\nstr(dat)\n\nList of 2\n $ type    : chr \"FeatureCollection\"\n $ features:'data.frame':   34 obs. of  28 variables:\n  ..$ type                                      : chr [1:34] \"Feature\" \"Feature\" \"Feature\" \"Feature\" ...\n  ..$ id                                        : int [1:34] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ geometry.type                             : chr [1:34] \"Polygon\" \"Polygon\" \"Polygon\" \"Polygon\" ...\n  ..$ geometry.coordinates                      :List of 34\n  .. ..$ : num [1, 1:7825, 1:2] -2.67 -2.67 -2.67 -2.67 -2.67 ...\n  .. ..$ : num [1, 1:2140, 1:2] -2.58 -2.58 -2.58 -2.59 -2.59 ...\n  .. ..$ : num [1, 1:1447, 1:2] -2.6 -2.6 -2.6 -2.6 -2.6 ...\n  .. ..$ : num [1, 1:874, 1:2] -2.58 -2.58 -2.58 -2.58 -2.58 ...\n  .. ..$ : num [1, 1:1480, 1:2] -2.56 -2.56 -2.56 -2.56 -2.56 ...\n  .. ..$ : num [1, 1:1320, 1:2] -2.53 -2.53 -2.53 -2.52 -2.52 ...\n  .. ..$ : num [1, 1:1032, 1:2] -2.51 -2.51 -2.51 -2.51 -2.51 ...\n  .. ..$ : num [1, 1:1337, 1:2] -2.51 -2.51 -2.51 -2.51 -2.51 ...\n  .. ..$ : num [1, 1:1729, 1:2] -2.52 -2.52 -2.52 -2.52 -2.52 ...\n  .. ..$ : num [1, 1:2372, 1:2] -2.53 -2.53 -2.53 -2.53 -2.53 ...\n  .. ..$ : num [1, 1:2257, 1:2] -2.56 -2.56 -2.56 -2.56 -2.56 ...\n  .. ..$ : num [1, 1:1462, 1:2] -2.53 -2.53 -2.53 -2.53 -2.53 ...\n  .. ..$ : num [1, 1:2277, 1:2] -2.56 -2.56 -2.56 -2.56 -2.56 ...\n  .. ..$ : num [1, 1:2073, 1:2] -2.62 -2.62 -2.62 -2.62 -2.62 ...\n  .. ..$ : num [1, 1:1301, 1:2] -2.63 -2.63 -2.63 -2.63 -2.63 ...\n  .. ..$ : num [1, 1:1327, 1:2] -2.63 -2.63 -2.63 -2.63 -2.63 ...\n  .. ..$ : num [1, 1:783, 1:2] -2.61 -2.61 -2.62 -2.62 -2.62 ...\n  .. ..$ : num [1, 1:897, 1:2] -2.6 -2.6 -2.6 -2.6 -2.6 ...\n  .. ..$ : num [1, 1:807, 1:2] -2.58 -2.58 -2.58 -2.58 -2.58 ...\n  .. ..$ : num [1, 1:811, 1:2] -2.58 -2.58 -2.58 -2.58 -2.58 ...\n  .. ..$ : num [1, 1:893, 1:2] -2.62 -2.62 -2.62 -2.62 -2.62 ...\n  .. ..$ : num [1, 1:551, 1:2] -2.61 -2.61 -2.61 -2.61 -2.61 ...\n  .. ..$ : num [1, 1:498, 1:2] -2.6 -2.6 -2.6 -2.6 -2.6 ...\n  .. ..$ : num [1, 1:731, 1:2] -2.59 -2.59 -2.59 -2.59 -2.59 ...\n  .. ..$ : num [1, 1:1149, 1:2] -2.56 -2.56 -2.56 -2.56 -2.56 ...\n  .. ..$ : num [1, 1:971, 1:2] -2.56 -2.56 -2.56 -2.56 -2.56 ...\n  .. ..$ : num [1, 1:748, 1:2] -2.55 -2.55 -2.55 -2.55 -2.55 ...\n  .. ..$ : num [1, 1:1429, 1:2] -2.55 -2.55 -2.55 -2.55 -2.55 ...\n  .. ..$ : num [1, 1:732, 1:2] -2.58 -2.58 -2.58 -2.58 -2.58 ...\n  .. ..$ : num [1, 1:2684, 1:2] -2.62 -2.62 -2.62 -2.62 -2.62 ...\n  .. ..$ : num [1, 1:1265, 1:2] -2.62 -2.62 -2.62 -2.62 -2.62 ...\n  .. ..$ : num [1, 1:733, 1:2] -2.61 -2.61 -2.61 -2.61 -2.61 ...\n  .. ..$ : num [1, 1:664, 1:2] -2.58 -2.58 -2.58 -2.58 -2.58 ...\n  .. ..$ : num [1, 1:846, 1:2] -2.57 -2.57 -2.57 -2.57 -2.57 ...\n  ..$ properties.OBJECTID                       : int [1:34] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ properties.Ward_code_1                    : chr [1:34] \"E05010886\" \"E05010901\" \"E05010913\" \"E05010904\" ...\n  ..$ properties.Ward                           : chr [1:34] \"Avonmouth and Lawrence Weston\" \"Henbury and Brentry\" \"Southmead\" \"Horfield\" ...\n  ..$ properties.Period                         : int [1:34] 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 ...\n  ..$ properties.Agriculture_forestry_fishing   : int [1:34] 10 0 0 0 0 0 0 0 0 0 ...\n  ..$ properties.Mining_quarrying_utilities     : int [1:34] 700 0 0 0 150 0 0 0 0 0 ...\n  ..$ properties.Manufacturing                  : int [1:34] 1500 50 10 100 35 50 600 40 35 900 ...\n  ..$ properties.Construction                   : int [1:34] 1500 45 50 50 50 125 200 125 150 500 ...\n  ..$ properties.Motor_trades                   : int [1:34] 1000 15 25 10 50 40 35 50 75 300 ...\n  ..$ properties.Wholesale                      : int [1:34] 4000 100 10 10 100 20 250 50 0 450 ...\n  ..$ properties.Retail                         : int [1:34] 1000 150 150 125 1000 500 75 125 50 200 ...\n  ..$ properties.Transport_storage__inc_postal_ : int [1:34] 5000 75 35 20 50 300 45 20 25 350 ...\n  ..$ properties.Accommodation_food_services    : int [1:34] 250 100 50 150 100 300 75 100 35 175 ...\n  ..$ properties.Information_communication      : int [1:34] 175 50 100 150 125 50 150 100 20 400 ...\n  ..$ properties.Financial_and_insurance        : int [1:34] 15 0 10 0 0 35 10 0 0 10 ...\n  ..$ properties.Property                       : int [1:34] 125 15 10 50 100 30 40 15 10 20 ...\n  ..$ properties.Professional_scientific___techn: int [1:34] 500 75 50 150 175 125 200 75 40 200 ...\n  ..$ properties.Business_administration___suppo: int [1:34] 1500 125 250 225 200 125 125 450 15 1250 ...\n  ..$ properties.Public_administration___defence: int [1:34] 250 0 40 250 0 200 0 0 0 0 ...\n  ..$ properties.Education                      : int [1:34] 700 350 400 300 500 800 350 250 40 400 ...\n  ..$ properties.Health                         : int [1:34] 450 700 1000 12000 450 1500 350 500 75 125 ...\n  ..$ properties.Arts_entertainment_recreation__: int [1:34] 250 175 200 300 350 100 50 75 10 75 ...\n  ..$ properties.Shape__Area                    : num [1:34] 55226760 10024921 7056717 5886048 11020282 ...\n  ..$ properties.Shape__Length                  : num [1:34] 39581 20425 15018 10857 19802 ...\n\n\nWell, it’s complicated. Looking on the above output of list() the object that looks most useful to us is the dat$features.\n\n\n\nQuestion: Based on the output of str(), why do you think is dat$features the most useful part of dat for us?\n\n\n\nAnd if you want to see how the dataframe dat$features looks like, the below function will show the first five rows.\n\nglimpse(dat$features)\n\nRows: 34\nColumns: 28\n$ type                                       &lt;chr&gt; \"Feature\", \"Feature\", \"Feat…\n$ id                                         &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, …\n$ geometry.type                              &lt;chr&gt; \"Polygon\", \"Polygon\", \"Poly…\n$ geometry.coordinates                       &lt;list&gt; &lt;&lt;array[1 x 7825 x 2]&gt;&gt;, &lt;…\n$ properties.OBJECTID                        &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, …\n$ properties.Ward_code_1                     &lt;chr&gt; \"E05010886\", \"E05010901\", \"…\n$ properties.Ward                            &lt;chr&gt; \"Avonmouth and Lawrence Wes…\n$ properties.Period                          &lt;int&gt; 2020, 2020, 2020, 2020, 202…\n$ properties.Agriculture_forestry_fishing    &lt;int&gt; 10, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ properties.Mining_quarrying_utilities      &lt;int&gt; 700, 0, 0, 0, 150, 0, 0, 0,…\n$ properties.Manufacturing                   &lt;int&gt; 1500, 50, 10, 100, 35, 50, …\n$ properties.Construction                    &lt;int&gt; 1500, 45, 50, 50, 50, 125, …\n$ properties.Motor_trades                    &lt;int&gt; 1000, 15, 25, 10, 50, 40, 3…\n$ properties.Wholesale                       &lt;int&gt; 4000, 100, 10, 10, 100, 20,…\n$ properties.Retail                          &lt;int&gt; 1000, 150, 150, 125, 1000, …\n$ properties.Transport_storage__inc_postal_  &lt;int&gt; 5000, 75, 35, 20, 50, 300, …\n$ properties.Accommodation_food_services     &lt;int&gt; 250, 100, 50, 150, 100, 300…\n$ properties.Information_communication       &lt;int&gt; 175, 50, 100, 150, 125, 50,…\n$ properties.Financial_and_insurance         &lt;int&gt; 15, 0, 10, 0, 0, 35, 10, 0,…\n$ properties.Property                        &lt;int&gt; 125, 15, 10, 50, 100, 30, 4…\n$ properties.Professional_scientific___techn &lt;int&gt; 500, 75, 50, 150, 175, 125,…\n$ properties.Business_administration___suppo &lt;int&gt; 1500, 125, 250, 225, 200, 1…\n$ properties.Public_administration___defence &lt;int&gt; 250, 0, 40, 250, 0, 200, 0,…\n$ properties.Education                       &lt;int&gt; 700, 350, 400, 300, 500, 80…\n$ properties.Health                          &lt;int&gt; 450, 700, 1000, 12000, 450,…\n$ properties.Arts_entertainment_recreation__ &lt;int&gt; 250, 175, 200, 300, 350, 10…\n$ properties.Shape__Area                     &lt;dbl&gt; 55226760, 10024921, 7056717…\n$ properties.Shape__Length                   &lt;dbl&gt; 39581.107, 20424.954, 15018…\n\n\nLooking into the above, I can think of the the following necessary data cleaning and wrangling steps:\n\nremove the first five columns as they don’t include any useful data\nremove the string “properties.” from the column names\nalthough not necessary, it is common practice for the first columns to contain identification data such as the ward names and codes.\n\nTo do all the above, we will use the below functions from the dplyr package, which is part of the tidyverse ecosystem.\n\ndat &lt;- dat$features %&gt;% \n  select(-type, -id, -geometry.type, -geometry.coordinates, -properties.OBJECTID, -properties.Shape__Area, \n         -properties.Shape__Length) %&gt;%                       # remove useless columns\n  rename_with(~sub(\"properties.\", \"\", .)) %&gt;%                 # ~ introduces a formula: function `sub` substitutes (in other words replaces) the string \"properties.\" with an empty sting \"\" for all columns (symbol .) \n  relocate(Ward, Ward_code_1) %&gt;%                             # looks better\n  rename(Ward_code = Ward_code_1) %&gt;%                         # as above, Ward_code looks better than Ward_code_1\n  glimpse()                                                   # a glimpse of the output\n\nRows: 34\nColumns: 21\n$ Ward                            &lt;chr&gt; \"Avonmouth and Lawrence Weston\", \"Henb…\n$ Ward_code                       &lt;chr&gt; \"E05010886\", \"E05010901\", \"E05010913\",…\n$ Period                          &lt;int&gt; 2020, 2020, 2020, 2020, 2020, 2020, 20…\n$ Agriculture_forestry_fishing    &lt;int&gt; 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Mining_quarrying_utilities      &lt;int&gt; 700, 0, 0, 0, 150, 0, 0, 0, 0, 0, 30, …\n$ Manufacturing                   &lt;int&gt; 1500, 50, 10, 100, 35, 50, 600, 40, 35…\n$ Construction                    &lt;int&gt; 1500, 45, 50, 50, 50, 125, 200, 125, 1…\n$ Motor_trades                    &lt;int&gt; 1000, 15, 25, 10, 50, 40, 35, 50, 75, …\n$ Wholesale                       &lt;int&gt; 4000, 100, 10, 10, 100, 20, 250, 50, 0…\n$ Retail                          &lt;int&gt; 1000, 150, 150, 125, 1000, 500, 75, 12…\n$ Transport_storage__inc_postal_  &lt;int&gt; 5000, 75, 35, 20, 50, 300, 45, 20, 25,…\n$ Accommodation_food_services     &lt;int&gt; 250, 100, 50, 150, 100, 300, 75, 100, …\n$ Information_communication       &lt;int&gt; 175, 50, 100, 150, 125, 50, 150, 100, …\n$ Financial_and_insurance         &lt;int&gt; 15, 0, 10, 0, 0, 35, 10, 0, 0, 10, 15,…\n$ Property                        &lt;int&gt; 125, 15, 10, 50, 100, 30, 40, 15, 10, …\n$ Professional_scientific___techn &lt;int&gt; 500, 75, 50, 150, 175, 125, 200, 75, 4…\n$ Business_administration___suppo &lt;int&gt; 1500, 125, 250, 225, 200, 125, 125, 45…\n$ Public_administration___defence &lt;int&gt; 250, 0, 40, 250, 0, 200, 0, 0, 0, 0, 4…\n$ Education                       &lt;int&gt; 700, 350, 400, 300, 500, 800, 350, 250…\n$ Health                          &lt;int&gt; 450, 700, 1000, 12000, 450, 1500, 350,…\n$ Arts_entertainment_recreation__ &lt;int&gt; 250, 175, 200, 300, 350, 100, 50, 75, …\n\n\nLet’s try now to do some analysis based on these data and create some outputs.\n\ndat %&gt;% mutate(total = rowSums(across(c(4:21))),           # total jobs in a ward\n               across(c(4:21),                             # select the columns you are interested in\n                      .names = \"{col}_share\") / total) %&gt;% # divide these columns by total to create industry share within ward  \n                                                           # and name the new columns as oldname_share\n  select(1:2, 23:40) %&gt;%\n  pivot_longer(!c(Ward, Ward_code),                        # These are the columns I am 'pivoting'\n               names_to = \"industry\",                      # This is how I will name the column with all the industries ...\n               values_to = \"jobs_share\") %&gt;%               # ... and the column with the jobs percentage\n                                                           # Look https://tidyr.tidyverse.org/articles/pivot.html to \n                                                           # understand the long to wide / wide to long transformations.\n  filter(Ward == \"Central\") %&gt;%                            # Let's focus on Central Bristol\n  ggplot(aes(x=industry, y=jobs_share)) +                  # ... and create a bar chart for it jobs distribution\n    geom_bar(stat = \"identity\") +\n# to understand the \"identity part go on the Details section of the geom_bar documentation:\n# https://www.rdocumentation.org/packages/ggplot2/versions/1.0.1/topics/geom_bar\n    \n    scale_x_discrete(guide = guide_axis(angle = 90)) +     # This line rotates the x labels,\n    ylab(\"jobs %\")                                         # and here we rename the y axis. \n\n\n\n\n\n\n\n\nNow, let’s do something slightly more interesting. Let’s create two plots to compare the job distribution between two Bristol wards.\n\ndat %&gt;% mutate(total = rowSums(across(c(4:21))),           # total jobs in a ward\n               across(c(4:21),                             # select the columns you are interested in\n                      .names = \"{col}_share\") / total) %&gt;% # divide these columns by total to create industry share within ward  \n                                                           # and name the new columns as oldname_share\n  select(1:2, 23:40) %&gt;%\n  pivot_longer(!c(Ward, Ward_code),                        # These are the columns I am 'pivoting'\n               names_to = \"industry\",                      # This is how I will name the column with all the industries ...\n               values_to = \"jobs_share\") %&gt;%               # ... and the column with the jobs percentage\n                                                           # Look https://tidyr.tidyverse.org/articles/pivot.html to \n                                                           # understand the long to wide / wide to long transformations.\n  filter(Ward == \"Central\" |\n         Ward == \"Easton\") %&gt;%                             # Let's focus on Easton and Central Bristol\n  ggplot(aes(x=industry, y=jobs_share)) +                  # ... and create a bar chart for it jobs distribution\n    geom_bar(stat = \"identity\") +\n    scale_x_discrete(guide = guide_axis(angle = 90)) +     # This line rotates the x labels,\n    ylab(\"jobs %\") +                                       # and here we rename the y axis. \n    facet_wrap(vars(Ward), ncol = 2)                       # facet_wrap creates two graphs based on `ward` and puts one next to each other\n\n\n\n\n\n\n\n\nWell done! You’ve just utilised Bristol’s open data and became part of the urban open data revolution 😃.\nObviously the x labels are rather ugly.\n\n\n\nTask: using and tweaking the code provided here, can you rename these labels?\n\n\n\n\n\n\nNext task: Search for some other interesting data from opendata.bristol.gov.uk, access it programmatically, do the necessary data wrangling and produce some graphs in a new .Rmd document. Make sure to knit it as .html.\n\n\nIf this is to easy for you, why don’t you check the new Quarto format.",
    "crumbs": [
      "Practicals",
      "APIs and urban data"
    ]
  },
  {
    "objectID": "src/apis.html#accessing-apis-using-existing-r-packages",
    "href": "src/apis.html#accessing-apis-using-existing-r-packages",
    "title": "APIs and urban data",
    "section": "Accessing APIs using existing R packages",
    "text": "Accessing APIs using existing R packages\nNow you might be lucky and somebody else has already done all the infrastructural / back-end work in order for you to easily interrogate an API and access their data. How would this look like? Like another R package. Here is a list with a few examples:\n\nnomisr is a package that allows you to access Nomis data with R. Find here an introduction.\ntidysencus is part of the tidyverse ecosystem and offers access to the US Census. This is the link. Pay extra attention to the spatial data option.\nThe city of Toronto offers an R package to access City of Toronto Open Data Portal.\nSee a relevant book by Bauer, Landesvatter, and Behrens (2022) available here.\n\n\n\n\nAnother task: On your own time, play with these packages and access some of the (urban) data they offer.",
    "crumbs": [
      "Practicals",
      "APIs and urban data"
    ]
  },
  {
    "objectID": "src/apis.html#footnotes",
    "href": "src/apis.html#footnotes",
    "title": "APIs and urban data",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nEvery column is a variable; every row is an observation; every cell is a single value. See [here])(https://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html) for more info↩︎",
    "crumbs": [
      "Practicals",
      "APIs and urban data"
    ]
  },
  {
    "objectID": "src/network_analysis.html",
    "href": "src/network_analysis.html",
    "title": "Network analysis practical: networks of cities",
    "section": "",
    "text": "Some of the materials for this tutorial have been adapted from:\n\nthe Origin-destination data with stplanr manual,\nthe Modelling Population Flows Using Spatial Interaction Models tutorial, and\nOshan (2016)\nLovelace, Robin, Jakub Nowosad, and Jannes Muenchow. Geocomputation with R. CRC Press, 2019",
    "crumbs": [
      "Practicals",
      "Network analysis practical: networks of cities"
    ]
  },
  {
    "objectID": "src/network_analysis.html#resources",
    "href": "src/network_analysis.html#resources",
    "title": "Network analysis practical: networks of cities",
    "section": "",
    "text": "Some of the materials for this tutorial have been adapted from:\n\nthe Origin-destination data with stplanr manual,\nthe Modelling Population Flows Using Spatial Interaction Models tutorial, and\nOshan (2016)\nLovelace, Robin, Jakub Nowosad, and Jannes Muenchow. Geocomputation with R. CRC Press, 2019",
    "crumbs": [
      "Practicals",
      "Network analysis practical: networks of cities"
    ]
  },
  {
    "objectID": "src/network_analysis.html#philosophy-of-this-rmarkdown-document",
    "href": "src/network_analysis.html#philosophy-of-this-rmarkdown-document",
    "title": "Network analysis practical: networks of cities",
    "section": "Philosophy of this RMarkdown document",
    "text": "Philosophy of this RMarkdown document\nAs you can see this is a long .Rmd document, which has a dual objective. On one hand, it will help you achieve the unit learning outcomes as it provides an implementation of most of the concepts and ideas we discuss for this unit. On the other hand this is almost a representation of a ‘real world’ workflow. Instead of breaking the code in shorter and maybe more digestible .Rmd documents I decided to provide you with a working sequence of all actions I would have taken in order to analyse a network with spatial dimensions such as the network of commuting flows in \\(2011\\). You can use this workflow as the basis for building your own approach and, consequently, code in order to complete this session’s project. We will spend at least \\(2\\) sessions to go through this code.\nTo begin with, create a new RStudio Project as a new directory (File &gt; New Project…) and within it create a source and data directory to store the code and the data accordingly. Instructions on how to create such a project, can be found here. Then, create a new RMarkdown document to implement all the below.",
    "crumbs": [
      "Practicals",
      "Network analysis practical: networks of cities"
    ]
  },
  {
    "objectID": "src/network_analysis.html#install-and-load-packages",
    "href": "src/network_analysis.html#install-and-load-packages",
    "title": "Network analysis practical: networks of cities",
    "section": "Install and load packages",
    "text": "Install and load packages\nWe will use quite a few packages for this tutorial. Most of the code is based on the tidyverse logic – see here for more info. But the main package we will use for network data wrangling and analysis is igraph – more info here.\nImportant\nThe below code snippet assumes that all the packages are installed. If you are using a university PC they are probably not. If they are not installed, you need to do so by using install.packages(\"package.name\").\n\nlibrary(igraph)\nlibrary(knitr)\nlibrary(corrplot)\nlibrary(tidyverse)\nlibrary(geojsonio)\nlibrary(stplanr)\nlibrary(leaflet)\nlibrary(rprojroot)\nlibrary(kableExtra)\nlibrary(sf)\n\nknitr::opts_chunk$set(echo = TRUE)\n\n# This is the project path\npath &lt;- find_rstudio_root_file()",
    "crumbs": [
      "Practicals",
      "Network analysis practical: networks of cities"
    ]
  },
  {
    "objectID": "src/network_analysis.html#commuting-data-and-networks",
    "href": "src/network_analysis.html#commuting-data-and-networks",
    "title": "Network analysis practical: networks of cities",
    "section": "Commuting data and networks",
    "text": "Commuting data and networks\nFor this tutorial we will use travel to work data from the 2011 UK Census. The data is available online, but it requires an academic login. After you log in, download the WU03UK element, save the .csv on your working directory under a /data directory and unzip it. We will use the:\n\nLocation of usual residence and place of work by method of travel to work\n\nfor\n\nCensus Merged local authority districts in England and Wales, Council areas in Scotland, Local government districts in Northern Ireland.\n\nThe below code loads the data.\n\npath.data &lt;- paste0(path, \"/data/wu03uk_v3/wu03uk_v3.csv\")\ncommuting &lt;- read_csv(path.data)\nglimpse(commuting)\n\nAs you may have noticed, the commuting object includes only the codes for the local authorities. Let’s try to see these codes.\nFirst for the origins.\n\ncommuting %&gt;% distinct(`Area of usual residence`)\n\n# A tibble: 404 × 1\n   `Area of usual residence`\n   &lt;chr&gt;                    \n 1 95AA                     \n 2 95BB                     \n 3 95CC                     \n 4 95DD                     \n 5 95EE                     \n 6 95FF                     \n 7 95GG                     \n 8 95HH                     \n 9 95II                     \n10 95JJ                     \n# ℹ 394 more rows\n\n\nAnd the same for the destinations (results omitted).\n\ncommuting %&gt;% distinct(`Area of workplace`)\n\n\n\n\nQuestion: Can you guess the countries these codes refer to?\n\n\n\nYou might have observe some weird codes (OD0000001, OD0000002, OD0000003 and OD0000004). With some simple Google searching we can find the 2011 Census Origin-Destination Data User Guide, which indicates that these codes do not refer to local authorities:\n\nOD0000001 = Mainly work at or from home\nOD0000002 = Offshore installation\nOD0000003 = No fixed place\nOD0000004 = Outside UK\n\nFor the sake of simplicity we will remove these non-geographical nodes.\nnon.la &lt;- c(\"OD0000001\", \"OD0000002\", \"OD0000003\", \"OD0000004\")\ncommuting &lt;- commuting %&gt;% \n  filter(!`Area of workplace` %in% non.la)\nCheck the %in% operator. Also ! represents negation.\nNow let’s do some clean-up of the commuting data frame. Let’s remind ourselves how the data look like.\n\nglimpse(commuting)\n\nRows: 108,546\nColumns: 14\n$ `Area of usual residence`                  &lt;chr&gt; \"95AA\", \"95AA\", \"95AA\", \"95…\n$ `Area of workplace`                        &lt;chr&gt; \"95AA\", \"95BB\", \"95CC\", \"95…\n$ `All categories: Method of travel to work` &lt;dbl&gt; 9465, 107, 42, 1485, 35, 18…\n$ `Work mainly at or from home`              &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Underground, metro, light rail, tram`     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Train                                      &lt;dbl&gt; 12, 0, 0, 11, 0, 0, 165, 1,…\n$ `Bus, minibus or coach`                    &lt;dbl&gt; 243, 1, 1, 84, 1, 0, 434, 1…\n$ Taxi                                       &lt;dbl&gt; 421, 2, 0, 13, 0, 0, 14, 0,…\n$ `Motorcycle, scooter or moped`             &lt;dbl&gt; 58, 0, 0, 8, 0, 0, 23, 0, 0…\n$ `Driving a car or van`                     &lt;dbl&gt; 5376, 68, 29, 1111, 25, 12,…\n$ `Passenger in a car or van`                &lt;dbl&gt; 1721, 20, 9, 241, 9, 4, 830…\n$ Bicycle                                    &lt;dbl&gt; 196, 5, 0, 2, 0, 0, 11, 0, …\n$ `On foot`                                  &lt;dbl&gt; 1403, 9, 3, 13, 0, 2, 46, 1…\n$ `Other method of travel to work`           &lt;dbl&gt; 35, 2, 0, 2, 0, 0, 6, 0, 1,…\n\n\nWe are only keeping the English and Wales local authorities by keeping the observations with a local authority code starting from E (for England) and W (for Wales).\n\ncommuting &lt;- commuting %&gt;% filter(startsWith(`Area of usual residence`, \"E\") |\n                                  startsWith(`Area of usual residence`, \"W\")) %&gt;% \n                           filter(startsWith(`Area of workplace`, \"E\") |\n                                  startsWith(`Area of workplace`, \"W\")) %&gt;% \n  glimpse()\n\nRows: 93,034\nColumns: 14\n$ `Area of usual residence`                  &lt;chr&gt; \"E41000001\", \"E41000001\", \"…\n$ `Area of workplace`                        &lt;chr&gt; \"E41000001\", \"E41000002\", \"…\n$ `All categories: Method of travel to work` &lt;dbl&gt; 20777, 1591, 534, 3865, 433…\n$ `Work mainly at or from home`              &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Underground, metro, light rail, tram`     &lt;dbl&gt; 6, 1, 0, 1, 0, 0, 0, 0, 0, …\n$ Train                                      &lt;dbl&gt; 26, 32, 0, 49, 11, 0, 0, 0,…\n$ `Bus, minibus or coach`                    &lt;dbl&gt; 1922, 140, 21, 167, 7, 0, 0…\n$ Taxi                                       &lt;dbl&gt; 527, 11, 4, 20, 1, 0, 0, 0,…\n$ `Motorcycle, scooter or moped`             &lt;dbl&gt; 107, 6, 6, 23, 4, 0, 0, 0, …\n$ `Driving a car or van`                     &lt;dbl&gt; 11788, 1225, 448, 3144, 360…\n$ `Passenger in a car or van`                &lt;dbl&gt; 1965, 99, 36, 365, 33, 0, 0…\n$ Bicycle                                    &lt;dbl&gt; 593, 13, 1, 29, 2, 0, 0, 0,…\n$ `On foot`                                  &lt;dbl&gt; 3789, 60, 16, 60, 15, 0, 0,…\n$ `Other method of travel to work`           &lt;dbl&gt; 54, 4, 2, 7, 0, 0, 0, 0, 0,…\n\n\nWe can also see we many rows we dropped with glimpse().\nIt is very important to distinguish between intra- and inter-local authority flows. In network analysis terms, these are the values we find on the diagonal of an adjacency matrix and refer to the commuting flows within a specific local authority or between different ones. For this exercise we are dropping the intra-local authority flows. Although not used here, we also create a new object with the intra-local authority flows.\n\ncommuting.intra &lt;- commuting %&gt;%\n  filter(`Area of usual residence` == `Area of workplace`)\ncommuting &lt;- commuting %&gt;%\n  filter(`Area of usual residence` != `Area of workplace`) %&gt;% \n  glimpse()\n\nRows: 92,688\nColumns: 14\n$ `Area of usual residence`                  &lt;chr&gt; \"E41000001\", \"E41000001\", \"…\n$ `Area of workplace`                        &lt;chr&gt; \"E41000002\", \"E41000003\", \"…\n$ `All categories: Method of travel to work` &lt;dbl&gt; 1591, 534, 3865, 433, 5, 2,…\n$ `Work mainly at or from home`              &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Underground, metro, light rail, tram`     &lt;dbl&gt; 1, 0, 1, 0, 0, 0, 0, 0, 0, …\n$ Train                                      &lt;dbl&gt; 32, 0, 49, 11, 0, 0, 0, 0, …\n$ `Bus, minibus or coach`                    &lt;dbl&gt; 140, 21, 167, 7, 0, 0, 0, 1…\n$ Taxi                                       &lt;dbl&gt; 11, 4, 20, 1, 0, 0, 0, 0, 0…\n$ `Motorcycle, scooter or moped`             &lt;dbl&gt; 6, 6, 23, 4, 0, 0, 0, 0, 0,…\n$ `Driving a car or van`                     &lt;dbl&gt; 1225, 448, 3144, 360, 5, 2,…\n$ `Passenger in a car or van`                &lt;dbl&gt; 99, 36, 365, 33, 0, 0, 0, 0…\n$ Bicycle                                    &lt;dbl&gt; 13, 1, 29, 2, 0, 0, 0, 0, 0…\n$ `On foot`                                  &lt;dbl&gt; 60, 16, 60, 15, 0, 0, 0, 0,…\n$ `Other method of travel to work`           &lt;dbl&gt; 4, 2, 7, 0, 0, 0, 0, 0, 0, …\n\n\nPlease note the constant use of glimpse() to keep control of how many observations we have and check if we missed anything.\nAlso, take a note of the commuting object, which includes multiple types of commuting flows. Therefore, we will build \\(3\\) different networks:\n\none for all the commuting flows\none only for train flows\none only for bicycle flows.\n\n\ncommuting.all &lt;- commuting %&gt;%\n  select(`Area of usual residence`,\n                `Area of workplace`,\n                `All categories: Method of travel to work`) %&gt;%\n  rename(o = `Area of usual residence`,     # Area of usual residence is annoyingly\n         d = `Area of workplace`,           # long, so I am renaiming theses columns.\n         weight = `All categories: Method of travel to work`)\n\n# just FYI this is how you could have achieved the same output using base R\n# instead of dplyr of the tidyverse ecosystem\n# commuting.all &lt;- commuting[,1:3]\n# names(commuting.all)[1] &lt;- \"o\"\n# names(commuting.all)[2] &lt;- \"d\"\n# names(commuting.all)[3] &lt;- \"weight\"\n\ncommuting.train &lt;- commuting %&gt;%\n  select(`Area of usual residence`,\n         `Area of workplace`,\n         `All categories: Method of travel to work`,\n         `Train`) %&gt;%\n  rename(o = `Area of usual residence`,\n         d = `Area of workplace`,\n         weight = `All categories: Method of travel to work`) %&gt;%\n  # The below code drops all the lines with 0 train flows in order to exclude\n  # these edges from the network.\n  filter(Train!=0)\n\ncommuting.bicycle &lt;- commuting %&gt;%\n  select(`Area of usual residence`,\n                `Area of workplace`,\n                `All categories: Method of travel to work`,\n                `Bicycle`) %&gt;%\n  rename(o = `Area of usual residence`,\n         d = `Area of workplace`,\n         weight = `All categories: Method of travel to work`) %&gt;%\n  # The below code drops all the lines with 0 bicycle flows in order to exclude\n  # these edges from the network.\n  filter(Bicycle!=0)\n\nUnless you know the local authority codes by hard, it might be useful to also add the corresponding local authority names. These can be easily obtained from the ONS’s Open Geography portal. The below code directly downloads a GeoJSON file with the local authorities in England and Wales. If you don’t know what a GeoJSON file is, have a look here. Boundary data can also be obtained by UK Data Service.\nFor the time being we are only interested in the local authority names and codes. We will use the spatial object later.\nTip: the below code downloads the GeoJSON file over the web. If you want to run the code multiple times, it might be faster to download the file ones, save it on your hard drive and the point this location to st_read().\n\nla &lt;-st_read(\"https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/CMLAD_Dec_2011_SGCB_GB_2022/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson\")\nglimpse(la) \n\nla.names &lt;- as.data.frame(la) %&gt;% \n  select(cmlad11cd, cmlad11nm)    # all we need is the LA names and codes\n\nThe next step is to actually create the network objects. The below code creates the igraph network objects using the graph_from_data_frame() function as we already have all the necessary data in data frames (commuting.all, commuting.train and commuting.bicycle). We then attach the local authority names as an attribute to these networks.\n\nnet.all &lt;-graph_from_data_frame(commuting.all, directed = TRUE, vertices = la.names)\n\nnet.train &lt;-graph_from_data_frame(commuting.train, directed = TRUE, vertices = la.names)\n\nnet.bicycle &lt;-graph_from_data_frame(commuting.bicycle, directed = TRUE, vertices = la.names)",
    "crumbs": [
      "Practicals",
      "Network analysis practical: networks of cities"
    ]
  },
  {
    "objectID": "src/network_analysis.html#network-attributes",
    "href": "src/network_analysis.html#network-attributes",
    "title": "Network analysis practical: networks of cities",
    "section": "Network attributes",
    "text": "Network attributes\nThe below igraph functions illustrate some attributes of the network with all the flows.\n\n# It provides information about the type of the net.all object. Not surprisingly,\n# it is an igraph network.\nclass(net.all)\n\n[1] \"igraph\"\n\n# It displays the network file, the number of nodes and edges (345 and 92,688\n# in this case).\nnet.all\n\nIGRAPH c37887e DNW- 346 92688 -- \n+ attr: name (v/c), cmlad11nm (v/c), weight (e/n)\n+ edges from c37887e (vertex names):\n [1] E41000001-&gt;E41000002 E41000001-&gt;E41000003 E41000001-&gt;E41000004\n [4] E41000001-&gt;E41000005 E41000001-&gt;E41000006 E41000001-&gt;E41000007\n [7] E41000001-&gt;E41000009 E41000001-&gt;E41000010 E41000001-&gt;E41000011\n[10] E41000001-&gt;E41000012 E41000001-&gt;E41000013 E41000001-&gt;E41000014\n[13] E41000001-&gt;E41000015 E41000001-&gt;E41000016 E41000001-&gt;E41000017\n[16] E41000001-&gt;E41000018 E41000001-&gt;E41000019 E41000001-&gt;E41000020\n[19] E41000001-&gt;E41000021 E41000001-&gt;E41000022 E41000001-&gt;E41000023\n[22] E41000001-&gt;E41000025 E41000001-&gt;E41000026 E41000001-&gt;E41000029\n+ ... omitted several edges\n\n# It displays the vertices (aka nodes)\nV(net.all)\n\n+ 346/346 vertices, named, from c37887e:\n  [1] E41000001 E41000002 E41000003 E41000004 E41000005 E41000006 E41000007\n  [8] E41000008 E41000009 E41000010 E41000011 E41000012 E41000013 E41000014\n [15] E41000015 E41000016 E41000017 E41000018 E41000019 E41000020 E41000021\n [22] E41000022 E41000023 E41000024 E41000025 E41000026 E41000027 E41000028\n [29] E41000029 E41000030 E41000031 E41000032 E41000033 E41000034 E41000035\n [36] E41000036 E41000037 E41000038 E41000039 E41000040 E41000041 E41000042\n [43] E41000043 E41000044 E41000045 E41000046 E41000047 E41000048 E41000049\n [50] E41000050 E41000051 E41000052 E41000053 E41000054 E41000055 E41000056\n [57] E41000057 E41000058 E41000059 E41000060 E41000061 E41000062 E41000063\n [64] E41000064 E41000065 E41000066 E41000067 E41000068 E41000069 E41000070\n+ ... omitted several vertices\n\n# It displays the vertex attributes. In this case the local authority codes.\nvertex_attr(net.all) %&gt;% glimpse()\n\nList of 2\n $ name     : chr [1:346] \"E41000001\" \"E41000002\" \"E41000003\" \"E41000004\" ...\n $ cmlad11nm: chr [1:346] \"Hartlepool\" \"Middlesbrough\" \"Redcar and Cleveland\" \"Stockton-on-Tees\" ...\n\n# the output of vertex_attr() is quite long, this is why I chained it with glimpse()\n\n# It displays the edges.\nE(net.all) %&gt;% glimpse()\n\n 'igraph.es' int [1:92688] 1 2 3 4 5 6 7 8 9 10 ...\n - attr(*, \"is_all\")= logi TRUE\n - attr(*, \"vnames\")= chr [1:92688] \"E41000001|E41000002\" \"E41000001|E41000003\" \"E41000001|E41000004\" \"E41000001|E41000005\" ...\n - attr(*, \"env\")=&lt;weakref&gt; \n - attr(*, \"graph\")= chr \"c37887e2-b3d8-420e-99ec-562b2b058fb8\"\n\n# the output of E() is quite long, this is why I chained it with glimpse()\n\n# It displays the weights for each edge. In our case the weights represent commuters.\nedge.attributes(net.all)$weight %&gt;% glimpse()\n\n num [1:92688] 1591 534 3865 433 5 ...\n\n# as above re: glimpse()\n\n# Asks whether the network is weighted or not\nis.weighted(net.all)\n\nWarning: `is.weighted()` was deprecated in igraph 2.0.0.\nℹ Please use `is_weighted()` instead.\n\n\n[1] TRUE\n\n\n\n\n\nQuestion: How many nodes and edges are there for the other types of networks? What do these differences mean?",
    "crumbs": [
      "Practicals",
      "Network analysis practical: networks of cities"
    ]
  },
  {
    "objectID": "src/network_analysis.html#network-measures",
    "href": "src/network_analysis.html#network-measures",
    "title": "Network analysis practical: networks of cities",
    "section": "Network measures",
    "text": "Network measures\nThe below igraph functions calculate some simple network measures. Have a look at the lecture slides and the reference list to remind yourselves.\n\n# Network diameter. We do not consider the weights because it affects the measurement.\nd.all &lt;- diameter(net.all, directed = TRUE, weights = NA)\nd.all\n\n[1] 2\n\n# Average path length\nmean_ditst.all &lt;- mean_distance(net.all)\nmean_ditst.all\n\n[1] 1.895552\n\n# Network density\ndens.all &lt;- edge_density(net.all)\ndens.all\n\n[1] 0.7764765\n\n# Clustering Coefficient or Transitivity\ntrans.all &lt;- transitivity(net.all)\ntrans.all\n\n[1] 0.9221811\n\n# Reciprocity\nrec.all &lt;- reciprocity(net.all)\nrec.all\n\n[1] 0.8297298\n\n# Assortativity\nass.all &lt;- assortativity_degree(net.all, directed = T)\nass.all\n\n[1] -0.08068428\n\n\n\n\n\nQuestion: Do the same for the other types of commuting networks and compare the different measures. Why do we observe these differences?",
    "crumbs": [
      "Practicals",
      "Network analysis practical: networks of cities"
    ]
  },
  {
    "objectID": "src/network_analysis.html#centralities",
    "href": "src/network_analysis.html#centralities",
    "title": "Network analysis practical: networks of cities",
    "section": "Centralities",
    "text": "Centralities\nNow we are moving from network-level measures to some node-level ones. Specifically, we will calculate different centrality measures.\n\n# Binary in-degree centrality.\nin.degree &lt;- degree(net.all, mode = \"in\")\nhead(in.degree)\n\nE41000001 E41000002 E41000003 E41000004 E41000005 E41000006 \n      111       214       118       216       237       275 \n\n# Binary out-degree centrality.\nout.degree &lt;- degree(net.all, mode = \"out\")\nhead(out.degree)\n\nE41000001 E41000002 E41000003 E41000004 E41000005 E41000006 \n      231       250       242       292       258       274 \n\n# Binary degree centrality.\ndegree &lt;- degree(net.all, mode = \"all\")\nhead(degree)\n\nE41000001 E41000002 E41000003 E41000004 E41000005 E41000006 \n      342       464       360       508       495       549 \n\n# The function graph.strength() calculates the weighted degree centrality.\n\n# Weighed in-degree centrality.\nw.in.degree &lt;- graph.strength(net.all, mode = \"in\")\n\nWarning: `graph.strength()` was deprecated in igraph 2.0.0.\nℹ Please use `strength()` instead.\n\nhead(w.in.degree)\n\nE41000001 E41000002 E41000003 E41000004 E41000005 E41000006 \n     8360     30038     12786     29986     18445     23080 \n\n# Weighed out-degree centrality.\nw.out.degree &lt;- graph.strength(net.all, mode = \"out\")\nhead(w.out.degree)\n\nE41000001 E41000002 E41000003 E41000004 E41000005 E41000006 \n    11261     20664     21904     29329     15036     22981 \n\n# Weighed degree centrality.\nw.degree &lt;- graph.strength(net.all, mode = \"all\")\nhead(w.degree)\n\nE41000001 E41000002 E41000003 E41000004 E41000005 E41000006 \n    19621     50702     34690     59315     33481     46061 \n\n# The function betweenness() calculates betweenness centrality. As before.\nbtwnss &lt;- betweenness(net.all, weights = NA)\nhead(btwnss)\n\nE41000001 E41000002 E41000003 E41000004 E41000005 E41000006 \n 21.38152  53.13953  23.46728  65.89576  63.64096  82.81950 \n\n# Eigenvector centrality.\neigen &lt;- eigen_centrality(net.all)\n\n# Be careful, eigen has a more complicated structure. Use ?eigen_central to read more. \n# Before goin. forward, let's see the structure of eigen.\nstr(eigen)\n\nList of 3\n $ vector : Named num [1:346] 0.00039 0.000679 0.000459 0.0011 0.000703 ...\n  ..- attr(*, \"names\")= chr [1:346] \"E41000001\" \"E41000002\" \"E41000003\" \"E41000004\" ...\n $ value  : num 2e+05\n $ options:List of 20\n  ..$ bmat   : chr \"I\"\n  ..$ n      : int 346\n  ..$ which  : chr \"LA\"\n  ..$ nev    : int 1\n  ..$ tol    : num 0\n  ..$ ncv    : int 0\n  ..$ ldv    : int 0\n  ..$ ishift : int 1\n  ..$ maxiter: int 3000\n  ..$ nb     : int 1\n  ..$ mode   : int 1\n  ..$ start  : int 1\n  ..$ sigma  : num 0\n  ..$ sigmai : num 0\n  ..$ info   : int 0\n  ..$ iter   : int 2\n  ..$ nconv  : int 1\n  ..$ numop  : int 30\n  ..$ numopb : int 0\n  ..$ numreo : int 21\n\n# We are interested in eigen$vector.\nhead(eigen$vector)\n\n   E41000001    E41000002    E41000003    E41000004    E41000005    E41000006 \n0.0003901039 0.0006790253 0.0004593193 0.0010995296 0.0007032769 0.0012432240 \n\n# page rank centrality.\nprank &lt;- page_rank(net.all, directed = T)\nstr(prank) # as before\n\nList of 3\n $ vector : Named num [1:346] 0.00109 0.00296 0.00178 0.00318 0.00181 ...\n  ..- attr(*, \"names\")= chr [1:346] \"E41000001\" \"E41000002\" \"E41000003\" \"E41000004\" ...\n $ value  : num 1\n $ options: NULL\n\nhead(prank$vector)\n\n  E41000001   E41000002   E41000003   E41000004   E41000005   E41000006 \n0.001088677 0.002963743 0.001784703 0.003183087 0.001807346 0.002157680 \n\n\nNow that we understood how the above works, let’s chain them together to create a centralities tibble.\n\ncentralities &lt;- tibble(\n  names = vertex_attr(net.all)[[2]],\n  # The above creates a vector with the nodes names (i.e. the local authority names).\n  # We are interested in the second elements of the vertex_attr() as the first one \n  # includes the local authority codes. Try str(vertex_attr(net.all)) to see why.\n  # the double squared brackets [[]] brings the vertex, while the single one []\n  # would have brought a list.\n  in.degree = degree(net.all, mode = \"in\"),\n  out.degree = degree(net.all, mode = \"out\"),\n  degree = degree(net.all, mode = \"in\"),\n  w.in.degree = graph.strength(net.all, mode = \"in\"),\n  w.out.degree = graph.strength(net.all, mode = \"out\"),\n  w.degree = graph.strength(net.all, mode = \"all\"),\n  btwnss = betweenness(net.all, weights = NA),\n  eigen = eigen_centrality(net.all)$vector,  # note the $vector\n  prank = page_rank(net.all, directed = T)$vector) %&gt;% \n  glimpse()\n\nRows: 346\nColumns: 10\n$ names        &lt;chr&gt; \"Hartlepool\", \"Middlesbrough\", \"Redcar and Cleveland\", \"S…\n$ in.degree    &lt;dbl&gt; 111, 214, 118, 216, 237, 275, 326, 204, 178, 292, 292, 21…\n$ out.degree   &lt;dbl&gt; 231, 250, 242, 292, 258, 274, 302, 245, 246, 298, 326, 28…\n$ degree       &lt;dbl&gt; 111, 214, 118, 216, 237, 275, 326, 204, 178, 292, 292, 21…\n$ w.in.degree  &lt;dbl&gt; 8360, 30038, 12786, 29986, 18445, 23080, 49172, 23988, 19…\n$ w.out.degree &lt;dbl&gt; 11261, 20664, 21904, 29329, 15036, 22981, 34607, 19666, 1…\n$ w.degree     &lt;dbl&gt; 19621, 50702, 34690, 59315, 33481, 46061, 83779, 43654, 3…\n$ btwnss       &lt;dbl&gt; 21.38152, 53.13953, 23.46728, 65.89576, 63.64096, 82.8195…\n$ eigen        &lt;dbl&gt; 0.0003901039, 0.0006790253, 0.0004593193, 0.0010995296, 0…\n$ prank        &lt;dbl&gt; 0.001088677, 0.002963743, 0.001784703, 0.003183087, 0.001…\n\n\nOr, if you want a nicer table, you can use kable(). Tip check out the kableExtra package for more options\n\ncentralities %&gt;% kable(caption = \"Centralities\") %&gt;% \n  # The following `kableExtra` function introduces a scroll box\n  scroll_box(width = \"100%\", height = \"300px\")       \n\n\n\nCentralities\n\n\nnames\nin.degree\nout.degree\ndegree\nw.in.degree\nw.out.degree\nw.degree\nbtwnss\neigen\nprank\n\n\n\n\nHartlepool\n111\n231\n111\n8360\n11261\n19621\n21.38152\n0.0003901\n0.0010887\n\n\nMiddlesbrough\n214\n250\n214\n30038\n20664\n50702\n53.13953\n0.0006790\n0.0029637\n\n\nRedcar and Cleveland\n118\n242\n118\n12786\n21904\n34690\n23.46728\n0.0004593\n0.0017847\n\n\nStockton-on-Tees\n216\n292\n216\n29986\n29329\n59315\n65.89576\n0.0010995\n0.0031831\n\n\nDarlington\n237\n258\n237\n18445\n15036\n33481\n63.64096\n0.0007033\n0.0018073\n\n\nHalton\n275\n274\n275\n23080\n22981\n46061\n82.81950\n0.0012432\n0.0021577\n\n\nWarrington\n326\n302\n326\n49172\n34607\n83779\n124.18728\n0.0028033\n0.0038653\n\n\nBlackburn with Darwen\n204\n245\n204\n23988\n19666\n43654\n46.17387\n0.0006750\n0.0024693\n\n\nBlackpool\n178\n246\n178\n19835\n17775\n37610\n43.94347\n0.0005901\n0.0025846\n\n\nKingston upon Hull, City of\n292\n298\n292\n38602\n24199\n62801\n102.14345\n0.0012955\n0.0025353\n\n\nEast Riding of Yorkshire\n292\n326\n292\n30194\n54386\n84580\n120.56251\n0.0020021\n0.0031038\n\n\nNorth East Lincolnshire\n219\n286\n219\n11562\n10600\n22162\n65.06108\n0.0007256\n0.0013687\n\n\nNorth Lincolnshire\n249\n297\n249\n14755\n15493\n30248\n83.06742\n0.0007716\n0.0016239\n\n\nYork\n304\n310\n304\n25651\n21058\n46709\n117.86975\n0.0023097\n0.0026595\n\n\nDerby\n316\n308\n316\n41670\n29802\n71472\n113.83201\n0.0029402\n0.0032790\n\n\nLeicester\n328\n311\n328\n67191\n41007\n108198\n121.94219\n0.0045364\n0.0060454\n\n\nRutland\n223\n225\n223\n6776\n6446\n13222\n40.36699\n0.0012338\n0.0010011\n\n\nNottingham\n336\n315\n336\n89650\n38180\n127830\n134.64542\n0.0039334\n0.0059435\n\n\nHerefordshire, County of\n306\n292\n306\n10786\n13434\n24220\n103.12522\n0.0019351\n0.0013338\n\n\nTelford and Wrekin\n324\n296\n324\n23376\n18322\n41698\n109.90081\n0.0018745\n0.0020630\n\n\nStoke-on-Trent\n313\n309\n313\n40031\n33667\n73698\n114.84293\n0.0015778\n0.0029178\n\n\nBath and North East Somerset\n318\n289\n318\n29241\n23945\n53186\n106.11349\n0.0063148\n0.0031748\n\n\nBristol, City of\n338\n324\n338\n80907\n54120\n135027\n146.21380\n0.0085801\n0.0081482\n\n\nNorth Somerset\n288\n309\n288\n18813\n32553\n51366\n106.51079\n0.0033370\n0.0024983\n\n\nSouth Gloucestershire\n342\n315\n342\n59359\n53569\n112928\n143.90381\n0.0071708\n0.0067618\n\n\nPlymouth\n332\n300\n332\n25793\n20138\n45931\n124.45365\n0.0015797\n0.0032944\n\n\nTorbay\n191\n252\n191\n8569\n12764\n21333\n46.76698\n0.0007531\n0.0015136\n\n\nBournemouth\n248\n283\n248\n25210\n32998\n58208\n72.37210\n0.0044016\n0.0028426\n\n\nPoole\n314\n276\n314\n32048\n24563\n56611\n87.92048\n0.0045316\n0.0030996\n\n\nSwindon\n334\n293\n334\n23868\n24439\n48307\n112.57493\n0.0066072\n0.0024599\n\n\nPeterborough\n337\n294\n337\n32552\n19136\n51688\n111.41706\n0.0080528\n0.0029620\n\n\nLuton\n341\n293\n341\n34348\n33348\n67696\n117.08185\n0.0292726\n0.0026121\n\n\nSouthend-on-Sea\n247\n260\n247\n20661\n29749\n50410\n57.62656\n0.0460325\n0.0012049\n\n\nThurrock\n281\n268\n281\n21804\n34873\n56677\n75.03469\n0.0589668\n0.0013440\n\n\nMedway\n308\n312\n308\n22710\n50453\n73163\n109.01019\n0.0533814\n0.0015706\n\n\nBracknell Forest\n336\n263\n336\n28503\n31002\n59505\n84.64837\n0.0181350\n0.0026867\n\n\nWest Berkshire\n340\n277\n340\n33558\n28003\n61561\n103.72536\n0.0157734\n0.0033439\n\n\nReading\n332\n289\n332\n42267\n32715\n74982\n112.58266\n0.0227425\n0.0040357\n\n\nSlough\n335\n271\n335\n39282\n31753\n71035\n94.80244\n0.0380361\n0.0041691\n\n\nWindsor and Maidenhead\n341\n273\n341\n36971\n34482\n71453\n99.72553\n0.0372343\n0.0038264\n\n\nWokingham\n340\n269\n340\n30764\n42810\n73574\n90.37405\n0.0237476\n0.0032668\n\n\nMilton Keynes\n344\n307\n344\n44450\n27780\n72230\n122.22514\n0.0253813\n0.0035232\n\n\nBrighton and Hove\n297\n287\n297\n31879\n36938\n68817\n88.44945\n0.0325543\n0.0022023\n\n\nPortsmouth\n343\n288\n343\n41272\n27862\n69134\n115.85177\n0.0059324\n0.0032274\n\n\nSouthampton\n321\n300\n321\n41891\n41234\n83125\n115.21255\n0.0069496\n0.0036577\n\n\nIsle of Wight\n219\n244\n219\n2083\n4544\n6627\n44.65755\n0.0019493\n0.0006276\n\n\nCounty Durham\n316\n328\n316\n35081\n64602\n99683\n136.76168\n0.0025184\n0.0033631\n\n\nNorthumberland\n287\n310\n287\n22254\n43011\n65265\n105.96942\n0.0024251\n0.0023084\n\n\nCheshire East\n331\n334\n331\n53260\n51773\n105033\n153.00249\n0.0049410\n0.0044883\n\n\nCheshire West and Chester\n323\n324\n323\n50910\n51970\n102880\n141.77478\n0.0034742\n0.0039760\n\n\nShropshire\n336\n330\n336\n29111\n34424\n63535\n148.35300\n0.0036140\n0.0027990\n\n\nCornwall,Isles of Scilly\n341\n330\n341\n11163\n18567\n29730\n155.46166\n0.0032429\n0.0016854\n\n\nWiltshire\n345\n331\n345\n39717\n55625\n95342\n160.51941\n0.0150479\n0.0040658\n\n\nBedford\n314\n297\n314\n21392\n22483\n43875\n100.59431\n0.0154519\n0.0018139\n\n\nCentral Bedfordshire\n343\n312\n343\n32469\n66131\n98600\n129.24999\n0.0390917\n0.0028629\n\n\nAylesbury Vale\n330\n303\n330\n19831\n34981\n54812\n113.28702\n0.0227757\n0.0020113\n\n\nChiltern\n253\n234\n253\n13391\n22558\n35949\n44.70020\n0.0301093\n0.0015106\n\n\nSouth Bucks\n310\n223\n310\n20603\n20381\n40984\n55.75605\n0.0262182\n0.0023714\n\n\nWycombe\n339\n283\n339\n27246\n32323\n59569\n100.06675\n0.0304376\n0.0027075\n\n\nCambridge\n312\n250\n312\n51240\n16062\n67302\n73.34194\n0.0134464\n0.0046020\n\n\nEast Cambridgeshire\n216\n247\n216\n8216\n20939\n29155\n41.75094\n0.0043745\n0.0012342\n\n\nFenland\n179\n265\n179\n10010\n16271\n26281\n41.16076\n0.0024054\n0.0013423\n\n\nHuntingdonshire\n310\n302\n310\n20270\n31621\n51891\n102.90672\n0.0132382\n0.0023001\n\n\nSouth Cambridgeshire\n328\n284\n328\n34916\n39466\n74382\n98.77528\n0.0143335\n0.0042710\n\n\nAllerdale\n188\n203\n188\n6436\n11733\n18169\n33.91827\n0.0002556\n0.0019898\n\n\nBarrow-in-Furness\n144\n173\n144\n5100\n4715\n9815\n20.75604\n0.0002271\n0.0014106\n\n\nCarlisle\n306\n242\n306\n9904\n5953\n15857\n78.20939\n0.0005917\n0.0021074\n\n\nCopeland\n162\n185\n162\n7919\n5986\n13905\n26.13944\n0.0001593\n0.0017038\n\n\nEden\n225\n187\n225\n6209\n4666\n10875\n41.29631\n0.0002394\n0.0016928\n\n\nSouth Lakeland\n234\n235\n234\n9651\n8994\n18645\n56.17406\n0.0005490\n0.0020873\n\n\nAmber Valley\n281\n271\n281\n21778\n25962\n47740\n77.94638\n0.0014457\n0.0019987\n\n\nBolsover\n242\n243\n242\n15315\n20347\n35662\n54.66120\n0.0006313\n0.0014976\n\n\nChesterfield\n242\n256\n242\n21349\n17107\n38456\n56.87320\n0.0007520\n0.0017426\n\n\nDerbyshire Dales\n201\n251\n201\n13161\n11828\n24989\n42.88387\n0.0009256\n0.0013577\n\n\nErewash\n200\n275\n200\n16623\n28395\n45018\n50.97433\n0.0012799\n0.0017058\n\n\nHigh Peak\n188\n255\n188\n7663\n17319\n24982\n45.93415\n0.0008832\n0.0009999\n\n\nNorth East Derbyshire\n172\n274\n172\n13414\n28664\n42078\n42.70590\n0.0007958\n0.0014644\n\n\nSouth Derbyshire\n216\n276\n216\n14306\n28077\n42383\n53.41385\n0.0011521\n0.0016710\n\n\nEast Devon\n315\n261\n315\n12430\n18130\n30560\n83.85873\n0.0015576\n0.0029037\n\n\nExeter\n248\n241\n248\n37151\n10809\n47960\n57.60331\n0.0011451\n0.0047422\n\n\nMid Devon\n163\n220\n163\n5569\n13667\n19236\n31.82063\n0.0007052\n0.0015827\n\n\nNorth Devon\n261\n233\n261\n7735\n4645\n12380\n56.35792\n0.0007480\n0.0012730\n\n\nSouth Hams\n282\n235\n282\n16938\n13322\n30260\n65.87841\n0.0012274\n0.0025189\n\n\nTeignbridge\n232\n252\n232\n12250\n20987\n33237\n58.11052\n0.0010440\n0.0023279\n\n\nTorridge\n116\n196\n116\n3575\n8288\n11863\n14.07664\n0.0003644\n0.0009993\n\n\nWest Devon\n125\n208\n125\n4593\n8149\n12742\n22.82693\n0.0005090\n0.0009780\n\n\nChristchurch\n175\n192\n175\n10677\n10213\n20890\n24.36314\n0.0012017\n0.0012651\n\n\nEast Dorset\n197\n234\n197\n13531\n19487\n33018\n37.02858\n0.0023127\n0.0016371\n\n\nNorth Dorset\n254\n216\n254\n6962\n9997\n16959\n47.73131\n0.0018001\n0.0011060\n\n\nPurbeck\n226\n186\n226\n7634\n8732\n16366\n33.64330\n0.0010481\n0.0011865\n\n\nWest Dorset\n235\n238\n235\n18059\n11425\n29484\n49.90794\n0.0017699\n0.0020121\n\n\nWeymouth and Portland\n206\n209\n206\n3447\n11981\n15428\n35.60819\n0.0005798\n0.0008754\n\n\nEastbourne\n204\n227\n204\n12373\n12830\n25203\n36.12422\n0.0054015\n0.0010266\n\n\nHastings\n164\n236\n164\n8006\n11732\n19738\n29.94627\n0.0049038\n0.0009044\n\n\nLewes\n202\n224\n202\n14403\n19800\n34203\n34.92845\n0.0104541\n0.0011926\n\n\nRother\n182\n215\n182\n9630\n15054\n24684\n27.26210\n0.0074697\n0.0010183\n\n\nWealden\n258\n261\n258\n14989\n30274\n45263\n58.96939\n0.0186274\n0.0013393\n\n\nBasildon\n321\n282\n321\n36071\n36057\n72128\n92.09181\n0.0612035\n0.0019214\n\n\nBraintree\n270\n277\n270\n15184\n31582\n46766\n74.27107\n0.0271398\n0.0013120\n\n\nBrentwood\n289\n223\n289\n17745\n19995\n37740\n52.37953\n0.0409946\n0.0012340\n\n\nCastle Point\n154\n236\n154\n7467\n23473\n30940\n28.09746\n0.0251378\n0.0007424\n\n\nChelmsford\n293\n275\n293\n30575\n34222\n64797\n83.33582\n0.0512377\n0.0018830\n\n\nColchester\n327\n270\n327\n22968\n24545\n47513\n94.70758\n0.0235711\n0.0016488\n\n\nEpping Forest\n290\n251\n290\n21509\n35475\n56984\n68.68786\n0.0711352\n0.0015571\n\n\nHarlow\n294\n232\n294\n15994\n16492\n32486\n57.74732\n0.0195485\n0.0013293\n\n\nMaldon\n210\n210\n210\n6513\n13689\n20202\n33.49157\n0.0119064\n0.0007505\n\n\nRochford\n178\n239\n178\n10411\n24351\n34762\n35.41168\n0.0271557\n0.0008385\n\n\nTendring\n229\n257\n229\n6763\n17203\n23966\n51.10530\n0.0091833\n0.0008516\n\n\nUttlesford\n307\n240\n307\n17618\n17973\n35591\n63.70076\n0.0202609\n0.0014814\n\n\nCheltenham\n293\n272\n293\n24125\n19592\n43717\n85.00521\n0.0025958\n0.0030665\n\n\nCotswold\n293\n254\n293\n15685\n13651\n29336\n71.25964\n0.0041576\n0.0018831\n\n\nForest of Dean\n206\n248\n206\n6007\n14512\n20519\n48.05798\n0.0008705\n0.0010042\n\n\nGloucester\n290\n276\n290\n26099\n23463\n49562\n85.55168\n0.0014927\n0.0030158\n\n\nStroud\n289\n267\n289\n13241\n20326\n33567\n83.56128\n0.0024767\n0.0018481\n\n\nTewkesbury\n322\n249\n322\n25184\n20469\n45653\n87.05614\n0.0015420\n0.0030289\n\n\nBasingstoke and Deane\n338\n280\n338\n25401\n30492\n55893\n101.39306\n0.0181075\n0.0025112\n\n\nEast Hampshire\n328\n268\n328\n15462\n25476\n40938\n93.84842\n0.0120776\n0.0016435\n\n\nEastleigh\n309\n260\n309\n32465\n33798\n66263\n81.90592\n0.0056096\n0.0029667\n\n\nFareham\n310\n264\n310\n24609\n29734\n54343\n76.99256\n0.0039958\n0.0022174\n\n\nGosport\n272\n237\n272\n7327\n20473\n27800\n58.39117\n0.0018505\n0.0010068\n\n\nHart\n328\n253\n328\n18470\n26300\n44770\n78.77749\n0.0156487\n0.0018362\n\n\nHavant\n211\n248\n211\n17666\n26401\n44067\n43.23830\n0.0039611\n0.0018958\n\n\nNew Forest\n302\n279\n302\n22744\n29791\n52535\n86.90241\n0.0054670\n0.0022859\n\n\nRushmoor\n334\n258\n334\n25017\n26056\n51073\n89.27181\n0.0143124\n0.0022710\n\n\nTest Valley\n318\n256\n318\n22956\n24789\n47745\n79.16895\n0.0075231\n0.0021833\n\n\nWinchester\n327\n270\n327\n41929\n23369\n65298\n89.55948\n0.0114415\n0.0035121\n\n\nBroxbourne\n317\n249\n317\n18151\n25440\n43591\n73.49505\n0.0391390\n0.0015310\n\n\nDacorum\n338\n286\n338\n23817\n30858\n54675\n104.58269\n0.0370314\n0.0020320\n\n\nEast Hertfordshire\n297\n274\n297\n22122\n35988\n58110\n79.93959\n0.0446914\n0.0018916\n\n\nHertsmere\n316\n242\n316\n25251\n28231\n53482\n69.43996\n0.0558631\n0.0022121\n\n\nNorth Hertfordshire\n293\n273\n293\n20355\n32707\n53062\n77.54596\n0.0292122\n0.0018191\n\n\nSt Albans\n318\n271\n318\n26809\n36418\n63227\n81.85818\n0.0619411\n0.0023555\n\n\nStevenage\n314\n254\n314\n20748\n18525\n39273\n72.02250\n0.0171373\n0.0017124\n\n\nThree Rivers\n322\n253\n322\n18584\n27115\n45699\n76.96263\n0.0380419\n0.0018902\n\n\nWatford\n332\n248\n332\n28799\n24774\n53573\n78.54169\n0.0405963\n0.0024651\n\n\nWelwyn Hatfield\n336\n271\n336\n38496\n22907\n61403\n90.64350\n0.0389517\n0.0029540\n\n\nAshford\n255\n254\n255\n15035\n17786\n32821\n59.60893\n0.0139988\n0.0012927\n\n\nCanterbury\n234\n274\n234\n19479\n18121\n37600\n61.96377\n0.0115107\n0.0014501\n\n\nDartford\n306\n248\n306\n32588\n27117\n59705\n69.01172\n0.0545483\n0.0016458\n\n\nDover\n234\n249\n234\n9959\n16669\n26628\n48.35895\n0.0045037\n0.0010274\n\n\nGravesham\n212\n258\n212\n10155\n25676\n35831\n42.33955\n0.0298471\n0.0008559\n\n\nMaidstone\n296\n278\n296\n29979\n31058\n61037\n76.04405\n0.0296875\n0.0018485\n\n\nSevenoaks\n274\n246\n274\n20929\n30420\n51349\n58.51716\n0.0566217\n0.0013925\n\n\nShepway\n232\n250\n232\n10992\n14806\n25798\n48.02087\n0.0065689\n0.0010662\n\n\nSwale\n237\n274\n237\n12599\n22875\n35474\n59.86629\n0.0186895\n0.0010335\n\n\nThanet\n188\n242\n188\n5846\n13348\n19194\n36.05674\n0.0056380\n0.0007948\n\n\nTonbridge and Malling\n270\n254\n270\n30765\n30473\n61238\n56.01878\n0.0379614\n0.0018185\n\n\nTunbridge Wells\n227\n240\n227\n20116\n22147\n42263\n47.12165\n0.0336823\n0.0014347\n\n\nBurnley\n159\n222\n159\n14595\n15150\n29745\n33.54753\n0.0003922\n0.0016247\n\n\nChorley\n168\n261\n168\n14994\n26851\n41845\n43.70430\n0.0007779\n0.0016512\n\n\nFylde\n230\n223\n230\n21711\n13080\n34791\n52.67556\n0.0005238\n0.0027609\n\n\nHyndburn\n130\n203\n130\n12702\n17380\n30082\n20.42098\n0.0002830\n0.0015889\n\n\nLancaster\n209\n274\n209\n8091\n11592\n19683\n59.97534\n0.0006400\n0.0015040\n\n\nPendle\n178\n212\n178\n10432\n15013\n25445\n34.52029\n0.0003655\n0.0013588\n\n\nPreston\n288\n270\n288\n44352\n21146\n65498\n84.42626\n0.0011831\n0.0042716\n\n\nRibble Valley\n187\n190\n187\n14075\n12870\n26945\n29.07366\n0.0004309\n0.0018088\n\n\nRossendale\n152\n218\n152\n7571\n16019\n23590\n28.52086\n0.0004274\n0.0010012\n\n\nSouth Ribble\n233\n256\n233\n23544\n30099\n53643\n59.66094\n0.0007475\n0.0026508\n\n\nWest Lancashire\n214\n266\n214\n19805\n21733\n41538\n56.65700\n0.0009294\n0.0015818\n\n\nWyre\n157\n226\n157\n10819\n21156\n31975\n33.40469\n0.0005131\n0.0018022\n\n\nBlaby\n304\n264\n304\n31649\n27848\n59497\n78.31709\n0.0018932\n0.0034461\n\n\nCharnwood\n292\n317\n292\n23040\n34580\n57620\n107.91161\n0.0024076\n0.0026228\n\n\nHarborough\n273\n265\n273\n19547\n21344\n40891\n64.82323\n0.0026586\n0.0022494\n\n\nHinckley and Bosworth\n256\n283\n256\n15677\n26835\n42512\n75.05241\n0.0014834\n0.0018541\n\n\nMelton\n175\n223\n175\n6142\n10160\n16302\n26.91873\n0.0009008\n0.0009814\n\n\nNorth West Leicestershire\n331\n267\n331\n26666\n19081\n45747\n95.63833\n0.0013247\n0.0024521\n\n\nOadby and Wigston\n162\n215\n162\n11870\n17102\n28972\n20.71941\n0.0010987\n0.0016922\n\n\nBoston\n144\n211\n144\n7495\n7088\n14583\n23.15199\n0.0004174\n0.0010821\n\n\nEast Lindsey\n272\n280\n272\n8351\n12695\n21046\n85.42615\n0.0007084\n0.0012323\n\n\nLincoln\n229\n261\n229\n25583\n14947\n40530\n51.75565\n0.0008666\n0.0022827\n\n\nNorth Kesteven\n308\n295\n308\n16326\n22631\n38957\n103.67317\n0.0014144\n0.0020627\n\n\nSouth Holland\n212\n265\n212\n8955\n11472\n20427\n50.29864\n0.0015531\n0.0013288\n\n\nSouth Kesteven\n275\n303\n275\n14185\n23275\n37460\n94.80642\n0.0039822\n0.0018098\n\n\nWest Lindsey\n180\n265\n180\n9169\n19863\n29032\n46.25926\n0.0006861\n0.0013060\n\n\nBreckland\n246\n281\n246\n12378\n23016\n35394\n65.43999\n0.0018253\n0.0015886\n\n\nBroadland\n181\n251\n181\n18858\n32823\n51681\n39.50570\n0.0019036\n0.0026217\n\n\nGreat Yarmouth\n198\n220\n198\n9250\n9511\n18761\n38.18528\n0.0007335\n0.0012681\n\n\nKing's Lynn and West Norfolk\n299\n290\n299\n11047\n14664\n25711\n94.66804\n0.0025603\n0.0013157\n\n\nNorth Norfolk\n187\n238\n187\n8506\n11750\n20256\n34.85599\n0.0013520\n0.0011684\n\n\nNorwich\n283\n259\n283\n48392\n21251\n69643\n63.73725\n0.0026206\n0.0041001\n\n\nSouth Norfolk\n263\n258\n263\n22671\n28315\n50986\n60.76567\n0.0026761\n0.0027300\n\n\nCorby\n202\n239\n202\n9176\n8734\n17910\n38.33096\n0.0013677\n0.0012179\n\n\nDaventry\n269\n284\n269\n17275\n18078\n35353\n79.04507\n0.0033339\n0.0020310\n\n\nEast Northamptonshire\n244\n274\n244\n10043\n22265\n32308\n68.11886\n0.0038892\n0.0013554\n\n\nKettering\n268\n284\n268\n13980\n18491\n32471\n70.87864\n0.0030991\n0.0016957\n\n\nNorthampton\n337\n307\n337\n39498\n27141\n66639\n118.08045\n0.0088677\n0.0036166\n\n\nSouth Northamptonshire\n289\n293\n289\n13977\n25354\n39331\n92.12130\n0.0062021\n0.0017508\n\n\nWellingborough\n318\n262\n318\n14948\n16857\n31805\n80.21191\n0.0036900\n0.0016290\n\n\nCraven\n163\n202\n163\n8901\n9015\n17916\n30.47052\n0.0005107\n0.0011944\n\n\nHambleton\n275\n248\n275\n17621\n13906\n31527\n74.05896\n0.0009081\n0.0022288\n\n\nHarrogate\n325\n282\n325\n19366\n18342\n37708\n110.93138\n0.0023168\n0.0024481\n\n\nRichmondshire\n324\n234\n324\n7255\n7057\n14312\n93.34512\n0.0007768\n0.0011037\n\n\nRyedale\n168\n188\n168\n7047\n6445\n13492\n28.82552\n0.0004876\n0.0011190\n\n\nScarborough\n184\n244\n184\n5058\n6783\n11841\n46.02664\n0.0005090\n0.0008944\n\n\nSelby\n213\n264\n213\n13235\n20848\n34083\n52.54992\n0.0010276\n0.0015011\n\n\nAshfield\n273\n272\n273\n25763\n27847\n53610\n76.99274\n0.0010518\n0.0022554\n\n\nBassetlaw\n251\n280\n251\n16161\n16975\n33136\n73.46786\n0.0009655\n0.0015236\n\n\nBroxtowe\n251\n280\n251\n18998\n33183\n52181\n68.09294\n0.0015889\n0.0019933\n\n\nGedling\n178\n275\n178\n15434\n34039\n49473\n46.03025\n0.0014039\n0.0018589\n\n\nMansfield\n200\n267\n200\n15911\n23109\n39020\n47.93428\n0.0008000\n0.0015661\n\n\nNewark and Sherwood\n226\n288\n226\n17327\n20763\n38090\n62.46194\n0.0015555\n0.0017440\n\n\nRushcliffe\n256\n288\n256\n20897\n30122\n51019\n76.63440\n0.0020342\n0.0022778\n\n\nCherwell\n332\n298\n332\n23167\n26000\n49167\n111.31845\n0.0082417\n0.0026410\n\n\nOxford\n333\n287\n333\n45775\n15693\n61468\n107.32489\n0.0113616\n0.0045709\n\n\nSouth Oxfordshire\n337\n268\n337\n23589\n31775\n55364\n88.07716\n0.0151645\n0.0028817\n\n\nVale of White Horse\n336\n272\n336\n24697\n25427\n50124\n98.46835\n0.0082747\n0.0030820\n\n\nWest Oxfordshire\n333\n260\n333\n11768\n19990\n31758\n83.83685\n0.0051550\n0.0017197\n\n\nMendip\n250\n247\n250\n11450\n15842\n27292\n64.75602\n0.0021761\n0.0015764\n\n\nSedgemoor\n232\n259\n232\n9209\n16894\n26103\n60.36191\n0.0010367\n0.0015783\n\n\nSouth Somerset\n321\n277\n321\n15164\n15892\n31056\n101.23392\n0.0020952\n0.0022205\n\n\nTaunton Deane\n277\n243\n277\n15713\n9820\n25533\n66.05293\n0.0012006\n0.0022342\n\n\nWest Somerset\n165\n153\n165\n2780\n3167\n5947\n18.02491\n0.0004053\n0.0007693\n\n\nCannock Chase\n239\n267\n239\n14864\n23408\n38272\n57.70909\n0.0009774\n0.0013914\n\n\nEast Staffordshire\n294\n291\n294\n23275\n18822\n42097\n101.32347\n0.0012667\n0.0020181\n\n\nLichfield\n292\n277\n292\n20396\n24559\n44955\n84.24212\n0.0020662\n0.0019028\n\n\nNewcastle-under-Lyme\n261\n285\n261\n21455\n29382\n50837\n79.24630\n0.0011395\n0.0019857\n\n\nSouth Staffordshire\n240\n290\n240\n17575\n34347\n51922\n72.56398\n0.0015476\n0.0015857\n\n\nStafford\n314\n294\n314\n23835\n20934\n44769\n105.13228\n0.0018028\n0.0020109\n\n\nStaffordshire Moorlands\n200\n270\n200\n10201\n22847\n33048\n49.71024\n0.0007831\n0.0011897\n\n\nTamworth\n272\n268\n272\n11312\n19185\n30497\n75.84114\n0.0011977\n0.0014167\n\n\nBabergh\n237\n243\n237\n11616\n18040\n29656\n49.49746\n0.0069612\n0.0013146\n\n\nForest Heath\n224\n206\n224\n13035\n11543\n24578\n33.10973\n0.0015872\n0.0014177\n\n\nIpswich\n236\n255\n236\n27497\n21192\n48689\n53.76366\n0.0057598\n0.0023529\n\n\nMid Suffolk\n273\n247\n273\n13930\n20713\n34643\n63.35687\n0.0042169\n0.0016024\n\n\nSt Edmundsbury\n313\n271\n313\n19511\n17447\n36958\n88.32277\n0.0039806\n0.0018960\n\n\nSuffolk Coastal\n285\n239\n285\n15143\n18880\n34023\n59.27719\n0.0052585\n0.0016880\n\n\nWaveney\n193\n239\n193\n8325\n11675\n20000\n39.78191\n0.0012538\n0.0012324\n\n\nElmbridge\n305\n245\n305\n27029\n35122\n62151\n62.72055\n0.0685952\n0.0024269\n\n\nEpsom and Ewell\n254\n224\n254\n15227\n22939\n38166\n43.36186\n0.0395024\n0.0013033\n\n\nGuildford\n334\n258\n334\n38372\n30423\n68795\n85.17198\n0.0361713\n0.0030977\n\n\nMole Valley\n315\n217\n315\n23768\n19616\n43384\n53.14222\n0.0298856\n0.0020016\n\n\nReigate and Banstead\n333\n262\n333\n32483\n35696\n68179\n89.77510\n0.0537983\n0.0024743\n\n\nRunnymede\n335\n250\n335\n30604\n21324\n51928\n82.53407\n0.0279868\n0.0027531\n\n\nSpelthorne\n309\n235\n309\n21043\n30107\n51150\n57.35777\n0.0369474\n0.0021774\n\n\nSurrey Heath\n328\n243\n328\n23260\n24154\n47414\n70.25703\n0.0172171\n0.0021745\n\n\nTandridge\n246\n240\n246\n13937\n22538\n36475\n59.01705\n0.0367740\n0.0011585\n\n\nWaverley\n283\n258\n283\n20886\n27655\n48541\n68.70357\n0.0272366\n0.0019656\n\n\nWoking\n321\n232\n321\n20273\n27207\n47480\n59.27815\n0.0340234\n0.0020659\n\n\nNorth Warwickshire\n277\n248\n277\n25282\n16883\n42165\n58.55078\n0.0017477\n0.0024229\n\n\nNuneaton and Bedworth\n246\n269\n246\n15037\n29798\n44835\n52.50267\n0.0019273\n0.0018603\n\n\nRugby\n320\n280\n320\n17523\n20443\n37966\n101.36753\n0.0031786\n0.0020217\n\n\nStratford-on-Avon\n323\n296\n323\n25409\n22594\n48003\n113.24263\n0.0043159\n0.0028345\n\n\nWarwick\n341\n290\n341\n33726\n25353\n59079\n112.36995\n0.0056245\n0.0035936\n\n\nAdur\n179\n194\n179\n9348\n16454\n25802\n20.54255\n0.0046602\n0.0009409\n\n\nArun\n221\n276\n221\n8962\n27174\n36136\n58.30258\n0.0058173\n0.0010559\n\n\nChichester\n300\n253\n300\n24254\n16115\n40369\n73.41119\n0.0088457\n0.0017499\n\n\nCrawley\n335\n246\n335\n43108\n18998\n62106\n72.56600\n0.0248586\n0.0029446\n\n\nHorsham\n297\n265\n297\n16707\n26654\n43361\n75.17375\n0.0180015\n0.0015769\n\n\nMid Sussex\n306\n263\n306\n20393\n31709\n52102\n80.30516\n0.0306906\n0.0017534\n\n\nWorthing\n218\n236\n218\n16690\n17756\n34446\n42.16681\n0.0062165\n0.0012322\n\n\nBromsgrove\n252\n274\n252\n18870\n25995\n44865\n66.89830\n0.0023463\n0.0020102\n\n\nMalvern Hills\n199\n255\n199\n10947\n14054\n25001\n46.11698\n0.0010464\n0.0013943\n\n\nRedditch\n262\n259\n262\n13741\n17512\n31253\n61.69639\n0.0013303\n0.0016096\n\n\nWorcester\n277\n269\n277\n21134\n17845\n38979\n75.86830\n0.0012321\n0.0020818\n\n\nWychavon\n264\n290\n264\n20602\n24629\n45231\n83.46586\n0.0017334\n0.0021899\n\n\nWyre Forest\n168\n266\n168\n8628\n17456\n26084\n40.84484\n0.0008476\n0.0010503\n\n\nBolton\n291\n302\n291\n33985\n42018\n76003\n106.68833\n0.0021221\n0.0027325\n\n\nBury\n261\n290\n261\n26895\n41317\n68212\n83.76982\n0.0021060\n0.0024213\n\n\nManchester\n345\n333\n345\n179517\n72365\n251882\n161.42941\n0.0081722\n0.0134337\n\n\nOldham\n241\n296\n241\n29113\n36102\n65215\n80.47174\n0.0019906\n0.0025758\n\n\nRochdale\n258\n286\n258\n25139\n36507\n61646\n81.99142\n0.0017133\n0.0022337\n\n\nSalford\n327\n304\n327\n59144\n51900\n111044\n118.37394\n0.0039354\n0.0053232\n\n\nStockport\n320\n314\n320\n47968\n58798\n106766\n127.30501\n0.0044807\n0.0047446\n\n\nTameside\n243\n299\n243\n23571\n45702\n69273\n84.14139\n0.0023514\n0.0023393\n\n\nTrafford\n316\n299\n316\n70188\n50717\n120905\n113.06647\n0.0048473\n0.0068569\n\n\nWigan\n311\n316\n311\n27578\n59356\n86934\n126.87502\n0.0023235\n0.0024079\n\n\nKnowsley\n221\n273\n221\n30613\n34820\n65433\n60.35691\n0.0015454\n0.0025930\n\n\nLiverpool\n301\n333\n301\n91162\n50759\n141921\n130.03027\n0.0042335\n0.0055228\n\n\nSt. Helens\n259\n283\n259\n22077\n35479\n57556\n81.68252\n0.0013260\n0.0018928\n\n\nSefton\n217\n316\n217\n28443\n46950\n75393\n77.79284\n0.0022610\n0.0025645\n\n\nWirral\n241\n324\n241\n17244\n44072\n61316\n97.57457\n0.0024890\n0.0017127\n\n\nBarnsley\n242\n302\n242\n17314\n37625\n54939\n78.98661\n0.0015289\n0.0016357\n\n\nDoncaster\n291\n314\n291\n26494\n32298\n58792\n105.97681\n0.0019361\n0.0022314\n\n\nRotherham\n287\n312\n287\n36886\n43598\n80484\n110.48375\n0.0018907\n0.0027850\n\n\nSheffield\n337\n337\n337\n63693\n45426\n109119\n160.95208\n0.0033646\n0.0042047\n\n\nGateshead\n200\n279\n200\n42942\n42399\n85341\n51.61637\n0.0017757\n0.0035313\n\n\nNewcastle upon Tyne\n320\n292\n320\n89811\n38300\n128111\n104.36164\n0.0030717\n0.0057526\n\n\nNorth Tyneside\n256\n283\n256\n32439\n43079\n75518\n78.16212\n0.0019184\n0.0030158\n\n\nSouth Tyneside\n149\n271\n149\n14369\n27022\n41391\n39.24558\n0.0009407\n0.0014669\n\n\nSunderland\n254\n294\n254\n40830\n34827\n75657\n81.87235\n0.0018640\n0.0028891\n\n\nBirmingham\n345\n343\n345\n166056\n100223\n266279\n174.73617\n0.0144646\n0.0127334\n\n\nCoventry\n339\n321\n339\n50577\n39493\n90070\n145.23539\n0.0058079\n0.0048386\n\n\nDudley\n318\n318\n318\n38796\n57172\n95968\n126.70449\n0.0042945\n0.0031201\n\n\nSandwell\n330\n322\n330\n58716\n61446\n120162\n138.97124\n0.0058632\n0.0045497\n\n\nSolihull\n333\n320\n333\n51374\n49120\n100494\n133.30159\n0.0075356\n0.0053752\n\n\nWalsall\n333\n313\n333\n41782\n48755\n90537\n130.19952\n0.0039666\n0.0033192\n\n\nWolverhampton\n314\n305\n314\n44388\n40094\n84482\n112.57007\n0.0032852\n0.0030924\n\n\nBradford\n337\n318\n337\n50336\n55040\n105376\n142.38026\n0.0043787\n0.0048884\n\n\nCalderdale\n319\n293\n319\n26978\n28593\n55571\n123.10999\n0.0019020\n0.0022845\n\n\nKirklees\n318\n323\n318\n34538\n59527\n94065\n133.83505\n0.0034612\n0.0032210\n\n\nLeeds\n340\n340\n340\n121087\n65369\n186456\n166.23405\n0.0072535\n0.0092803\n\n\nWakefield\n297\n322\n297\n45101\n45316\n90417\n120.17849\n0.0029064\n0.0038373\n\n\nBarking and Dagenham\n259\n278\n259\n28989\n45584\n74573\n74.07906\n0.0947743\n0.0016538\n\n\nBarnet\n335\n295\n335\n53143\n94328\n147471\n107.29323\n0.2678205\n0.0053627\n\n\nBexley\n297\n282\n297\n28684\n63899\n92583\n81.72835\n0.1419983\n0.0016966\n\n\nBrent\n324\n306\n324\n54353\n86120\n140473\n115.73294\n0.2552967\n0.0066587\n\n\nBromley\n322\n288\n322\n40897\n80537\n121434\n104.05368\n0.2233553\n0.0022546\n\n\nCamden\n345\n282\n345\n227171\n62784\n289955\n116.18251\n0.4715192\n0.0277070\n\n\nCroydon\n306\n302\n306\n39884\n92094\n131978\n100.31073\n0.2122394\n0.0026456\n\n\nEaling\n342\n296\n342\n63429\n95217\n158646\n121.88623\n0.2424303\n0.0072984\n\n\nEnfield\n314\n294\n314\n41313\n73140\n114453\n105.61314\n0.1777036\n0.0031087\n\n\nGreenwich\n316\n289\n316\n39593\n70802\n110395\n97.80635\n0.1959638\n0.0024311\n\n\nHackney\n325\n282\n325\n60542\n75197\n135739\n104.27664\n0.2704059\n0.0068321\n\n\nHammersmith and Fulham\n340\n273\n340\n90212\n64765\n154977\n103.70858\n0.3005236\n0.0118080\n\n\nHaringey\n300\n286\n300\n37279\n80177\n117456\n93.22087\n0.2386431\n0.0032502\n\n\nHarrow\n311\n287\n311\n28680\n68538\n97218\n92.42766\n0.1476876\n0.0030209\n\n\nHavering\n286\n283\n286\n31769\n59870\n91639\n80.88612\n0.1240316\n0.0018851\n\n\nHillingdon\n345\n303\n345\n96119\n61002\n157121\n123.20678\n0.1448890\n0.0086205\n\n\nHounslow\n339\n298\n339\n73977\n71624\n145601\n113.12328\n0.1694069\n0.0072375\n\n\nIslington\n342\n277\n342\n132028\n70981\n203009\n102.43241\n0.3661235\n0.0151687\n\n\nKensington and Chelsea\n334\n256\n334\n86860\n50799\n137659\n87.89829\n0.3011796\n0.0144531\n\n\nKingston upon Thames\n317\n272\n317\n35923\n45101\n81024\n88.78187\n0.1066740\n0.0027264\n\n\nLambeth\n339\n295\n339\n87037\n115419\n202456\n120.60327\n0.4329508\n0.0086193\n\n\nLewisham\n273\n288\n273\n32829\n89663\n122492\n81.85742\n0.2550396\n0.0023540\n\n\nMerton\n309\n280\n309\n38381\n67646\n106027\n87.42231\n0.1894013\n0.0028738\n\n\nNewham\n331\n305\n331\n49198\n77274\n126472\n118.87240\n0.2181891\n0.0037221\n\n\nRedbridge\n266\n289\n266\n32064\n77588\n109652\n80.78754\n0.1798939\n0.0020014\n\n\nRichmond upon Thames\n316\n273\n316\n38600\n58964\n97564\n87.93170\n0.1564364\n0.0037355\n\n\nSouthwark\n343\n297\n343\n132137\n95381\n227518\n120.54708\n0.4190788\n0.0124909\n\n\nSutton\n323\n268\n323\n29841\n55030\n84871\n82.50370\n0.1105433\n0.0019988\n\n\nTower Hamlets\n340\n296\n340\n185467\n70808\n256275\n119.14147\n0.4108055\n0.0210011\n\n\nWaltham Forest\n300\n284\n300\n30367\n71912\n102279\n87.15664\n0.1866278\n0.0023823\n\n\nWandsworth\n327\n305\n327\n63894\n124029\n187923\n121.44261\n0.4178796\n0.0058755\n\n\nWestminster,City of London\n345\n289\n345\n866007\n42018\n908025\n109.10666\n1.0000000\n0.0736260\n\n\nIsle of Anglesey\n156\n203\n156\n3104\n8796\n11900\n31.56061\n0.0002621\n0.0008721\n\n\nGwynedd\n198\n256\n198\n11022\n7125\n18147\n50.38462\n0.0004746\n0.0014136\n\n\nConwy\n144\n244\n144\n7404\n12011\n19415\n30.74925\n0.0005230\n0.0012531\n\n\nDenbighshire\n168\n231\n168\n11688\n11327\n23015\n36.51620\n0.0004665\n0.0014354\n\n\nFlintshire\n284\n278\n284\n23770\n25459\n49229\n87.62641\n0.0012318\n0.0021949\n\n\nWrexham\n263\n264\n263\n13956\n16546\n30502\n73.76438\n0.0008075\n0.0014989\n\n\nCeredigion\n119\n211\n119\n4114\n4008\n8122\n21.56446\n0.0003086\n0.0009089\n\n\nPembrokeshire\n242\n245\n242\n4107\n4992\n9099\n63.15133\n0.0005744\n0.0008883\n\n\nCarmarthenshire\n169\n269\n169\n10881\n17404\n28285\n44.90724\n0.0008303\n0.0017942\n\n\nSwansea\n279\n300\n279\n27777\n19589\n47366\n98.91703\n0.0014553\n0.0027418\n\n\nNeath Port Talbot\n146\n248\n146\n15691\n22974\n38665\n32.14387\n0.0006626\n0.0020202\n\n\nBridgend\n192\n261\n192\n17241\n17783\n35024\n49.79841\n0.0007512\n0.0018916\n\n\nThe Vale of Glamorgan\n250\n276\n250\n13263\n26340\n39603\n77.19142\n0.0014653\n0.0018653\n\n\nCardiff\n321\n310\n321\n73041\n32252\n105293\n126.18715\n0.0032443\n0.0056728\n\n\nRhondda Cynon Taf\n239\n289\n239\n19349\n36305\n55654\n72.07335\n0.0012933\n0.0023061\n\n\nCaerphilly\n244\n278\n244\n15975\n34600\n50575\n73.20084\n0.0010057\n0.0019126\n\n\nBlaenau Gwent\n122\n185\n122\n5439\n11664\n17103\n18.05921\n0.0002741\n0.0008538\n\n\nTorfaen\n149\n222\n149\n13902\n15181\n29083\n27.77521\n0.0005208\n0.0016802\n\n\nMonmouthshire\n199\n262\n199\n12988\n17540\n30528\n50.15730\n0.0012077\n0.0015550\n\n\nNewport\n251\n264\n251\n30393\n21238\n51631\n68.26980\n0.0012649\n0.0030589\n\n\nPowys\n225\n274\n225\n8116\n11453\n19569\n63.48931\n0.0009664\n0.0011444\n\n\nMerthyr Tydfil\n93\n179\n93\n8549\n8716\n17265\n14.11701\n0.0003200\n0.0010095\n\n\n\n\n\n\n\n\n\n\nQuestion: Can you try to interpret these different centrality measures in the context of our data?\n\n\n\nThis is helpful, but we might also be interested in discussing the rankings: Which one is the most central local authority in the commuting network? Instead of reading from the table, we can just calculate the ranks.\nTo begin with, let’s do a test.\n\ntest &lt;- centralities %&gt;%\n  mutate(rank.test = dense_rank(desc(in.degree))) %&gt;% # We are interested in dense ranking:\n                                                      # i.e. two lines with the same value will\n                                                      # have the same ranking.\n                                                      # desc stands for descending order.\n  arrange(rank.test) %&gt;%                              # Arranges the data frame based on rank.test.\n  glimpse()\n\nRows: 346\nColumns: 11\n$ names        &lt;chr&gt; \"Wiltshire\", \"Manchester\", \"Birmingham\", \"Camden\", \"Hilli…\n$ in.degree    &lt;dbl&gt; 345, 345, 345, 345, 345, 345, 344, 343, 343, 343, 342, 34…\n$ out.degree   &lt;dbl&gt; 331, 333, 343, 282, 303, 289, 307, 288, 312, 297, 315, 29…\n$ degree       &lt;dbl&gt; 345, 345, 345, 345, 345, 345, 344, 343, 343, 343, 342, 34…\n$ w.in.degree  &lt;dbl&gt; 39717, 179517, 166056, 227171, 96119, 866007, 44450, 4127…\n$ w.out.degree &lt;dbl&gt; 55625, 72365, 100223, 62784, 61002, 42018, 27780, 27862, …\n$ w.degree     &lt;dbl&gt; 95342, 251882, 266279, 289955, 157121, 908025, 72230, 691…\n$ btwnss       &lt;dbl&gt; 160.51941, 161.42941, 174.73617, 116.18251, 123.20678, 10…\n$ eigen        &lt;dbl&gt; 0.015047862, 0.008172246, 0.014464632, 0.471519182, 0.144…\n$ prank        &lt;dbl&gt; 0.004065817, 0.013433702, 0.012733372, 0.027707044, 0.008…\n$ rank.test    &lt;int&gt; 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 6, 6, …\n\n\n\nranks &lt;- centralities %&gt;%\n  mutate_at(vars(in.degree:prank), \n            funs(dense_rank(desc(.)))) # . for all the selected variables\n\nWarning: `funs()` was deprecated in dplyr 0.8.0.\nℹ Please use a list of either functions or lambdas:\n\n# Simple named list: list(mean = mean, median = median)\n\n# Auto named with `tibble::lst()`: tibble::lst(mean, median)\n\n# Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))\n\n# Adds a prefix r_ before each column name to indicate the ranks\ncolnames(ranks) &lt;- paste(\"r\", colnames(ranks), sep = \"_\")\n\n\n\n\nQuestion: Can you quickly compare the ranks with the cetrnalities object based on the rankings?\n\n\n\n\nhead(centralities)\n\n# A tibble: 6 × 10\n  names     in.degree out.degree degree w.in.degree w.out.degree w.degree btwnss\n  &lt;chr&gt;         &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n1 Hartlepo…       111        231    111        8360        11261    19621   21.4\n2 Middlesb…       214        250    214       30038        20664    50702   53.1\n3 Redcar a…       118        242    118       12786        21904    34690   23.5\n4 Stockton…       216        292    216       29986        29329    59315   65.9\n5 Darlingt…       237        258    237       18445        15036    33481   63.6\n6 Halton          275        274    275       23080        22981    46061   82.8\n# ℹ 2 more variables: eigen &lt;dbl&gt;, prank &lt;dbl&gt;\n\nhead(ranks)\n\n# A tibble: 6 × 10\n  r_names         r_in.degree r_out.degree r_degree r_w.in.degree r_w.out.degree\n  &lt;chr&gt;                 &lt;int&gt;        &lt;int&gt;    &lt;int&gt;         &lt;int&gt;          &lt;int&gt;\n1 Hartlepool              160          101      160           308            315\n2 Middlesbrough           113           82      113           101            215\n3 Redcar and Cle…         158           90      158           263            199\n4 Stockton-on-Te…         112           40      112           102            132\n5 Darlington               95           74       95           200            282\n6 Halton                   64           58       64           154            186\n# ℹ 4 more variables: r_w.degree &lt;int&gt;, r_btwnss &lt;int&gt;, r_eigen &lt;int&gt;,\n#   r_prank &lt;int&gt;\n\n# So, because both dataframes have the same structure and order we can just use\n# cbind().\n\ncentralities &lt;- cbind(centralities, ranks) %&gt;% \n  arrange(w.in.degree) %&gt;% \n  select(-r_names) %&gt;% \n  glimpse()\n\nRows: 346\nColumns: 19\n$ names          &lt;chr&gt; \"Isle of Wight\", \"West Somerset\", \"Isle of Anglesey\", \"…\n$ in.degree      &lt;dbl&gt; 219, 165, 156, 206, 116, 242, 119, 125, 184, 144, 122, …\n$ out.degree     &lt;dbl&gt; 244, 153, 203, 209, 196, 245, 211, 208, 244, 173, 185, …\n$ degree         &lt;dbl&gt; 219, 165, 156, 206, 116, 242, 119, 125, 184, 144, 122, …\n$ w.in.degree    &lt;dbl&gt; 2083, 2780, 3104, 3447, 3575, 4107, 4114, 4593, 5058, 5…\n$ w.out.degree   &lt;dbl&gt; 4544, 3167, 8796, 11981, 8288, 4992, 4008, 8149, 6783, …\n$ w.degree       &lt;dbl&gt; 6627, 5947, 11900, 15428, 11863, 9099, 8122, 12742, 118…\n$ btwnss         &lt;dbl&gt; 44.65755, 18.02491, 31.56061, 35.60819, 14.07664, 63.15…\n$ eigen          &lt;dbl&gt; 0.0019493428, 0.0004052957, 0.0002620964, 0.0005797550,…\n$ prank          &lt;dbl&gt; 0.0006276137, 0.0007693002, 0.0008720594, 0.0008753942,…\n$ r_in.degree    &lt;int&gt; 109, 142, 148, 119, 159, 91, 157, 155, 132, 153, 156, 1…\n$ r_out.degree   &lt;int&gt; 88, 131, 119, 116, 121, 87, 114, 117, 88, 130, 128, 108…\n$ r_degree       &lt;int&gt; 109, 142, 148, 119, 159, 91, 157, 155, 132, 153, 156, 1…\n$ r_w.in.degree  &lt;int&gt; 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, …\n$ r_w.out.degree &lt;int&gt; 343, 345, 325, 302, 329, 339, 344, 330, 334, 340, 308, …\n$ r_w.degree     &lt;int&gt; 345, 346, 338, 330, 339, 343, 344, 336, 340, 342, 325, …\n$ r_btwnss       &lt;int&gt; 285, 344, 321, 308, 346, 218, 337, 336, 281, 339, 343, …\n$ r_eigen        &lt;int&gt; 207, 333, 342, 316, 337, 317, 339, 324, 325, 345, 341, …\n$ r_prank        &lt;int&gt; 346, 343, 337, 336, 328, 335, 332, 330, 334, 272, 339, …\n\n# It combines the centralities (centralities) and ranks (ranks) objects by columns.\n# You can imagine it as stacking the columns of ranks after the columns of centralities.\n# Since both objects refer to the same observations (i.e. the same rows), we can\n# just combine them.\n\n\n# And this is a nicer table of centralities:\ncentralities %&gt;% kable(caption = \"Centralities\") %&gt;% \n  scroll_box(width = \"100%\", height = \"300px\")       #Again the `kableExtra` function\n\n\n\nCentralities\n\n\nnames\nin.degree\nout.degree\ndegree\nw.in.degree\nw.out.degree\nw.degree\nbtwnss\neigen\nprank\nr_in.degree\nr_out.degree\nr_degree\nr_w.in.degree\nr_w.out.degree\nr_w.degree\nr_btwnss\nr_eigen\nr_prank\n\n\n\n\nIsle of Wight\n219\n244\n219\n2083\n4544\n6627\n44.65755\n0.0019493\n0.0006276\n109\n88\n109\n346\n343\n345\n285\n207\n346\n\n\nWest Somerset\n165\n153\n165\n2780\n3167\n5947\n18.02491\n0.0004053\n0.0007693\n142\n131\n142\n345\n345\n346\n344\n333\n343\n\n\nIsle of Anglesey\n156\n203\n156\n3104\n8796\n11900\n31.56061\n0.0002621\n0.0008721\n148\n119\n148\n344\n325\n338\n321\n342\n337\n\n\nWeymouth and Portland\n206\n209\n206\n3447\n11981\n15428\n35.60819\n0.0005798\n0.0008754\n119\n116\n119\n343\n302\n330\n308\n316\n336\n\n\nTorridge\n116\n196\n116\n3575\n8288\n11863\n14.07664\n0.0003644\n0.0009993\n159\n121\n159\n342\n329\n339\n346\n337\n328\n\n\nPembrokeshire\n242\n245\n242\n4107\n4992\n9099\n63.15133\n0.0005744\n0.0008883\n91\n87\n91\n341\n339\n343\n218\n317\n335\n\n\nCeredigion\n119\n211\n119\n4114\n4008\n8122\n21.56446\n0.0003086\n0.0009089\n157\n114\n157\n340\n344\n344\n337\n339\n332\n\n\nWest Devon\n125\n208\n125\n4593\n8149\n12742\n22.82693\n0.0005090\n0.0009780\n155\n117\n155\n339\n330\n336\n336\n324\n330\n\n\nScarborough\n184\n244\n184\n5058\n6783\n11841\n46.02664\n0.0005090\n0.0008944\n132\n88\n132\n338\n334\n340\n281\n325\n334\n\n\nBarrow-in-Furness\n144\n173\n144\n5100\n4715\n9815\n20.75604\n0.0002271\n0.0014106\n153\n130\n153\n337\n340\n342\n339\n345\n272\n\n\nBlaenau Gwent\n122\n185\n122\n5439\n11664\n17103\n18.05921\n0.0002741\n0.0008538\n156\n128\n156\n336\n308\n325\n343\n341\n339\n\n\nMid Devon\n163\n220\n163\n5569\n13667\n19236\n31.82063\n0.0007052\n0.0015827\n144\n108\n144\n335\n291\n316\n320\n306\n246\n\n\nThanet\n188\n242\n188\n5846\n13348\n19194\n36.05674\n0.0056380\n0.0007948\n130\n90\n130\n334\n294\n317\n307\n134\n342\n\n\nForest of Dean\n206\n248\n206\n6007\n14512\n20519\n48.05798\n0.0008705\n0.0010042\n119\n84\n119\n333\n287\n306\n271\n287\n324\n\n\nMelton\n175\n223\n175\n6142\n10160\n16302\n26.91873\n0.0009008\n0.0009814\n138\n106\n138\n332\n319\n328\n331\n285\n329\n\n\nEden\n225\n187\n225\n6209\n4666\n10875\n41.29631\n0.0002394\n0.0016928\n105\n126\n105\n331\n341\n341\n295\n344\n225\n\n\nAllerdale\n188\n203\n188\n6436\n11733\n18169\n33.91827\n0.0002556\n0.0019898\n130\n119\n130\n330\n305\n320\n313\n343\n182\n\n\nMaldon\n210\n210\n210\n6513\n13689\n20202\n33.49157\n0.0119064\n0.0007505\n117\n115\n117\n329\n290\n309\n316\n104\n344\n\n\nTendring\n229\n257\n229\n6763\n17203\n23966\n51.10530\n0.0091833\n0.0008516\n102\n75\n102\n328\n260\n299\n261\n109\n340\n\n\nRutland\n223\n225\n223\n6776\n6446\n13222\n40.36699\n0.0012338\n0.0010011\n107\n104\n107\n327\n335\n335\n298\n257\n326\n\n\nNorth Dorset\n254\n216\n254\n6962\n9997\n16959\n47.73131\n0.0018001\n0.0011060\n80\n111\n80\n326\n320\n326\n274\n221\n311\n\n\nRyedale\n168\n188\n168\n7047\n6445\n13492\n28.82552\n0.0004876\n0.0011190\n141\n125\n141\n325\n336\n334\n326\n326\n310\n\n\nRichmondshire\n324\n234\n324\n7255\n7057\n14312\n93.34512\n0.0007768\n0.0011037\n21\n98\n21\n324\n333\n332\n105\n296\n312\n\n\nGosport\n272\n237\n272\n7327\n20473\n27800\n58.39117\n0.0018505\n0.0010068\n67\n95\n67\n323\n216\n280\n236\n218\n323\n\n\nConwy\n144\n244\n144\n7404\n12011\n19415\n30.74925\n0.0005230\n0.0012531\n153\n88\n153\n322\n301\n315\n322\n320\n295\n\n\nCastle Point\n154\n236\n154\n7467\n23473\n30940\n28.09746\n0.0251378\n0.0007424\n149\n96\n149\n321\n179\n262\n328\n77\n345\n\n\nBoston\n144\n211\n144\n7495\n7088\n14583\n23.15199\n0.0004174\n0.0010821\n153\n114\n153\n320\n332\n331\n335\n332\n314\n\n\nRossendale\n152\n218\n152\n7571\n16019\n23590\n28.52086\n0.0004274\n0.0010012\n150\n109\n150\n319\n274\n300\n327\n331\n325\n\n\nPurbeck\n226\n186\n226\n7634\n8732\n16366\n33.64330\n0.0010481\n0.0011865\n104\n127\n104\n318\n327\n327\n314\n272\n306\n\n\nHigh Peak\n188\n255\n188\n7663\n17319\n24982\n45.93415\n0.0008832\n0.0009999\n130\n77\n130\n317\n259\n295\n282\n286\n327\n\n\nNorth Devon\n261\n233\n261\n7735\n4645\n12380\n56.35792\n0.0007480\n0.0012730\n75\n99\n75\n316\n342\n337\n246\n301\n292\n\n\nCopeland\n162\n185\n162\n7919\n5986\n13905\n26.13944\n0.0001593\n0.0017038\n145\n128\n145\n315\n337\n333\n332\n346\n222\n\n\nHastings\n164\n236\n164\n8006\n11732\n19738\n29.94627\n0.0049038\n0.0009044\n143\n96\n143\n314\n306\n311\n324\n142\n333\n\n\nLancaster\n209\n274\n209\n8091\n11592\n19683\n59.97534\n0.0006400\n0.0015040\n118\n58\n118\n313\n309\n312\n226\n312\n259\n\n\nPowys\n225\n274\n225\n8116\n11453\n19569\n63.48931\n0.0009664\n0.0011444\n105\n58\n105\n312\n312\n314\n216\n279\n309\n\n\nEast Cambridgeshire\n216\n247\n216\n8216\n20939\n29155\n41.75094\n0.0043745\n0.0012342\n112\n85\n112\n311\n210\n275\n294\n151\n296\n\n\nWaveney\n193\n239\n193\n8325\n11675\n20000\n39.78191\n0.0012538\n0.0012324\n127\n93\n127\n310\n307\n310\n299\n255\n298\n\n\nEast Lindsey\n272\n280\n272\n8351\n12695\n21046\n85.42615\n0.0007084\n0.0012323\n67\n52\n67\n309\n300\n304\n128\n305\n299\n\n\nHartlepool\n111\n231\n111\n8360\n11261\n19621\n21.38152\n0.0003901\n0.0010887\n160\n101\n160\n308\n315\n313\n338\n335\n313\n\n\nNorth Norfolk\n187\n238\n187\n8506\n11750\n20256\n34.85599\n0.0013520\n0.0011684\n131\n94\n131\n307\n304\n308\n311\n246\n307\n\n\nMerthyr Tydfil\n93\n179\n93\n8549\n8716\n17265\n14.11701\n0.0003200\n0.0010095\n161\n129\n161\n306\n328\n324\n345\n338\n322\n\n\nTorbay\n191\n252\n191\n8569\n12764\n21333\n46.76698\n0.0007531\n0.0015136\n129\n80\n129\n305\n299\n303\n276\n298\n257\n\n\nWyre Forest\n168\n266\n168\n8628\n17456\n26084\n40.84484\n0.0008476\n0.0010503\n141\n66\n141\n304\n255\n286\n297\n289\n317\n\n\nCraven\n163\n202\n163\n8901\n9015\n17916\n30.47052\n0.0005107\n0.0011944\n144\n120\n144\n303\n323\n322\n323\n323\n303\n\n\nSouth Holland\n212\n265\n212\n8955\n11472\n20427\n50.29864\n0.0015531\n0.0013288\n115\n67\n115\n302\n311\n307\n264\n233\n285\n\n\nArun\n221\n276\n221\n8962\n27174\n36136\n58.30258\n0.0058173\n0.0010559\n108\n56\n108\n301\n146\n229\n237\n131\n316\n\n\nWest Lindsey\n180\n265\n180\n9169\n19863\n29032\n46.25926\n0.0006861\n0.0013060\n135\n67\n135\n300\n225\n277\n277\n308\n289\n\n\nCorby\n202\n239\n202\n9176\n8734\n17910\n38.33096\n0.0013677\n0.0012179\n121\n93\n121\n299\n326\n323\n302\n245\n301\n\n\nSedgemoor\n232\n259\n232\n9209\n16894\n26103\n60.36191\n0.0010367\n0.0015783\n100\n73\n100\n298\n264\n285\n224\n275\n248\n\n\nGreat Yarmouth\n198\n220\n198\n9250\n9511\n18761\n38.18528\n0.0007335\n0.0012681\n125\n108\n125\n297\n322\n318\n303\n303\n293\n\n\nAdur\n179\n194\n179\n9348\n16454\n25802\n20.54255\n0.0046602\n0.0009409\n136\n122\n136\n296\n270\n287\n341\n144\n331\n\n\nRother\n182\n215\n182\n9630\n15054\n24684\n27.26210\n0.0074697\n0.0010183\n133\n112\n133\n295\n281\n296\n330\n119\n321\n\n\nSouth Lakeland\n234\n235\n234\n9651\n8994\n18645\n56.17406\n0.0005490\n0.0020873\n98\n97\n98\n294\n324\n319\n247\n318\n163\n\n\nCarlisle\n306\n242\n306\n9904\n5953\n15857\n78.20939\n0.0005917\n0.0021074\n39\n90\n39\n293\n338\n329\n165\n314\n162\n\n\nDover\n234\n249\n234\n9959\n16669\n26628\n48.35895\n0.0045037\n0.0010274\n98\n83\n98\n292\n267\n283\n270\n147\n319\n\n\nFenland\n179\n265\n179\n10010\n16271\n26281\n41.16076\n0.0024054\n0.0013423\n136\n67\n136\n291\n271\n284\n296\n191\n281\n\n\nEast Northamptonshire\n244\n274\n244\n10043\n22265\n32308\n68.11886\n0.0038892\n0.0013554\n89\n58\n89\n290\n197\n255\n203\n164\n279\n\n\nGravesham\n212\n258\n212\n10155\n25676\n35831\n42.33955\n0.0298471\n0.0008559\n115\n74\n115\n289\n161\n231\n292\n67\n338\n\n\nStaffordshire Moorlands\n200\n270\n200\n10201\n22847\n33048\n49.71024\n0.0007831\n0.0011897\n123\n62\n123\n288\n191\n250\n268\n294\n305\n\n\nRochford\n178\n239\n178\n10411\n24351\n34762\n35.41168\n0.0271557\n0.0008385\n137\n93\n137\n287\n175\n239\n309\n73\n341\n\n\nPendle\n178\n212\n178\n10432\n15013\n25445\n34.52029\n0.0003655\n0.0013588\n137\n113\n137\n286\n283\n291\n312\n336\n277\n\n\nChristchurch\n175\n192\n175\n10677\n10213\n20890\n24.36314\n0.0012017\n0.0012651\n138\n123\n138\n285\n318\n305\n333\n262\n294\n\n\nHerefordshire, County of\n306\n292\n306\n10786\n13434\n24220\n103.12522\n0.0019351\n0.0013338\n39\n40\n39\n284\n293\n298\n82\n209\n283\n\n\nWyre\n157\n226\n157\n10819\n21156\n31975\n33.40469\n0.0005131\n0.0018022\n147\n103\n147\n283\n206\n256\n317\n322\n210\n\n\nCarmarthenshire\n169\n269\n169\n10881\n17404\n28285\n44.90724\n0.0008303\n0.0017942\n140\n63\n140\n282\n257\n279\n283\n290\n211\n\n\nMalvern Hills\n199\n255\n199\n10947\n14054\n25001\n46.11698\n0.0010464\n0.0013943\n124\n77\n124\n281\n288\n293\n279\n273\n273\n\n\nShepway\n232\n250\n232\n10992\n14806\n25798\n48.02087\n0.0065689\n0.0010662\n100\n82\n100\n280\n285\n288\n272\n125\n315\n\n\nGwynedd\n198\n256\n198\n11022\n7125\n18147\n50.38462\n0.0004746\n0.0014136\n125\n76\n125\n279\n331\n321\n263\n327\n271\n\n\nKing's Lynn and West Norfolk\n299\n290\n299\n11047\n14664\n25711\n94.66804\n0.0025603\n0.0013157\n45\n42\n45\n278\n286\n289\n103\n185\n286\n\n\nCornwall,Isles of Scilly\n341\n330\n341\n11163\n18567\n29730\n155.46166\n0.0032429\n0.0016854\n5\n7\n5\n277\n238\n271\n6\n174\n228\n\n\nTamworth\n272\n268\n272\n11312\n19185\n30497\n75.84114\n0.0011977\n0.0014167\n67\n64\n67\n276\n232\n266\n177\n264\n270\n\n\nMendip\n250\n247\n250\n11450\n15842\n27292\n64.75602\n0.0021761\n0.0015764\n84\n85\n84\n275\n276\n281\n212\n199\n250\n\n\nNorth East Lincolnshire\n219\n286\n219\n11562\n10600\n22162\n65.06108\n0.0007256\n0.0013687\n109\n46\n109\n274\n317\n302\n210\n304\n276\n\n\nBabergh\n237\n243\n237\n11616\n18040\n29656\n49.49746\n0.0069612\n0.0013146\n95\n89\n95\n273\n246\n272\n269\n122\n287\n\n\nDenbighshire\n168\n231\n168\n11688\n11327\n23015\n36.51620\n0.0004665\n0.0014354\n141\n101\n141\n272\n314\n301\n305\n328\n267\n\n\nWest Oxfordshire\n333\n260\n333\n11768\n19990\n31758\n83.83685\n0.0051550\n0.0017197\n13\n72\n13\n271\n224\n258\n136\n140\n218\n\n\nOadby and Wigston\n162\n215\n162\n11870\n17102\n28972\n20.71941\n0.0010987\n0.0016922\n145\n112\n145\n270\n262\n278\n340\n270\n226\n\n\nTeignbridge\n232\n252\n232\n12250\n20987\n33237\n58.11052\n0.0010440\n0.0023279\n100\n80\n100\n269\n209\n248\n238\n274\n136\n\n\nEastbourne\n204\n227\n204\n12373\n12830\n25203\n36.12422\n0.0054015\n0.0010266\n120\n102\n120\n268\n298\n292\n306\n138\n320\n\n\nBreckland\n246\n281\n246\n12378\n23016\n35394\n65.43999\n0.0018253\n0.0015886\n88\n51\n88\n267\n185\n235\n209\n219\n244\n\n\nEast Devon\n315\n261\n315\n12430\n18130\n30560\n83.85873\n0.0015576\n0.0029037\n30\n71\n30\n266\n243\n263\n135\n231\n87\n\n\nSwale\n237\n274\n237\n12599\n22875\n35474\n59.86629\n0.0186895\n0.0010335\n95\n58\n95\n265\n190\n234\n227\n85\n318\n\n\nHyndburn\n130\n203\n130\n12702\n17380\n30082\n20.42098\n0.0002830\n0.0015889\n154\n119\n154\n264\n258\n269\n342\n340\n243\n\n\nRedcar and Cleveland\n118\n242\n118\n12786\n21904\n34690\n23.46728\n0.0004593\n0.0017847\n158\n90\n158\n263\n199\n240\n334\n329\n212\n\n\nMonmouthshire\n199\n262\n199\n12988\n17540\n30528\n50.15730\n0.0012077\n0.0015550\n124\n70\n124\n262\n253\n264\n265\n261\n254\n\n\nForest Heath\n224\n206\n224\n13035\n11543\n24578\n33.10973\n0.0015872\n0.0014177\n106\n118\n106\n261\n310\n297\n318\n228\n269\n\n\nDerbyshire Dales\n201\n251\n201\n13161\n11828\n24989\n42.88387\n0.0009256\n0.0013577\n122\n81\n122\n260\n303\n294\n290\n283\n278\n\n\nSelby\n213\n264\n213\n13235\n20848\n34083\n52.54992\n0.0010276\n0.0015011\n114\n68\n114\n259\n212\n244\n256\n276\n260\n\n\nStroud\n289\n267\n289\n13241\n20326\n33567\n83.56128\n0.0024767\n0.0018481\n53\n65\n53\n258\n221\n246\n138\n188\n202\n\n\nThe Vale of Glamorgan\n250\n276\n250\n13263\n26340\n39603\n77.19142\n0.0014653\n0.0018653\n84\n56\n84\n257\n155\n210\n170\n240\n197\n\n\nChiltern\n253\n234\n253\n13391\n22558\n35949\n44.70020\n0.0301093\n0.0015106\n81\n98\n81\n256\n194\n230\n284\n65\n258\n\n\nNorth East Derbyshire\n172\n274\n172\n13414\n28664\n42078\n42.70590\n0.0007958\n0.0014644\n139\n58\n139\n255\n133\n200\n291\n293\n265\n\n\nEast Dorset\n197\n234\n197\n13531\n19487\n33018\n37.02858\n0.0023127\n0.0016371\n126\n98\n126\n254\n231\n251\n304\n196\n236\n\n\nRedditch\n262\n259\n262\n13741\n17512\n31253\n61.69639\n0.0013303\n0.0016096\n74\n73\n74\n253\n254\n260\n222\n247\n241\n\n\nTorfaen\n149\n222\n149\n13902\n15181\n29083\n27.77521\n0.0005208\n0.0016802\n151\n107\n151\n252\n279\n276\n329\n321\n229\n\n\nMid Suffolk\n273\n247\n273\n13930\n20713\n34643\n63.35687\n0.0042169\n0.0016024\n66\n85\n66\n251\n214\n241\n217\n155\n242\n\n\nTandridge\n246\n240\n246\n13937\n22538\n36475\n59.01705\n0.0367740\n0.0011585\n88\n92\n88\n250\n195\n228\n232\n58\n308\n\n\nWrexham\n263\n264\n263\n13956\n16546\n30502\n73.76438\n0.0008075\n0.0014989\n73\n68\n73\n249\n268\n265\n184\n291\n261\n\n\nSouth Northamptonshire\n289\n293\n289\n13977\n25354\n39331\n92.12130\n0.0062021\n0.0017508\n53\n39\n53\n248\n166\n211\n108\n128\n214\n\n\nKettering\n268\n284\n268\n13980\n18491\n32471\n70.87864\n0.0030991\n0.0016957\n70\n48\n70\n247\n240\n254\n196\n176\n224\n\n\nRibble Valley\n187\n190\n187\n14075\n12870\n26945\n29.07366\n0.0004309\n0.0018088\n131\n124\n131\n246\n297\n282\n325\n330\n208\n\n\nSouth Kesteven\n275\n303\n275\n14185\n23275\n37460\n94.80642\n0.0039822\n0.0018098\n64\n30\n64\n245\n183\n226\n100\n158\n207\n\n\nSouth Derbyshire\n216\n276\n216\n14306\n28077\n42383\n53.41385\n0.0011521\n0.0016710\n112\n56\n112\n244\n138\n196\n252\n266\n230\n\n\nSouth Tyneside\n149\n271\n149\n14369\n27022\n41391\n39.24558\n0.0009407\n0.0014669\n151\n61\n151\n243\n150\n204\n301\n281\n264\n\n\nLewes\n202\n224\n202\n14403\n19800\n34203\n34.92845\n0.0104541\n0.0011926\n121\n105\n121\n242\n226\n243\n310\n108\n304\n\n\nBurnley\n159\n222\n159\n14595\n15150\n29745\n33.54753\n0.0003922\n0.0016247\n146\n107\n146\n241\n280\n270\n315\n334\n239\n\n\nNorth Lincolnshire\n249\n297\n249\n14755\n15493\n30248\n83.06742\n0.0007716\n0.0016239\n85\n35\n85\n240\n278\n268\n141\n297\n240\n\n\nCannock Chase\n239\n267\n239\n14864\n23408\n38272\n57.70909\n0.0009774\n0.0013914\n94\n65\n94\n239\n181\n218\n240\n278\n275\n\n\nWellingborough\n318\n262\n318\n14948\n16857\n31805\n80.21191\n0.0036900\n0.0016290\n27\n70\n27\n238\n266\n257\n156\n165\n238\n\n\nWealden\n258\n261\n258\n14989\n30274\n45263\n58.96939\n0.0186274\n0.0013393\n77\n71\n77\n237\n122\n180\n233\n86\n282\n\n\nChorley\n168\n261\n168\n14994\n26851\n41845\n43.70430\n0.0007779\n0.0016512\n141\n71\n141\n236\n151\n201\n287\n295\n232\n\n\nAshford\n255\n254\n255\n15035\n17786\n32821\n59.60893\n0.0139988\n0.0012927\n79\n78\n79\n235\n249\n252\n229\n100\n291\n\n\nNuneaton and Bedworth\n246\n269\n246\n15037\n29798\n44835\n52.50267\n0.0019273\n0.0018603\n88\n63\n88\n234\n127\n185\n257\n210\n198\n\n\nSuffolk Coastal\n285\n239\n285\n15143\n18880\n34023\n59.27719\n0.0052585\n0.0016880\n57\n93\n57\n233\n236\n245\n231\n139\n227\n\n\nSouth Somerset\n321\n277\n321\n15164\n15892\n31056\n101.23392\n0.0020952\n0.0022205\n24\n55\n24\n232\n275\n261\n89\n202\n152\n\n\nBraintree\n270\n277\n270\n15184\n31582\n46766\n74.27107\n0.0271398\n0.0013120\n68\n55\n68\n231\n114\n173\n181\n74\n288\n\n\nEpsom and Ewell\n254\n224\n254\n15227\n22939\n38166\n43.36186\n0.0395024\n0.0013033\n80\n105\n80\n230\n188\n219\n288\n48\n290\n\n\nBolsover\n242\n243\n242\n15315\n20347\n35662\n54.66120\n0.0006313\n0.0014976\n91\n89\n91\n229\n220\n232\n250\n313\n262\n\n\nGedling\n178\n275\n178\n15434\n34039\n49473\n46.03025\n0.0014039\n0.0018589\n137\n57\n137\n228\n97\n159\n280\n244\n199\n\n\nEast Hampshire\n328\n268\n328\n15462\n25476\n40938\n93.84842\n0.0120776\n0.0016435\n17\n64\n17\n227\n162\n206\n104\n103\n235\n\n\nHinckley and Bosworth\n256\n283\n256\n15677\n26835\n42512\n75.05241\n0.0014834\n0.0018541\n78\n49\n78\n226\n152\n195\n179\n239\n200\n\n\nCotswold\n293\n254\n293\n15685\n13651\n29336\n71.25964\n0.0041576\n0.0018831\n49\n78\n49\n225\n292\n274\n195\n156\n195\n\n\nNeath Port Talbot\n146\n248\n146\n15691\n22974\n38665\n32.14387\n0.0006626\n0.0020202\n152\n84\n152\n224\n187\n216\n319\n311\n171\n\n\nTaunton Deane\n277\n243\n277\n15713\n9820\n25533\n66.05293\n0.0012006\n0.0022342\n63\n89\n63\n223\n321\n290\n206\n263\n148\n\n\nMansfield\n200\n267\n200\n15911\n23109\n39020\n47.93428\n0.0008000\n0.0015661\n123\n65\n123\n222\n184\n213\n273\n292\n252\n\n\nCaerphilly\n244\n278\n244\n15975\n34600\n50575\n73.20084\n0.0010057\n0.0019126\n89\n54\n89\n221\n91\n155\n189\n277\n186\n\n\nHarlow\n294\n232\n294\n15994\n16492\n32486\n57.74732\n0.0195485\n0.0013293\n48\n100\n48\n220\n269\n253\n239\n84\n284\n\n\nBassetlaw\n251\n280\n251\n16161\n16975\n33136\n73.46786\n0.0009655\n0.0015236\n83\n52\n83\n219\n263\n249\n186\n280\n256\n\n\nNorth Kesteven\n308\n295\n308\n16326\n22631\n38957\n103.67317\n0.0014144\n0.0020627\n37\n37\n37\n218\n192\n215\n81\n243\n167\n\n\nErewash\n200\n275\n200\n16623\n28395\n45018\n50.97433\n0.0012799\n0.0017058\n123\n57\n123\n217\n135\n182\n262\n252\n221\n\n\nWorthing\n218\n236\n218\n16690\n17756\n34446\n42.16681\n0.0062165\n0.0012322\n110\n96\n110\n216\n252\n242\n293\n127\n300\n\n\nHorsham\n297\n265\n297\n16707\n26654\n43361\n75.17375\n0.0180015\n0.0015769\n46\n67\n46\n215\n153\n194\n178\n89\n249\n\n\nSouth Hams\n282\n235\n282\n16938\n13322\n30260\n65.87841\n0.0012274\n0.0025189\n60\n97\n60\n214\n295\n267\n208\n260\n116\n\n\nBridgend\n192\n261\n192\n17241\n17783\n35024\n49.79841\n0.0007512\n0.0018916\n128\n71\n128\n213\n250\n237\n267\n300\n192\n\n\nWirral\n241\n324\n241\n17244\n44072\n61316\n97.57457\n0.0024890\n0.0017127\n92\n10\n92\n212\n59\n107\n98\n187\n219\n\n\nDaventry\n269\n284\n269\n17275\n18078\n35353\n79.04507\n0.0033339\n0.0020310\n69\n48\n69\n211\n245\n236\n160\n171\n169\n\n\nBarnsley\n242\n302\n242\n17314\n37625\n54939\n78.98661\n0.0015289\n0.0016357\n91\n31\n91\n210\n74\n128\n161\n237\n237\n\n\nNewark and Sherwood\n226\n288\n226\n17327\n20763\n38090\n62.46194\n0.0015555\n0.0017440\n104\n44\n104\n209\n213\n220\n220\n232\n216\n\n\nRugby\n320\n280\n320\n17523\n20443\n37966\n101.36753\n0.0031786\n0.0020217\n25\n52\n25\n208\n218\n221\n87\n175\n170\n\n\nSouth Staffordshire\n240\n290\n240\n17575\n34347\n51922\n72.56398\n0.0015476\n0.0015857\n93\n42\n93\n207\n95\n142\n191\n234\n245\n\n\nUttlesford\n307\n240\n307\n17618\n17973\n35591\n63.70076\n0.0202609\n0.0014814\n38\n92\n38\n206\n247\n233\n214\n83\n263\n\n\nHambleton\n275\n248\n275\n17621\n13906\n31527\n74.05896\n0.0009081\n0.0022288\n64\n84\n64\n205\n289\n259\n183\n284\n151\n\n\nHavant\n211\n248\n211\n17666\n26401\n44067\n43.23830\n0.0039611\n0.0018958\n116\n84\n116\n204\n154\n188\n289\n161\n189\n\n\nBrentwood\n289\n223\n289\n17745\n19995\n37740\n52.37953\n0.0409946\n0.0012340\n53\n106\n53\n203\n223\n222\n258\n46\n297\n\n\nWest Dorset\n235\n238\n235\n18059\n11425\n29484\n49.90794\n0.0017699\n0.0020121\n97\n94\n97\n202\n313\n273\n266\n223\n173\n\n\nBroxbourne\n317\n249\n317\n18151\n25440\n43591\n73.49505\n0.0391390\n0.0015310\n28\n83\n28\n201\n164\n192\n185\n49\n255\n\n\nDarlington\n237\n258\n237\n18445\n15036\n33481\n63.64096\n0.0007033\n0.0018073\n95\n74\n95\n200\n282\n247\n215\n307\n209\n\n\nHart\n328\n253\n328\n18470\n26300\n44770\n78.77749\n0.0156487\n0.0018362\n17\n79\n17\n199\n156\n186\n162\n93\n203\n\n\nThree Rivers\n322\n253\n322\n18584\n27115\n45699\n76.96263\n0.0380419\n0.0018902\n23\n79\n23\n198\n149\n178\n173\n52\n193\n\n\nNorth Somerset\n288\n309\n288\n18813\n32553\n51366\n106.51079\n0.0033370\n0.0024983\n54\n24\n54\n197\n106\n147\n69\n170\n118\n\n\nBroadland\n181\n251\n181\n18858\n32823\n51681\n39.50570\n0.0019036\n0.0026217\n134\n81\n134\n196\n103\n145\n300\n212\n109\n\n\nBromsgrove\n252\n274\n252\n18870\n25995\n44865\n66.89830\n0.0023463\n0.0020102\n82\n58\n82\n195\n159\n184\n205\n193\n176\n\n\nBroxtowe\n251\n280\n251\n18998\n33183\n52181\n68.09294\n0.0015889\n0.0019933\n83\n52\n83\n194\n101\n139\n204\n227\n181\n\n\nRhondda Cynon Taf\n239\n289\n239\n19349\n36305\n55654\n72.07335\n0.0012933\n0.0023061\n94\n43\n94\n193\n78\n125\n193\n251\n138\n\n\nHarrogate\n325\n282\n325\n19366\n18342\n37708\n110.93138\n0.0023168\n0.0024481\n20\n50\n20\n192\n241\n223\n60\n195\n124\n\n\nCanterbury\n234\n274\n234\n19479\n18121\n37600\n61.96377\n0.0115107\n0.0014501\n98\n58\n98\n191\n244\n225\n221\n105\n266\n\n\nSt Edmundsbury\n313\n271\n313\n19511\n17447\n36958\n88.32277\n0.0039806\n0.0018960\n32\n61\n32\n190\n256\n227\n117\n159\n188\n\n\nHarborough\n273\n265\n273\n19547\n21344\n40891\n64.82323\n0.0026586\n0.0022494\n66\n67\n66\n189\n201\n207\n211\n182\n147\n\n\nWest Lancashire\n214\n266\n214\n19805\n21733\n41538\n56.65700\n0.0009294\n0.0015818\n113\n66\n113\n188\n200\n203\n245\n282\n247\n\n\nAylesbury Vale\n330\n303\n330\n19831\n34981\n54812\n113.28702\n0.0227757\n0.0020113\n16\n30\n16\n187\n86\n129\n50\n81\n174\n\n\nBlackpool\n178\n246\n178\n19835\n17775\n37610\n43.94347\n0.0005901\n0.0025846\n137\n86\n137\n186\n251\n224\n286\n315\n112\n\n\nTunbridge Wells\n227\n240\n227\n20116\n22147\n42263\n47.12165\n0.0336823\n0.0014347\n103\n92\n103\n185\n198\n197\n275\n61\n268\n\n\nHuntingdonshire\n310\n302\n310\n20270\n31621\n51891\n102.90672\n0.0132382\n0.0023001\n35\n31\n35\n184\n113\n143\n83\n102\n139\n\n\nWoking\n321\n232\n321\n20273\n27207\n47480\n59.27815\n0.0340234\n0.0020659\n24\n100\n24\n183\n145\n170\n230\n60\n165\n\n\nNorth Hertfordshire\n293\n273\n293\n20355\n32707\n53062\n77.54596\n0.0292122\n0.0018191\n49\n59\n49\n182\n105\n137\n169\n70\n204\n\n\nMid Sussex\n306\n263\n306\n20393\n31709\n52102\n80.30516\n0.0306906\n0.0017534\n39\n69\n39\n181\n112\n140\n155\n63\n213\n\n\nLichfield\n292\n277\n292\n20396\n24559\n44955\n84.24212\n0.0020662\n0.0019028\n50\n55\n50\n180\n172\n183\n133\n203\n187\n\n\nWychavon\n264\n290\n264\n20602\n24629\n45231\n83.46586\n0.0017334\n0.0021899\n72\n42\n72\n179\n170\n181\n139\n225\n157\n\n\nSouth Bucks\n310\n223\n310\n20603\n20381\n40984\n55.75605\n0.0262182\n0.0023714\n35\n106\n35\n178\n219\n205\n249\n75\n131\n\n\nSouthend-on-Sea\n247\n260\n247\n20661\n29749\n50410\n57.62656\n0.0460325\n0.0012049\n87\n72\n87\n177\n129\n156\n241\n44\n302\n\n\nStevenage\n314\n254\n314\n20748\n18525\n39273\n72.02250\n0.0171373\n0.0017124\n31\n78\n31\n176\n239\n212\n194\n91\n220\n\n\nWaverley\n283\n258\n283\n20886\n27655\n48541\n68.70357\n0.0272366\n0.0019656\n59\n74\n59\n175\n144\n163\n200\n72\n184\n\n\nRushcliffe\n256\n288\n256\n20897\n30122\n51019\n76.63440\n0.0020342\n0.0022778\n78\n44\n78\n174\n123\n151\n174\n204\n143\n\n\nSevenoaks\n274\n246\n274\n20929\n30420\n51349\n58.51716\n0.0566217\n0.0013925\n65\n86\n65\n173\n121\n148\n235\n38\n274\n\n\nSpelthorne\n309\n235\n309\n21043\n30107\n51150\n57.35777\n0.0369474\n0.0021774\n36\n97\n36\n172\n124\n149\n243\n57\n159\n\n\nWorcester\n277\n269\n277\n21134\n17845\n38979\n75.86830\n0.0012321\n0.0020818\n63\n63\n63\n171\n248\n214\n176\n258\n164\n\n\nChesterfield\n242\n256\n242\n21349\n17107\n38456\n56.87320\n0.0007520\n0.0017426\n91\n76\n91\n170\n261\n217\n244\n299\n217\n\n\nBedford\n314\n297\n314\n21392\n22483\n43875\n100.59431\n0.0154519\n0.0018139\n31\n35\n31\n169\n196\n189\n90\n94\n206\n\n\nNewcastle-under-Lyme\n261\n285\n261\n21455\n29382\n50837\n79.24630\n0.0011395\n0.0019857\n75\n47\n75\n168\n131\n153\n158\n268\n183\n\n\nEpping Forest\n290\n251\n290\n21509\n35475\n56984\n68.68786\n0.0711352\n0.0015571\n52\n81\n52\n167\n84\n121\n201\n33\n253\n\n\nFylde\n230\n223\n230\n21711\n13080\n34791\n52.67556\n0.0005238\n0.0027609\n101\n106\n101\n166\n296\n238\n255\n319\n96\n\n\nAmber Valley\n281\n271\n281\n21778\n25962\n47740\n77.94638\n0.0014457\n0.0019987\n61\n61\n61\n165\n160\n168\n167\n242\n180\n\n\nThurrock\n281\n268\n281\n21804\n34873\n56677\n75.03469\n0.0589668\n0.0013440\n61\n64\n61\n164\n87\n122\n180\n37\n280\n\n\nSt. Helens\n259\n283\n259\n22077\n35479\n57556\n81.68252\n0.0013260\n0.0018928\n76\n49\n76\n163\n83\n120\n151\n248\n190\n\n\nEast Hertfordshire\n297\n274\n297\n22122\n35988\n58110\n79.93959\n0.0446914\n0.0018916\n46\n58\n46\n162\n81\n118\n157\n45\n191\n\n\nNorthumberland\n287\n310\n287\n22254\n43011\n65265\n105.96942\n0.0024251\n0.0023084\n55\n23\n55\n161\n62\n95\n72\n189\n137\n\n\nSouth Norfolk\n263\n258\n263\n22671\n28315\n50986\n60.76567\n0.0026761\n0.0027300\n73\n74\n73\n160\n136\n152\n223\n181\n100\n\n\nMedway\n308\n312\n308\n22710\n50453\n73163\n109.01019\n0.0533814\n0.0015706\n37\n21\n37\n159\n50\n75\n64\n42\n251\n\n\nNew Forest\n302\n279\n302\n22744\n29791\n52535\n86.90241\n0.0054670\n0.0022859\n42\n53\n42\n158\n128\n138\n126\n137\n140\n\n\nTest Valley\n318\n256\n318\n22956\n24789\n47745\n79.16895\n0.0075231\n0.0021833\n27\n76\n27\n157\n168\n167\n159\n118\n158\n\n\nColchester\n327\n270\n327\n22968\n24545\n47513\n94.70758\n0.0235711\n0.0016488\n18\n62\n18\n156\n173\n169\n102\n80\n233\n\n\nCharnwood\n292\n317\n292\n23040\n34580\n57620\n107.91161\n0.0024076\n0.0026228\n50\n16\n50\n155\n92\n119\n65\n190\n108\n\n\nHalton\n275\n274\n275\n23080\n22981\n46061\n82.81950\n0.0012432\n0.0021577\n64\n58\n64\n154\n186\n175\n142\n256\n161\n\n\nCherwell\n332\n298\n332\n23167\n26000\n49167\n111.31845\n0.0082417\n0.0026410\n14\n34\n14\n153\n158\n161\n59\n114\n107\n\n\nSurrey Heath\n328\n243\n328\n23260\n24154\n47414\n70.25703\n0.0172171\n0.0021745\n17\n89\n17\n152\n177\n171\n197\n90\n160\n\n\nEast Staffordshire\n294\n291\n294\n23275\n18822\n42097\n101.32347\n0.0012667\n0.0020181\n48\n41\n48\n151\n237\n199\n88\n253\n172\n\n\nTelford and Wrekin\n324\n296\n324\n23376\n18322\n41698\n109.90081\n0.0018745\n0.0020630\n21\n36\n21\n150\n242\n202\n62\n216\n166\n\n\nSouth Ribble\n233\n256\n233\n23544\n30099\n53643\n59.66094\n0.0007475\n0.0026508\n99\n76\n99\n149\n125\n132\n228\n302\n105\n\n\nTameside\n243\n299\n243\n23571\n45702\n69273\n84.14139\n0.0023514\n0.0023393\n90\n33\n90\n148\n54\n82\n134\n192\n135\n\n\nSouth Oxfordshire\n337\n268\n337\n23589\n31775\n55364\n88.07716\n0.0151645\n0.0028817\n9\n64\n9\n147\n110\n127\n118\n95\n89\n\n\nMole Valley\n315\n217\n315\n23768\n19616\n43384\n53.14222\n0.0298856\n0.0020016\n30\n110\n30\n146\n228\n193\n253\n66\n177\n\n\nFlintshire\n284\n278\n284\n23770\n25459\n49229\n87.62641\n0.0012318\n0.0021949\n58\n54\n58\n145\n163\n160\n122\n259\n156\n\n\nDacorum\n338\n286\n338\n23817\n30858\n54675\n104.58269\n0.0370314\n0.0020320\n8\n46\n8\n144\n117\n130\n75\n56\n168\n\n\nStafford\n314\n294\n314\n23835\n20934\n44769\n105.13228\n0.0018028\n0.0020109\n31\n38\n31\n143\n211\n187\n74\n220\n175\n\n\nSwindon\n334\n293\n334\n23868\n24439\n48307\n112.57493\n0.0066072\n0.0024599\n12\n39\n12\n142\n174\n164\n55\n124\n122\n\n\nBlackburn with Darwen\n204\n245\n204\n23988\n19666\n43654\n46.17387\n0.0006750\n0.0024693\n120\n87\n120\n141\n227\n191\n278\n310\n120\n\n\nCheltenham\n293\n272\n293\n24125\n19592\n43717\n85.00521\n0.0025958\n0.0030665\n49\n60\n49\n140\n229\n190\n130\n184\n75\n\n\nChichester\n300\n253\n300\n24254\n16115\n40369\n73.41119\n0.0088457\n0.0017499\n44\n79\n44\n139\n272\n209\n187\n111\n215\n\n\nFareham\n310\n264\n310\n24609\n29734\n54343\n76.99256\n0.0039958\n0.0022174\n35\n68\n35\n138\n130\n131\n172\n157\n153\n\n\nVale of White Horse\n336\n272\n336\n24697\n25427\n50124\n98.46835\n0.0082747\n0.0030820\n10\n60\n10\n137\n165\n157\n96\n113\n74\n\n\nRushmoor\n334\n258\n334\n25017\n26056\n51073\n89.27181\n0.0143124\n0.0022710\n12\n74\n12\n136\n157\n150\n114\n99\n144\n\n\nRochdale\n258\n286\n258\n25139\n36507\n61646\n81.99142\n0.0017133\n0.0022337\n77\n46\n77\n135\n76\n103\n145\n226\n149\n\n\nTewkesbury\n322\n249\n322\n25184\n20469\n45653\n87.05614\n0.0015420\n0.0030289\n23\n83\n23\n134\n217\n179\n125\n236\n77\n\n\nBournemouth\n248\n283\n248\n25210\n32998\n58208\n72.37210\n0.0044016\n0.0028426\n86\n49\n86\n133\n102\n117\n192\n149\n92\n\n\nHertsmere\n316\n242\n316\n25251\n28231\n53482\n69.43996\n0.0558631\n0.0022121\n29\n90\n29\n132\n137\n135\n198\n39\n154\n\n\nNorth Warwickshire\n277\n248\n277\n25282\n16883\n42165\n58.55078\n0.0017477\n0.0024229\n63\n84\n63\n131\n265\n198\n234\n224\n127\n\n\nBasingstoke and Deane\n338\n280\n338\n25401\n30492\n55893\n101.39306\n0.0181075\n0.0025112\n8\n52\n8\n130\n118\n124\n86\n88\n117\n\n\nStratford-on-Avon\n323\n296\n323\n25409\n22594\n48003\n113.24263\n0.0043159\n0.0028345\n22\n36\n22\n129\n193\n165\n51\n152\n93\n\n\nLincoln\n229\n261\n229\n25583\n14947\n40530\n51.75565\n0.0008666\n0.0022827\n102\n71\n102\n128\n284\n208\n259\n288\n142\n\n\nYork\n304\n310\n304\n25651\n21058\n46709\n117.86975\n0.0023097\n0.0026595\n41\n23\n41\n127\n208\n174\n42\n197\n104\n\n\nAshfield\n273\n272\n273\n25763\n27847\n53610\n76.99274\n0.0010518\n0.0022554\n66\n60\n66\n126\n142\n133\n171\n271\n145\n\n\nPlymouth\n332\n300\n332\n25793\n20138\n45931\n124.45365\n0.0015797\n0.0032944\n14\n32\n14\n125\n222\n176\n26\n229\n60\n\n\nGloucester\n290\n276\n290\n26099\n23463\n49562\n85.55168\n0.0014927\n0.0030158\n52\n56\n52\n124\n180\n158\n127\n238\n79\n\n\nDoncaster\n291\n314\n291\n26494\n32298\n58792\n105.97681\n0.0019361\n0.0022314\n51\n19\n51\n123\n108\n116\n71\n208\n150\n\n\nNorth West Leicestershire\n331\n267\n331\n26666\n19081\n45747\n95.63833\n0.0013247\n0.0024521\n15\n65\n15\n122\n234\n177\n99\n249\n123\n\n\nSt Albans\n318\n271\n318\n26809\n36418\n63227\n81.85818\n0.0619411\n0.0023555\n27\n61\n27\n121\n77\n99\n148\n35\n132\n\n\nBury\n261\n290\n261\n26895\n41317\n68212\n83.76982\n0.0021060\n0.0024213\n75\n42\n75\n120\n66\n86\n137\n201\n128\n\n\nCalderdale\n319\n293\n319\n26978\n28593\n55571\n123.10999\n0.0019020\n0.0022845\n26\n39\n26\n119\n134\n126\n29\n213\n141\n\n\nElmbridge\n305\n245\n305\n27029\n35122\n62151\n62.72055\n0.0685952\n0.0024269\n40\n87\n40\n118\n85\n101\n219\n34\n126\n\n\nWycombe\n339\n283\n339\n27246\n32323\n59569\n100.06675\n0.0304376\n0.0027075\n7\n49\n7\n117\n107\n111\n92\n64\n102\n\n\nIpswich\n236\n255\n236\n27497\n21192\n48689\n53.76366\n0.0057598\n0.0023529\n96\n77\n96\n116\n205\n162\n251\n133\n134\n\n\nWigan\n311\n316\n311\n27578\n59356\n86934\n126.87502\n0.0023235\n0.0024079\n34\n17\n34\n115\n34\n57\n23\n194\n129\n\n\nSwansea\n279\n300\n279\n27777\n19589\n47366\n98.91703\n0.0014553\n0.0027418\n62\n32\n62\n114\n230\n172\n94\n241\n98\n\n\nSefton\n217\n316\n217\n28443\n46950\n75393\n77.79284\n0.0022610\n0.0025645\n111\n17\n111\n113\n53\n69\n168\n198\n114\n\n\nBracknell Forest\n336\n263\n336\n28503\n31002\n59505\n84.64837\n0.0181350\n0.0026867\n10\n69\n10\n112\n116\n112\n131\n87\n103\n\n\nHarrow\n311\n287\n311\n28680\n68538\n97218\n92.42766\n0.1476876\n0.0030209\n34\n45\n34\n111\n22\n48\n107\n26\n78\n\n\nBexley\n297\n282\n297\n28684\n63899\n92583\n81.72835\n0.1419983\n0.0016966\n46\n50\n46\n110\n28\n52\n150\n28\n223\n\n\nWatford\n332\n248\n332\n28799\n24774\n53573\n78.54169\n0.0405963\n0.0024651\n14\n84\n14\n109\n169\n134\n163\n47\n121\n\n\nBarking and Dagenham\n259\n278\n259\n28989\n45584\n74573\n74.07906\n0.0947743\n0.0016538\n76\n54\n76\n108\n55\n71\n182\n32\n231\n\n\nShropshire\n336\n330\n336\n29111\n34424\n63535\n148.35300\n0.0036140\n0.0027990\n10\n7\n10\n107\n94\n98\n8\n166\n94\n\n\nOldham\n241\n296\n241\n29113\n36102\n65215\n80.47174\n0.0019906\n0.0025758\n92\n36\n92\n106\n79\n96\n154\n206\n113\n\n\nBath and North East Somerset\n318\n289\n318\n29241\n23945\n53186\n106.11349\n0.0063148\n0.0031748\n27\n43\n27\n105\n178\n136\n70\n126\n67\n\n\nSutton\n323\n268\n323\n29841\n55030\n84871\n82.50370\n0.1105433\n0.0019988\n22\n64\n22\n104\n40\n59\n144\n30\n179\n\n\nMaidstone\n296\n278\n296\n29979\n31058\n61037\n76.04405\n0.0296875\n0.0018485\n47\n54\n47\n103\n115\n109\n175\n68\n201\n\n\nStockton-on-Tees\n216\n292\n216\n29986\n29329\n59315\n65.89576\n0.0010995\n0.0031831\n112\n40\n112\n102\n132\n114\n207\n269\n66\n\n\nMiddlesbrough\n214\n250\n214\n30038\n20664\n50702\n53.13953\n0.0006790\n0.0029637\n113\n82\n113\n101\n215\n154\n254\n309\n82\n\n\nEast Riding of Yorkshire\n292\n326\n292\n30194\n54386\n84580\n120.56251\n0.0020021\n0.0031038\n50\n9\n50\n100\n41\n60\n35\n205\n70\n\n\nWaltham Forest\n300\n284\n300\n30367\n71912\n102279\n87.15664\n0.1866278\n0.0023823\n44\n48\n44\n99\n17\n43\n124\n21\n130\n\n\nNewport\n251\n264\n251\n30393\n21238\n51631\n68.26980\n0.0012649\n0.0030589\n83\n68\n83\n98\n204\n146\n202\n254\n76\n\n\nChelmsford\n293\n275\n293\n30575\n34222\n64797\n83.33582\n0.0512377\n0.0018830\n49\n57\n49\n97\n96\n97\n140\n43\n196\n\n\nRunnymede\n335\n250\n335\n30604\n21324\n51928\n82.53407\n0.0279868\n0.0027531\n11\n82\n11\n96\n202\n141\n143\n71\n97\n\n\nKnowsley\n221\n273\n221\n30613\n34820\n65433\n60.35691\n0.0015454\n0.0025930\n108\n59\n108\n95\n89\n93\n225\n235\n111\n\n\nWokingham\n340\n269\n340\n30764\n42810\n73574\n90.37405\n0.0237476\n0.0032668\n6\n63\n6\n94\n63\n74\n111\n79\n62\n\n\nTonbridge and Malling\n270\n254\n270\n30765\n30473\n61238\n56.01878\n0.0379614\n0.0018185\n68\n78\n68\n93\n119\n108\n248\n54\n205\n\n\nBlaby\n304\n264\n304\n31649\n27848\n59497\n78.31709\n0.0018932\n0.0034461\n41\n68\n41\n92\n141\n113\n164\n214\n56\n\n\nHavering\n286\n283\n286\n31769\n59870\n91639\n80.88612\n0.1240316\n0.0018851\n56\n49\n56\n91\n32\n53\n152\n29\n194\n\n\nBrighton and Hove\n297\n287\n297\n31879\n36938\n68817\n88.44945\n0.0325543\n0.0022023\n46\n45\n46\n90\n75\n84\n116\n62\n155\n\n\nPoole\n314\n276\n314\n32048\n24563\n56611\n87.92048\n0.0045316\n0.0030996\n31\n56\n31\n89\n171\n123\n120\n146\n71\n\n\nRedbridge\n266\n289\n266\n32064\n77588\n109652\n80.78754\n0.1798939\n0.0020014\n71\n43\n71\n88\n12\n34\n153\n22\n178\n\n\nNorth Tyneside\n256\n283\n256\n32439\n43079\n75518\n78.16212\n0.0019184\n0.0030158\n78\n49\n78\n87\n61\n68\n166\n211\n80\n\n\nEastleigh\n309\n260\n309\n32465\n33798\n66263\n81.90592\n0.0056096\n0.0029667\n36\n72\n36\n86\n98\n91\n146\n136\n81\n\n\nCentral Bedfordshire\n343\n312\n343\n32469\n66131\n98600\n129.24999\n0.0390917\n0.0028629\n3\n21\n3\n85\n24\n46\n21\n50\n91\n\n\nReigate and Banstead\n333\n262\n333\n32483\n35696\n68179\n89.77510\n0.0537983\n0.0024743\n13\n70\n13\n84\n82\n87\n112\n41\n119\n\n\nPeterborough\n337\n294\n337\n32552\n19136\n51688\n111.41706\n0.0080528\n0.0029620\n9\n38\n9\n83\n233\n144\n58\n116\n83\n\n\nDartford\n306\n248\n306\n32588\n27117\n59705\n69.01172\n0.0545483\n0.0016458\n39\n84\n39\n82\n148\n110\n199\n40\n234\n\n\nLewisham\n273\n288\n273\n32829\n89663\n122492\n81.85742\n0.2550396\n0.0023540\n66\n44\n66\n81\n8\n25\n149\n13\n133\n\n\nWest Berkshire\n340\n277\n340\n33558\n28003\n61561\n103.72536\n0.0157734\n0.0033439\n6\n55\n6\n80\n139\n104\n79\n92\n58\n\n\nWarwick\n341\n290\n341\n33726\n25353\n59079\n112.36995\n0.0056245\n0.0035936\n5\n42\n5\n79\n167\n115\n57\n135\n52\n\n\nBolton\n291\n302\n291\n33985\n42018\n76003\n106.68833\n0.0021221\n0.0027325\n51\n31\n51\n78\n65\n66\n68\n200\n99\n\n\nLuton\n341\n293\n341\n34348\n33348\n67696\n117.08185\n0.0292726\n0.0026121\n5\n39\n5\n77\n100\n88\n43\n69\n110\n\n\nKirklees\n318\n323\n318\n34538\n59527\n94065\n133.83505\n0.0034612\n0.0032210\n27\n11\n27\n76\n33\n51\n17\n168\n65\n\n\nSouth Cambridgeshire\n328\n284\n328\n34916\n39466\n74382\n98.77528\n0.0143335\n0.0042710\n17\n48\n17\n75\n71\n72\n95\n98\n38\n\n\nCounty Durham\n316\n328\n316\n35081\n64602\n99683\n136.76168\n0.0025184\n0.0033631\n29\n8\n29\n74\n27\n45\n15\n186\n57\n\n\nKingston upon Thames\n317\n272\n317\n35923\n45101\n81024\n88.78187\n0.1066740\n0.0027264\n28\n60\n28\n73\n58\n64\n115\n31\n101\n\n\nBasildon\n321\n282\n321\n36071\n36057\n72128\n92.09181\n0.0612035\n0.0019214\n24\n50\n24\n72\n80\n77\n109\n36\n185\n\n\nRotherham\n287\n312\n287\n36886\n43598\n80484\n110.48375\n0.0018907\n0.0027850\n55\n21\n55\n71\n60\n65\n61\n215\n95\n\n\nWindsor and Maidenhead\n341\n273\n341\n36971\n34482\n71453\n99.72553\n0.0372343\n0.0038264\n5\n59\n5\n70\n93\n79\n93\n55\n47\n\n\nExeter\n248\n241\n248\n37151\n10809\n47960\n57.60331\n0.0011451\n0.0047422\n86\n91\n86\n69\n316\n166\n242\n267\n32\n\n\nHaringey\n300\n286\n300\n37279\n80177\n117456\n93.22087\n0.2386431\n0.0032502\n44\n46\n44\n68\n11\n29\n106\n15\n63\n\n\nGuildford\n334\n258\n334\n38372\n30423\n68795\n85.17198\n0.0361713\n0.0030977\n12\n74\n12\n67\n120\n85\n129\n59\n72\n\n\nMerton\n309\n280\n309\n38381\n67646\n106027\n87.42231\n0.1894013\n0.0028738\n36\n52\n36\n66\n23\n38\n123\n20\n90\n\n\nWelwyn Hatfield\n336\n271\n336\n38496\n22907\n61403\n90.64350\n0.0389517\n0.0029540\n10\n61\n10\n65\n189\n106\n110\n51\n84\n\n\nRichmond upon Thames\n316\n273\n316\n38600\n58964\n97564\n87.93170\n0.1564364\n0.0037355\n29\n59\n29\n64\n35\n47\n119\n25\n48\n\n\nKingston upon Hull, City of\n292\n298\n292\n38602\n24199\n62801\n102.14345\n0.0012955\n0.0025353\n50\n34\n50\n63\n176\n100\n85\n250\n115\n\n\nDudley\n318\n318\n318\n38796\n57172\n95968\n126.70449\n0.0042945\n0.0031201\n27\n15\n27\n62\n37\n49\n24\n153\n68\n\n\nSlough\n335\n271\n335\n39282\n31753\n71035\n94.80244\n0.0380361\n0.0041691\n11\n61\n11\n61\n111\n80\n101\n53\n40\n\n\nNorthampton\n337\n307\n337\n39498\n27141\n66639\n118.08045\n0.0088677\n0.0036166\n9\n26\n9\n60\n147\n90\n41\n110\n51\n\n\nGreenwich\n316\n289\n316\n39593\n70802\n110395\n97.80635\n0.1959638\n0.0024311\n29\n43\n29\n59\n21\n33\n97\n19\n125\n\n\nWiltshire\n345\n331\n345\n39717\n55625\n95342\n160.51941\n0.0150479\n0.0040658\n1\n6\n1\n58\n38\n50\n5\n96\n42\n\n\nCroydon\n306\n302\n306\n39884\n92094\n131978\n100.31073\n0.2122394\n0.0026456\n39\n31\n39\n57\n7\n21\n91\n18\n106\n\n\nStoke-on-Trent\n313\n309\n313\n40031\n33667\n73698\n114.84293\n0.0015778\n0.0029178\n32\n24\n32\n56\n99\n73\n48\n230\n86\n\n\nSunderland\n254\n294\n254\n40830\n34827\n75657\n81.87235\n0.0018640\n0.0028891\n80\n38\n80\n55\n88\n67\n147\n217\n88\n\n\nBromley\n322\n288\n322\n40897\n80537\n121434\n104.05368\n0.2233553\n0.0022546\n23\n44\n23\n54\n10\n26\n78\n16\n146\n\n\nPortsmouth\n343\n288\n343\n41272\n27862\n69134\n115.85177\n0.0059324\n0.0032274\n3\n44\n3\n53\n140\n83\n45\n129\n64\n\n\nEnfield\n314\n294\n314\n41313\n73140\n114453\n105.61314\n0.1777036\n0.0031087\n31\n38\n31\n52\n15\n30\n73\n23\n69\n\n\nDerby\n316\n308\n316\n41670\n29802\n71472\n113.83201\n0.0029402\n0.0032790\n29\n25\n29\n51\n126\n78\n49\n178\n61\n\n\nWalsall\n333\n313\n333\n41782\n48755\n90537\n130.19952\n0.0039666\n0.0033192\n13\n20\n13\n50\n52\n54\n19\n160\n59\n\n\nSouthampton\n321\n300\n321\n41891\n41234\n83125\n115.21255\n0.0069496\n0.0036577\n24\n32\n24\n49\n67\n63\n47\n123\n50\n\n\nWinchester\n327\n270\n327\n41929\n23369\n65298\n89.55948\n0.0114415\n0.0035121\n18\n62\n18\n48\n182\n94\n113\n106\n55\n\n\nReading\n332\n289\n332\n42267\n32715\n74982\n112.58266\n0.0227425\n0.0040357\n14\n43\n14\n47\n104\n70\n54\n82\n43\n\n\nGateshead\n200\n279\n200\n42942\n42399\n85341\n51.61637\n0.0017757\n0.0035313\n123\n53\n123\n46\n64\n58\n260\n222\n53\n\n\nCrawley\n335\n246\n335\n43108\n18998\n62106\n72.56600\n0.0248586\n0.0029446\n11\n86\n11\n45\n235\n102\n190\n78\n85\n\n\nPreston\n288\n270\n288\n44352\n21146\n65498\n84.42626\n0.0011831\n0.0042716\n54\n62\n54\n44\n207\n92\n132\n265\n37\n\n\nWolverhampton\n314\n305\n314\n44388\n40094\n84482\n112.57007\n0.0032852\n0.0030924\n31\n28\n31\n43\n69\n61\n56\n172\n73\n\n\nMilton Keynes\n344\n307\n344\n44450\n27780\n72230\n122.22514\n0.0253813\n0.0035232\n2\n26\n2\n42\n143\n76\n30\n76\n54\n\n\nWakefield\n297\n322\n297\n45101\n45316\n90417\n120.17849\n0.0029064\n0.0038373\n46\n12\n46\n41\n57\n55\n37\n179\n46\n\n\nOxford\n333\n287\n333\n45775\n15693\n61468\n107.32489\n0.0113616\n0.0045709\n13\n45\n13\n40\n277\n105\n66\n107\n34\n\n\nStockport\n320\n314\n320\n47968\n58798\n106766\n127.30501\n0.0044807\n0.0047446\n25\n19\n25\n39\n36\n37\n22\n148\n31\n\n\nNorwich\n283\n259\n283\n48392\n21251\n69643\n63.73725\n0.0026206\n0.0041001\n59\n73\n59\n38\n203\n81\n213\n183\n41\n\n\nWarrington\n326\n302\n326\n49172\n34607\n83779\n124.18728\n0.0028033\n0.0038653\n19\n31\n19\n37\n90\n62\n27\n180\n45\n\n\nNewham\n331\n305\n331\n49198\n77274\n126472\n118.87240\n0.2181891\n0.0037221\n15\n28\n15\n36\n13\n24\n39\n17\n49\n\n\nBradford\n337\n318\n337\n50336\n55040\n105376\n142.38026\n0.0043787\n0.0048884\n9\n15\n9\n35\n39\n39\n12\n150\n29\n\n\nCoventry\n339\n321\n339\n50577\n39493\n90070\n145.23539\n0.0058079\n0.0048386\n7\n13\n7\n34\n70\n56\n10\n132\n30\n\n\nCheshire West and Chester\n323\n324\n323\n50910\n51970\n102880\n141.77478\n0.0034742\n0.0039760\n22\n10\n22\n33\n44\n42\n13\n167\n44\n\n\nCambridge\n312\n250\n312\n51240\n16062\n67302\n73.34194\n0.0134464\n0.0046020\n33\n82\n33\n32\n273\n89\n188\n101\n33\n\n\nSolihull\n333\n320\n333\n51374\n49120\n100494\n133.30159\n0.0075356\n0.0053752\n13\n14\n13\n31\n51\n44\n18\n117\n26\n\n\nBarnet\n335\n295\n335\n53143\n94328\n147471\n107.29323\n0.2678205\n0.0053627\n11\n37\n11\n30\n6\n14\n67\n11\n27\n\n\nCheshire East\n331\n334\n331\n53260\n51773\n105033\n153.00249\n0.0049410\n0.0044883\n15\n4\n15\n29\n46\n41\n7\n141\n36\n\n\nBrent\n324\n306\n324\n54353\n86120\n140473\n115.73294\n0.2552967\n0.0066587\n21\n27\n21\n28\n9\n17\n46\n12\n19\n\n\nSandwell\n330\n322\n330\n58716\n61446\n120162\n138.97124\n0.0058632\n0.0045497\n16\n12\n16\n27\n30\n28\n14\n130\n35\n\n\nSalford\n327\n304\n327\n59144\n51900\n111044\n118.37394\n0.0039354\n0.0053232\n18\n29\n18\n26\n45\n32\n40\n162\n28\n\n\nSouth Gloucestershire\n342\n315\n342\n59359\n53569\n112928\n143.90381\n0.0071708\n0.0067618\n4\n18\n4\n25\n43\n31\n11\n121\n18\n\n\nHackney\n325\n282\n325\n60542\n75197\n135739\n104.27664\n0.2704059\n0.0068321\n20\n50\n20\n24\n14\n19\n77\n10\n17\n\n\nEaling\n342\n296\n342\n63429\n95217\n158646\n121.88623\n0.2424303\n0.0072984\n4\n36\n4\n23\n5\n11\n32\n14\n14\n\n\nSheffield\n337\n337\n337\n63693\n45426\n109119\n160.95208\n0.0033646\n0.0042047\n9\n3\n9\n22\n56\n35\n4\n169\n39\n\n\nWandsworth\n327\n305\n327\n63894\n124029\n187923\n121.44261\n0.4178796\n0.0058755\n18\n28\n18\n21\n1\n9\n33\n5\n22\n\n\nLeicester\n328\n311\n328\n67191\n41007\n108198\n121.94219\n0.0045364\n0.0060454\n17\n22\n17\n20\n68\n36\n31\n145\n20\n\n\nTrafford\n316\n299\n316\n70188\n50717\n120905\n113.06647\n0.0048473\n0.0068569\n29\n33\n29\n19\n49\n27\n53\n143\n16\n\n\nCardiff\n321\n310\n321\n73041\n32252\n105293\n126.18715\n0.0032443\n0.0056728\n24\n23\n24\n18\n109\n40\n25\n173\n24\n\n\nHounslow\n339\n298\n339\n73977\n71624\n145601\n113.12328\n0.1694069\n0.0072375\n7\n34\n7\n17\n18\n15\n52\n24\n15\n\n\nBristol, City of\n338\n324\n338\n80907\n54120\n135027\n146.21380\n0.0085801\n0.0081482\n8\n10\n8\n16\n42\n20\n9\n112\n13\n\n\nKensington and Chelsea\n334\n256\n334\n86860\n50799\n137659\n87.89829\n0.3011796\n0.0144531\n12\n76\n12\n15\n47\n18\n121\n8\n5\n\n\nLambeth\n339\n295\n339\n87037\n115419\n202456\n120.60327\n0.4329508\n0.0086193\n7\n37\n7\n14\n2\n8\n34\n3\n12\n\n\nNottingham\n336\n315\n336\n89650\n38180\n127830\n134.64542\n0.0039334\n0.0059435\n10\n18\n10\n13\n73\n23\n16\n163\n21\n\n\nNewcastle upon Tyne\n320\n292\n320\n89811\n38300\n128111\n104.36164\n0.0030717\n0.0057526\n25\n40\n25\n12\n72\n22\n76\n177\n23\n\n\nHammersmith and Fulham\n340\n273\n340\n90212\n64765\n154977\n103.70858\n0.3005236\n0.0118080\n6\n59\n6\n11\n26\n13\n80\n9\n9\n\n\nLiverpool\n301\n333\n301\n91162\n50759\n141921\n130.03027\n0.0042335\n0.0055228\n43\n5\n43\n10\n48\n16\n20\n154\n25\n\n\nHillingdon\n345\n303\n345\n96119\n61002\n157121\n123.20678\n0.1448890\n0.0086205\n1\n30\n1\n9\n31\n12\n28\n27\n11\n\n\nLeeds\n340\n340\n340\n121087\n65369\n186456\n166.23405\n0.0072535\n0.0092803\n6\n2\n6\n8\n25\n10\n2\n120\n10\n\n\nIslington\n342\n277\n342\n132028\n70981\n203009\n102.43241\n0.3661235\n0.0151687\n4\n55\n4\n7\n19\n7\n84\n7\n4\n\n\nSouthwark\n343\n297\n343\n132137\n95381\n227518\n120.54708\n0.4190788\n0.0124909\n3\n35\n3\n6\n4\n6\n36\n4\n8\n\n\nBirmingham\n345\n343\n345\n166056\n100223\n266279\n174.73617\n0.0144646\n0.0127334\n1\n1\n1\n5\n3\n3\n1\n97\n7\n\n\nManchester\n345\n333\n345\n179517\n72365\n251882\n161.42941\n0.0081722\n0.0134337\n1\n5\n1\n4\n16\n5\n3\n115\n6\n\n\nTower Hamlets\n340\n296\n340\n185467\n70808\n256275\n119.14147\n0.4108055\n0.0210011\n6\n36\n6\n3\n20\n4\n38\n6\n3\n\n\nCamden\n345\n282\n345\n227171\n62784\n289955\n116.18251\n0.4715192\n0.0277070\n1\n50\n1\n2\n29\n2\n44\n2\n2\n\n\nWestminster,City of London\n345\n289\n345\n866007\n42018\n908025\n109.10666\n1.0000000\n0.0736260\n1\n43\n1\n1\n65\n1\n63\n1\n1",
    "crumbs": [
      "Practicals",
      "Network analysis practical: networks of cities"
    ]
  },
  {
    "objectID": "src/network_analysis.html#compare-centralities",
    "href": "src/network_analysis.html#compare-centralities",
    "title": "Network analysis practical: networks of cities",
    "section": "Compare centralities",
    "text": "Compare centralities\nThe below code provides a corregram of the different centrality measures.\n\ncor.mat &lt;- cor(centralities[,c(2:10)])\ncorrplot(cor.mat, type=\"upper\")\n\n\n\n\n\n\n\n\n\n\n\nQuestion: Discuss the differences between the different centrality measures in the context of the commuting network.",
    "crumbs": [
      "Practicals",
      "Network analysis practical: networks of cities"
    ]
  },
  {
    "objectID": "src/network_analysis.html#community-detection",
    "href": "src/network_analysis.html#community-detection",
    "title": "Network analysis practical: networks of cities",
    "section": "Community detection",
    "text": "Community detection\nTo begin with, we need to convert our network to an undirected one, as the fast_greedy algorithm we are using can only be applied to such networks.\n\nnet.all.und &lt;- as.undirected(net.all,\n                             mode=c(\"mutual\"),\n                             edge.attr.comb = igraph_opt(\"edge.attr.comb\"))\n\ncommunities.net.all &lt;- cluster_fast_greedy(net.all.und)\n\n# This provides a summary of the community algorithm:\nprint(communities.net.all)\n\nIGRAPH clustering fast greedy, groups: 11, mod: 0.69\n+ groups:\n  $`1`\n   [1] \"E41000033\" \"E41000034\" \"E41000035\" \"E41000098\" \"E41000100\" \"E41000101\"\n   [7] \"E41000102\" \"E41000104\" \"E41000106\" \"E41000107\" \"E41000127\" \"E41000130\"\n  [13] \"E41000137\" \"E41000138\" \"E41000139\" \"E41000140\" \"E41000141\" \"E41000142\"\n  [19] \"E41000143\" \"E41000144\" \"E41000145\" \"E41000146\" \"E41000147\" \"E41000148\"\n  [25] \"E41000228\" \"E41000229\" \"E41000231\" \"E41000232\" \"E41000233\" \"E41000234\"\n  [31] \"E41000236\" \"E41000293\" \"E41000294\" \"E41000295\" \"E41000296\" \"E41000297\"\n  [37] \"E41000298\" \"E41000299\" \"E41000300\" \"E41000301\" \"E41000302\" \"E41000303\"\n  [43] \"E41000304\" \"E41000305\" \"E41000306\" \"E41000307\" \"E41000308\" \"E41000309\"\n  [49] \"E41000310\" \"E41000311\" \"E41000312\" \"E41000313\" \"E41000314\" \"E41000315\"\n  + ... omitted several groups/vertices\n\n# To see how many communities we have, run the below:\nlength(communities.net.all)\n\n[1] 11\n\n# And these are the community sizes:\nsizes(communities.net.all)\n\nCommunity sizes\n 1  2  3  4  5  6  7  8  9 10 11 \n63 46 29 31 16 47 27 14 29 22 22 \n\n# Now, let's create a new object with the community membership\n#communities.net.all_membership &lt;- membership(communities.net.all)\n\n# And convert it to a data.frame\n\ncommunities.net.all_membership &lt;- membership(communities.net.all) %&gt;%\n  unclass %&gt;%                          # we first need to unclass the object\n  as.data.frame %&gt;%                    # we convert it to a dataframe\n  rename(community = \".\") %&gt;%          # rename the community column\n  rownames_to_column(\"cmlad11cd\") %&gt;%  # we 'move' the rownames to a\n                                       # new column in order to do a merge below\n  left_join(la.names) %&gt;%              # and now we can merge it with the LA names\n  arrange(community) %&gt;%               # arrange based on the community membership\n  glimpse()\n\nRows: 346\nColumns: 3\n$ cmlad11cd &lt;chr&gt; \"E41000033\", \"E41000034\", \"E41000035\", \"E41000098\", \"E410001…\n$ community &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ cmlad11nm &lt;chr&gt; \"Southend-on-Sea\", \"Thurrock\", \"Medway\", \"Basildon\", \"Brentw…\n\n# this is just a test to see if the `left_join` led to any NAs\nsapply(communities.net.all_membership, function(x) sum(is.na(x)))\n\ncmlad11cd community cmlad11nm \n        0         0         0 \n\n\nLet’s try now to map our output. We need the local authorities shape file we have already loaded.\n\n# First we merge the `la` object with the community membership\nla &lt;- merge(la, communities.net.all_membership, by = \"cmlad11cd\")\n# Please note that I used base R for the above. I could have easily used the dplyr\n# equivalent. Which function would this be?\n\n# just a check to see how the merge worked\nsapply(la, function(x) sum(is.na(x))) \n\n    cmlad11cd      OBJECTID   cmlad11nm.x    cmlad11nmw   Shape__Area \n            0             0             0             0             0 \nShape__Length      GlobalID     community   cmlad11nm.y      geometry \n            0             0             0             0             0 \n\n# And this is our map\nggplot(la, aes(fill = as.factor(community))) + \n  geom_sf() +\n  ggtitle(\"Communities using the 'fast and greedy' algorithm\")\n\n\n\n\n\n\n\n\n\n\n\nQuestion: What do you think about the output? Can we learn anything? Can you try different community algorithms? Check igraph’s manual and Javed et al (2018)",
    "crumbs": [
      "Practicals",
      "Network analysis practical: networks of cities"
    ]
  },
  {
    "objectID": "src/network_analysis.html#network-visualisation",
    "href": "src/network_analysis.html#network-visualisation",
    "title": "Network analysis practical: networks of cities",
    "section": "Network Visualisation",
    "text": "Network Visualisation\nThe below chunks of code offer some intro to plotting network data. Have a look to see how the code works.\n\nplot(net.all, # the graph to be plotted\n     layout=layout.fruchterman.reingold, # the layout method. see the igraph documentation for details\n     main='My first graph in R', # specifies the title\n     vertex.label.dist=0.5, # puts the name labels slightly off the dots\n     vertex.frame.color='blue', # the colour of the border of the dots\n     vertex.label.color='black', # the colour of the name labels\n     vertex.label.font=2, # the font of the name labels\n     vertex.label=V(net.all)$id, # specifies the labels of the vertices. in this case the 'name' attribute is used\n     vertex.label.cex=.5,   # specifies the size of the font of the labels. can also be made to vary\n     edge.arrow.size=0.1) # specifies the arrow size\n\n\n\n\n\n\n\n\nNot a very nice outcome :( Let’s remove some information\n\nplot(net.all, # the graph to be plotted\n     layout=layout.fruchterman.reingold, # the layout method. see the igraph documentation for details\n     main='My second graph in R',   # specifies the title\n     vertex.frame.color='blue', # the colour of the border of the dots\n     vertex.label.font=2,   # the font of the name labels\n     vertex.label=NA,   # no labels for the vertices\n     edge.arrow.size=0, # specifies the arrow size\n     vertex.size=5) # vertex size\n\n\n\n\n\n\n\n\nLet’s try to only plot nodes with high weighted degree centrality.\n\n# The below gives us the 90th percentile:\nq &lt;- quantile(strength(net.all), .9)\n\n# Then, we create a network with the nodes we DON'T want to plot. In this case the lowest 90%\nlow_nodes &lt;- V(net.all)[strength(net.all) &lt; q] # 108659 is the 90% percentile. Feel free to play with different numbers\n\n# And this is the network with the 10% of the most central nodes\nnet.all.central &lt;- delete.vertices(net.all, low_nodes)\n\nWarning: `delete.vertices()` was deprecated in igraph 2.0.0.\nℹ Please use `delete_vertices()` instead.\n\n# The below uses the node degree centrality to plot the node size.\n# Pay attention to the 0.0001 factor.\n\nplot(net.all.central, # the graph to be plotted\n     layout=layout.fruchterman.reingold, # the layout method. see the igraph documentation for details\n     main='My third graph in R', # specifies the title\n     vertex.frame.color='blue', # the colour of the border of the dots\n     vertex.label.font=2,   # the font of the name labels\n     vertex.label=V(net.all.central)$id, # no labels for the vertices\n     vertex.label.font=1, # the font type of the name labels (1 plain, 2 bold, 3, italic, 4 bold italic, 5 symbol)\n     vertex.label.cex=.5,   # specifies the size of the font of the labels. can also be made to vary\n     edge.arrow.size=0, # specifies the arrow size\n     vertex.size=strength(net.all.central)*0.0001) # defines the node size based on weighted degree centrality\n\n\n\n\n\n\n\n\nNot very nice either…\n\n\n\nFor the next time:\n\n\n\n\nspend some time browsing the igraph’s manual,\n\n\n\n\nsearch for code online to plot large netwoks in R using igraph, and\n\n\n\n\nuse the following tutorials\n\n\n\n\n\n\nnetVizR (the data can be found here under the ‘Network Visualization in R’ section\n\n\n\n\nedge-bundling\n\n\n\n\nin order to produce more meaningful network visualisations of the UK commuting network.\n\n\nI am interesting in one or multiple plots with:\n\n\n\n\nall or a subset of the nodes and edges. How could you select such a subset?\n\n\n\n\nthe communities you detected.\n\n\n\n\nvarying size of nodes based on a centrality measure. Again, you can decide to plot a subset of the network based on some network characteristics.\n\n\n\n\nan appropriate to the network layout.",
    "crumbs": [
      "Practicals",
      "Network analysis practical: networks of cities"
    ]
  },
  {
    "objectID": "src/network_analysis.html#mapping",
    "href": "src/network_analysis.html#mapping",
    "title": "Network analysis practical: networks of cities",
    "section": "Mapping",
    "text": "Mapping\nUntil now we focused mostly on the topology of the network and we ignored its spatial dimension. However, this is an important attribute of the commuting network and we should necessarily consider it and incorporate it in our analysis. To begin with we will map these commuting flows. Bare in mind that this is not a trivial process as, in essence, we need to attach the geographical coordinates to the network nodes and plot the network based on these coordinates. Given the size of our network this might be computationally expensive. It is also challenging to create a meaningful map given the size of the network.\nThe local authorities spatial object is necessary in order to use the od2line() function from the stplanr package. This is a very useful function transforms origin to destination (OD) tables to linear spatial objects. In order for this function to work we need the above spatial object with the zones of the origin and destination flows. Importantly it needs to only include the zone codes (i.e. the local authority codes), which should match with the origin and destination codes.This is the la spatial object of the local authorities in England and Wales, which has already been loaded in R.\nThe below code just plots the boundaries of local authorities.\n\nggplot(la) + \n  geom_sf() +\n  ggtitle(\"Local authorities\")\n\n\n\n\n\n\n\n\nNow let’s do some clean-up of the commuting.all data frame in order to convert it to a spatial object using the od2line() function.\n\n# We start by plotting a histogram of the data. We are using ggplot() as the output\n# is nicer, but the simpler hist() could also be used\n\noptions(scipen=999) # It prevents R from using scientific notation for numbers\nggplot(commuting.all,\n       aes(x=weight)) +\n  geom_histogram() +\n  geom_vline(aes(xintercept=mean(weight)), # This line of code adds a vertical line to represent the mean\n             color=\"blue\", linetype=\"dashed\", size=1)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nAs you can see the flow data is very skewed. So, let’s truncate the data and plot a histogram for flows between origin and destinations will less than 1000 people.\n\nggplot(commuting.all[commuting.all$weight &lt; 1000,],\n       aes(x=weight)) +\n  geom_histogram() +\n  geom_vline(aes(xintercept=mean(weight)),\n             color=\"blue\",\n             linetype=\"dashed\",\n             size=1)\n\n\n\n\n\n\n\n\nThere is a very large number of local authority pairs with very few people commuting between these OD pairs. So, in order to decrease the data and the mapping complexity we will keep only the OD pairs with more than 5 commuters.\n\ncommuting.all.truncated &lt;- commuting.all %&gt;% \n  filter(weight &gt; 5) %&gt;% \n  glimpse()\n\nRows: 41,659\nColumns: 3\n$ o      &lt;chr&gt; \"E41000001\", \"E41000001\", \"E41000001\", \"E41000001\", \"E41000001\"…\n$ d      &lt;chr&gt; \"E41000002\", \"E41000003\", \"E41000004\", \"E41000005\", \"E41000010\"…\n$ weight &lt;dbl&gt; 1591, 534, 3865, 433, 8, 24, 6, 30, 6, 6, 10, 8, 6, 7, 7, 7, 9,…\n\n\n\n\n\nQuestion: How many lines did we filter out?\n\n\n\nThe next chunk of code converts the origin-destination table to a spatial object using the corresponding zones spatial object (la) that we have already loaded.\n\n# od2line() has some strict requirement regarding data structure. \n# Check ?od2line\n# Therefore, we kept only the local authority code and name.\n# The actual requirement is to have the the zone code as the \n# first column of the zone object. \n# If you remember, we run the following when we loaded the la object: \n# la.names &lt;- as.data.frame(la) %&gt;% \n#   select(cmlad11cd, cmlad11nm) # all we need is the LA names and codes\n\ntravel_network &lt;- od2line(flow = commuting.all.truncated, \n                          zones = la)\n\n# Just to see the class of the new spatial object\nclass(travel_network)\n\n[1] \"sf\"         \"data.frame\"\n\nplot(travel_network)\n\n\n\n\n\n\n\n\nThis is a naive plot of the spatial network. We can guess the shape of England and Wales, but this is like a hairball network and far from being useful. In order to produce a more useful visualisation we will employ the leaflet package, which produces interactive maps using JaveScript Libraries.\n\n# this is the colour pallet we are going to use based on 5 quantiles\nFlow_pal &lt;- colorQuantile(\"YlOrBr\", domain = travel_network$weight, n=5)\n\nleaflet() %&gt;%\n  addTiles() %&gt;%\n  addPolylines(\n    data = travel_network,\n    weight = .1,\n    color = ~Flow_pal(weight),\n    opacity = .6) %&gt;%\n    addLegend(\"topright\",\n              pal = Flow_pal,\n              values = travel_network$weight,\n              title = \"Commuting flows in 2011\")\n\n\n\n\n\nLet’s try now to create an interactive map showing only the flows originating from Bristol and Birmingham.\n\n# To begin with let's find out the local authority codes for Bristol and Birmingham\n# Look up the grep() function. Very useful!\nla.names[grep(\"Bristol\", la.names$cmlad11nm),]\n\n   cmlad11cd        cmlad11nm\n23 E41000023 Bristol, City of\n\nla.names[grep(\"Birmingham\", la.names$cmlad11nm),]\n\n    cmlad11cd  cmlad11nm\n281 E41000281 Birmingham\n\n# These are E41000023 and E41000281 respectively.\n\n# Next we will create the 'groups' of local authorities\ntravel_network$la.groups = \"Rest\"\ntravel_network$la.groups[travel_network$o == \"E41000023\"] = \"Bristol\"\ntravel_network$la.groups[travel_network$o == \"E41000281\"] = \"Birmingham\"\n\nleaflet() %&gt;%\n  addTiles() %&gt;%\n  addPolylines(\n    data = travel_network,\n    weight = 1, # Notice the different value for better visual effect when zoom in\n    color = ~Flow_pal(weight),\n    opacity = .8, # as above\n    group = travel_network$la.groups) %&gt;%\n  addLayersControl(\n    position = \"bottomleft\",\n    overlayGroups = unique(travel_network$la.groups),\n    options = layersControlOptions(\n      collapsed = FALSE)) %&gt;%\n  addLegend(\"topright\",\n          pal = Flow_pal,\n          values = travel_network$weight,\n          title = \"Commuting flows in 2011\")",
    "crumbs": [
      "Practicals",
      "Network analysis practical: networks of cities"
    ]
  },
  {
    "objectID": "src/street_networks.html",
    "href": "src/street_networks.html",
    "title": "Street network analysis practical: networks within cities",
    "section": "",
    "text": "Until this point the focus has been on networks between cities. Now we are turning the focus on networks within cities and more specifically on street networks. These are spatial networks whose edges and not only their nodes contain spatial information. To summarise, in spatial or, in other words, geospatial networks:\n\nNodes always contain geographical coordinates.\nHowever, edges can:\n\neither contain geographical information (e.g. road networks),\nor not, and instead just link two nodes (e.g. social networks whose node’s geograpical location is known to us)\n\n\nStreet network analysis is not new. For instance, Leonhard Euler proved that the Seven Bridges of Königsberg problem had no solution. This type of problems and analysis – routing – later on became integral part of the standard GIS toolkit.\nWhy is it important to study street networks:\n\nTo understand the form of cities. There are quite a few recent studies (e.g. Boeing 2019, 2017), but this was also part of an older strand of research called Space Syntax (Hillier et al. 1976).\nTo understand the structure of transportation systems and support transportation planning.\n\nSome key characteristics of street networks:\n\nThey might have multiple edges between two nodes.\nStreet networks are approximately planar (Boeing 2017).\nEdges contain geographical information.\n\nTopological measures are important to understand and (maybe compare different) urban street networks.\nTry to think what the below topological measures might mean for a street network:\n\nNode density\nNode eccentricity\nNetwork diameter\nNode degree\nClustering coefficient\nBetweenness centrality and its maximum value in a network\nCloseness centrality\n\nKey development: OpenStreetMap. Known as the Wikipedia for maps, OSM is a collaborative, citizen science project, which allows individuals to contribute in building openly distributed geographic data (Muki Haklay et al. 2021; Mordechai Haklay and Weber 2008). Through OSM urban analysts have access to street network data from around the world, something which wasn’t the case, let’s say, 20 years ago.\nThe below are based on the very helpful vignettes of the sfnetworks and osmdata packages. Please make sure to revisit these materials on your own time.\n\nlibrary(sfnetworks) #tidy geospatial networks\nlibrary(sf)         #simple features, spatial data\nlibrary(tidygraph)  #tidyverse's version of igraph\nlibrary(tidyverse)  #you should know this by now\nlibrary(igraph)     #as above\nlibrary(osmdata)    #access OSM data\nlibrary(dbscan)     #this is the dbscan clustering algorithm\n\nknitr::opts_chunk$set(echo = TRUE) \n\nIn geospatial networks:\n\nnodes always contain geographical coordinates (sf objects),\nedges can:\n\neither contain geographical information (e.g. road networks)\nor not, and instead just link two nodes (e.g. geospatial social networks)",
    "crumbs": [
      "Practicals",
      "Street network analysis practical: networks within cities"
    ]
  },
  {
    "objectID": "src/street_networks.html#street-netorks",
    "href": "src/street_networks.html#street-netorks",
    "title": "Street network analysis practical: networks within cities",
    "section": "",
    "text": "Until this point the focus has been on networks between cities. Now we are turning the focus on networks within cities and more specifically on street networks. These are spatial networks whose edges and not only their nodes contain spatial information. To summarise, in spatial or, in other words, geospatial networks:\n\nNodes always contain geographical coordinates.\nHowever, edges can:\n\neither contain geographical information (e.g. road networks),\nor not, and instead just link two nodes (e.g. social networks whose node’s geograpical location is known to us)\n\n\nStreet network analysis is not new. For instance, Leonhard Euler proved that the Seven Bridges of Königsberg problem had no solution. This type of problems and analysis – routing – later on became integral part of the standard GIS toolkit.\nWhy is it important to study street networks:\n\nTo understand the form of cities. There are quite a few recent studies (e.g. Boeing 2019, 2017), but this was also part of an older strand of research called Space Syntax (Hillier et al. 1976).\nTo understand the structure of transportation systems and support transportation planning.\n\nSome key characteristics of street networks:\n\nThey might have multiple edges between two nodes.\nStreet networks are approximately planar (Boeing 2017).\nEdges contain geographical information.\n\nTopological measures are important to understand and (maybe compare different) urban street networks.\nTry to think what the below topological measures might mean for a street network:\n\nNode density\nNode eccentricity\nNetwork diameter\nNode degree\nClustering coefficient\nBetweenness centrality and its maximum value in a network\nCloseness centrality\n\nKey development: OpenStreetMap. Known as the Wikipedia for maps, OSM is a collaborative, citizen science project, which allows individuals to contribute in building openly distributed geographic data (Muki Haklay et al. 2021; Mordechai Haklay and Weber 2008). Through OSM urban analysts have access to street network data from around the world, something which wasn’t the case, let’s say, 20 years ago.\nThe below are based on the very helpful vignettes of the sfnetworks and osmdata packages. Please make sure to revisit these materials on your own time.\n\nlibrary(sfnetworks) #tidy geospatial networks\nlibrary(sf)         #simple features, spatial data\nlibrary(tidygraph)  #tidyverse's version of igraph\nlibrary(tidyverse)  #you should know this by now\nlibrary(igraph)     #as above\nlibrary(osmdata)    #access OSM data\nlibrary(dbscan)     #this is the dbscan clustering algorithm\n\nknitr::opts_chunk$set(echo = TRUE) \n\nIn geospatial networks:\n\nnodes always contain geographical coordinates (sf objects),\nedges can:\n\neither contain geographical information (e.g. road networks)\nor not, and instead just link two nodes (e.g. geospatial social networks)",
    "crumbs": [
      "Practicals",
      "Street network analysis practical: networks within cities"
    ]
  },
  {
    "objectID": "src/street_networks.html#a-first-toy-example",
    "href": "src/street_networks.html#a-first-toy-example",
    "title": "Street network analysis practical: networks within cities",
    "section": "A first ‘toy’ example",
    "text": "A first ‘toy’ example\nThe below code chunks create and manipulate a toy geospatial network.\n\np1 = st_point(c(7, 51))\np2 = st_point(c(7, 52))\np3 = st_point(c(8, 52))\np4 = st_point(c(8, 51.5))\n\nl1 = st_sfc(st_linestring(c(p1, p2)))\nl2 = st_sfc(st_linestring(c(p1, p4, p3)))\nl3 = st_sfc(st_linestring(c(p3, p2)))\n\nedges = st_as_sf(c(l1, l2, l3), crs = 4326)\nnodes = st_as_sf(c(st_sfc(p1), st_sfc(p2), st_sfc(p3)), crs = 4326)\n\nedges$from = c(1, 1, 3)\nedges$to = c(2, 3, 2)\n\nAs you can see below, net has a valid spatial network structure\n\nnet = sfnetwork(nodes, edges)\n\nChecking if spatial network structure is valid...\n\n\nSpatial network structure is valid\n\n\nWe can check it’s class:\n\nclass(net)\n\n[1] \"sfnetwork\" \"tbl_graph\" \"igraph\"   \n\n\nAnd check it characteristics.\n\nnet\n\n# A sfnetwork with 3 nodes and 3 edges\n#\n# CRS:  EPSG:4326 \n#\n# A directed acyclic simple graph with 1 component with spatially explicit edges\n#\n# A tibble: 3 × 1\n            x\n  &lt;POINT [°]&gt;\n1      (7 51)\n2      (7 52)\n3      (8 52)\n#\n# A tibble: 3 × 3\n   from    to                    x\n  &lt;int&gt; &lt;int&gt;     &lt;LINESTRING [°]&gt;\n1     1     2         (7 51, 7 52)\n2     1     3 (7 51, 8 51.5, 8 52)\n3     3     2         (8 52, 7 52)\n\n\nJust like igraph we can refer to nodes using the names we can assign to them.\n\nnodes$name = c(\"city\", \"village\", \"farm\")\nedges$from = c(\"city\", \"city\", \"farm\")\nedges$to = c(\"village\", \"farm\", \"village\")\n\nedges # check the from and to columns \n\nSimple feature collection with 3 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 7 ymin: 51 xmax: 8 ymax: 52\nGeodetic CRS:  WGS 84\n                               x from      to\n1        LINESTRING (7 51, 7 52) city village\n2 LINESTRING (7 51, 8 51.5, 8... city    farm\n3        LINESTRING (8 52, 7 52) farm village\n\nnet = sfnetwork(nodes, edges, node_key = \"name\")\n\nChecking if spatial network structure is valid...\n\n\nSpatial network structure is valid\n\n\nnet’s edges contain geographical information. So, let’s create an other_net whose edges do not contain geographical information. This could have been a geospatial social network, for example. We know where each node is located in space and then the edges illustrate the existence of a connection between two nodes. To do so, we simply set the st_geometry equal to NULL. The plots below will make these differences clear.\n\nst_geometry(edges) = NULL\nother_net = sfnetwork(nodes, edges, edges_as_lines = TRUE)\n\nChecking if spatial network structure is valid...\n\n\nSpatial network structure is valid\n\n\nWe can actually plot both example.\n\nplot(net, cex = 2, lwd = 2, main = \"Original geometries\")\n\n\n\n\n\n\n\nplot(other_net, cex = 2, lwd = 2, main = \"Geospatial social network example\")",
    "crumbs": [
      "Practicals",
      "Street network analysis practical: networks within cities"
    ]
  },
  {
    "objectID": "src/street_networks.html#a-more-real-street-network",
    "href": "src/street_networks.html#a-more-real-street-network",
    "title": "Street network analysis practical: networks within cities",
    "section": "A more ‘real’ street network",
    "text": "A more ‘real’ street network\nLet’s increase the complexity now. We can use the roxel data from the sfnetworks package. Roxel is a small town just outside Munster in Germany.\nThe as_sfnetwork() function converts the spatial object to a network. So, this is the spatial object and this is how it’s geometry looks like.\n\nroxel\n\nSimple feature collection with 851 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 7.522594 ymin: 51.94151 xmax: 7.546705 ymax: 51.9612\nGeodetic CRS:  WGS 84\n# A tibble: 851 × 3\n   name                  type                                           geometry\n * &lt;chr&gt;                 &lt;fct&gt;                                  &lt;LINESTRING [°]&gt;\n 1 Havixbecker Strasse   residential      (7.533722 51.95556, 7.533461 51.95576)\n 2 Pienersallee          secondary   (7.532442 51.95422, 7.53236 51.95377, 7.53…\n 3 Schulte-Bernd-Strasse residential (7.532709 51.95209, 7.532823 51.95239, 7.5…\n 4 &lt;NA&gt;                  path        (7.540063 51.94468, 7.539696 51.94479, 7.5…\n 5 Welsingheide          residential       (7.537673 51.9475, 7.537614 51.94562)\n 6 &lt;NA&gt;                  footway     (7.543791 51.94733, 7.54369 51.94686, 7.54…\n 7 &lt;NA&gt;                  footway           (7.54012 51.94478, 7.539931 51.94514)\n 8 &lt;NA&gt;                  path        (7.53822 51.94546, 7.538131 51.94549, 7.53…\n 9 &lt;NA&gt;                  track       (7.540063 51.94468, 7.540338 51.94468, 7.5…\n10 &lt;NA&gt;                  track       (7.5424 51.94599, 7.54205 51.94629, 7.5419…\n# ℹ 841 more rows\n\nplot(st_geometry(roxel))\n\n\n\n\n\n\n\n\nNow, we can convert it to a geospatial network and plot it.\n\nnet &lt;- as_sfnetwork(roxel)\nplot(net)\n\n\n\n\n\n\n\n\nInstead of plot() we can also use ggplot2 functions. autoplot() does what it says.\n\nautoplot(net) + \n  ggtitle(\"Road network, Münster Roxel\")\n\n\n\n\n\n\n\n\nWe have a network, so let’s do some network analysis.\nFirst thing we need to do is to activate the network component we are interested in. In the below example we want to calculate the betweenness centrality of nodes and, therefore, we need to first activate the nodes.\nSo, the net object now has a bc column in the node attributes\n\nnet = net %&gt;%\n  activate(\"nodes\") %&gt;%\n  mutate(bc = centrality_betweenness()) %&gt;% \n  print() # print() is equal to just run the object, in this case net.\n\n# A sfnetwork with 701 nodes and 851 edges\n#\n# CRS:  EPSG:4326 \n#\n# A directed multigraph with 14 components with spatially explicit edges\n#\n# A tibble: 701 × 2\n             geometry     bc\n          &lt;POINT [°]&gt;  &lt;dbl&gt;\n1 (7.533722 51.95556) 12936.\n2 (7.533461 51.95576) 11824 \n3 (7.532442 51.95422) 11926.\n4  (7.53209 51.95328)  7259.\n5 (7.532709 51.95209)  5668 \n6 (7.532869 51.95257)  2374 \n# ℹ 695 more rows\n#\n# A tibble: 851 × 5\n   from    to name                  type                                geometry\n  &lt;int&gt; &lt;int&gt; &lt;chr&gt;                 &lt;fct&gt;                       &lt;LINESTRING [°]&gt;\n1     1     2 Havixbecker Strasse   residential (7.533722 51.95556, 7.533461 51…\n2     3     4 Pienersallee          secondary   (7.532442 51.95422, 7.53236 51.…\n3     5     6 Schulte-Bernd-Strasse residential (7.532709 51.95209, 7.532823 51…\n# ℹ 848 more rows\n\n\nWe can now create a map of this spatial network, the size and the colour of its nodes are based on their betweenness centrality.\n\nggplot() +\n  geom_sf(data = st_as_sf(net, \"edges\"), col = \"grey50\") +            \n  geom_sf(data = st_as_sf(net, \"nodes\"), aes(col = bc), size = 1.5) + \n  ggtitle(\"Betweenness centrality\")\n\n\n\n\n\n\n\n\nTo better understand the structure of the above ggplot() look up geom_sf() and st_as_sf. If you only run net and st_as_sf(net, \"edges\") you can see what was the type of net originally and what it was transformed to with the st_as_sf.\n\n\n\nQuestion: Can you interpret betweenness centrality in this context?\n\n\n\nIf we want to get rid of geometries, all we need to do is to remove the geometry. As per base R, setting something equal to NULL means that we remove it.\n\nnet %&gt;%\n  activate(\"edges\") %&gt;%\n  st_set_geometry(NULL) %&gt;%\n  plot(draw_lines = T, main = \"Edges without geometries\")\n\n\n\n\n\n\n\nnet %&gt;%\n  activate(\"nodes\") %&gt;%\n  st_set_geometry(NULL) %&gt;%\n  plot(vertex.color = \"black\", main = \"Nodes without geometries\")",
    "crumbs": [
      "Practicals",
      "Street network analysis practical: networks within cities"
    ]
  },
  {
    "objectID": "src/street_networks.html#a-real-world-example-from-open-street-map",
    "href": "src/street_networks.html#a-real-world-example-from-open-street-map",
    "title": "Street network analysis practical: networks within cities",
    "section": "A real world example from Open Street Map",
    "text": "A real world example from Open Street Map\nLet’s now try to use some real-world data from OSM. The below code extracts the Bristol street data from the OSM API.\nTo understand the key and value options, go to OSM’s wiki page.\nKeep an eye on the below. Depending on your internet connections and the OSM’s API response time, it might take a couple of minutes. If you get an error message from running the opq() try again, it might work the second time as something might have gone wrong the first one. This is not uncommon when we extract data over the internet through an API. Usually such API requests are wrapped up in a if_else() function to re-try if the first attempt was unsuccessful.\n\nbristol_data &lt;- opq(bbox = 'Bristol') %&gt;%\n   # getbb (\"bristol uk\") %&gt;%\n   #  opq () %&gt;%\n  add_osm_feature(\n    key = 'highway', \n    value = c(\"motorway\", \"trunk\", \"primary\", \"secondary\", \"tertiary\", \"residential\", \"unclassified\", \"motorway_link\", \"trunk_link\", \"primary_link\", \"secondary_link\",\"tertiary_link\", \"residential_link\")\n) %&gt;% \n  osmdata_sf(quiet = FALSE)\n\nIssuing query to Overpass API ...\n\n\nAnnounced endpoint: gall.openstreetmap.de/\n\n\nQuery complete!\n\n\nconverting OSM data to sf format\n\n# extract the roads\nbristol_roads &lt;- st_geometry(bristol_data$osm_lines)\n  \n# build the sfnetwork object\nbristol_sfn &lt;- as_sfnetwork(bristol_roads, directed = FALSE, length_as_weight = TRUE)\n\nggplot() +\n  geom_sf(data = st_as_sf(bristol_sfn, \"edges\"), col = \"grey50\") +\n  geom_sf(data = st_as_sf(bristol_sfn, \"nodes\"), size = .01)\n\n\n\n\n\n\n\n\nNetwork data wrangling. We need to:\n\nRemove multiple edges and loops. AKA simplifying the networks.\n\n\n\nRemove nodes that are interior points in a line and define the shape of the line. AKA smoothing the network.\n\nTo keep track of the changes, let’s keep a note of the original network size.\n\n# size of original network\ngsize(bristol_sfn)  # number of edges\n\n[1] 15607\n\ngorder(bristol_sfn) # number of nodes\n\n[1] 21416\n\n\nNow we can simplify the network.\n\nbristol_wrangled &lt;- bristol_sfn %&gt;%\n  activate(\"edges\") %&gt;%\n  filter(!edge_is_multiple()) %&gt;%   # Simplify the network\n  filter(!edge_is_loop())           # Simplify the network \n\n# size of simplified network\ngsize(bristol_wrangled)  # number of edges\n\n[1] 15434\n\ngorder(bristol_wrangled) # number of nodes\n\n[1] 21416\n\n\n\nRemove the interior points…\n\nbristol_wrangled &lt;- convert(bristol_wrangled, to_spatial_smooth)\n\n# size of simplified network\ngsize(bristol_wrangled)  # number of edges\n\n[1] 12066\n\ngorder(bristol_wrangled) # number of nodes\n\n[1] 18048\n\n\n… and plot the network again.\n\nggplot() +\n  geom_sf(data = st_as_sf(bristol_wrangled, \"edges\"), col = \"grey50\") +\n  geom_sf(data = st_as_sf(bristol_wrangled, \"nodes\"), size = .01)",
    "crumbs": [
      "Practicals",
      "Street network analysis practical: networks within cities"
    ]
  },
  {
    "objectID": "src/street_networks.html#network-measures",
    "href": "src/street_networks.html#network-measures",
    "title": "Street network analysis practical: networks within cities",
    "section": "Network measures",
    "text": "Network measures\nNow we can calculate betweenness centrality for Bristol, using the OSM street network we acquired.\n\nbristol_wrangled &lt;- bristol_wrangled %&gt;%\n  activate(\"nodes\") %&gt;%\n  mutate(bc = centrality_betweenness())\n\nggplot() +\n  geom_sf(data = st_as_sf(bristol_wrangled, \"edges\"), col = \"grey50\") +\n  geom_sf(data = st_as_sf(bristol_wrangled, \"nodes\"), aes(col = bc,   \n                                                          alpha = bc), # Increase opacity based on betweenness...\n          size = 1) + \n  guides(alpha=FALSE) +                                                # ...but exclude this from the legend. Remove this line to see what will happen\n  ggtitle(\"Betweenness centrality in Bristol\")\n\nWarning: The `&lt;scale&gt;` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion: How can we interpret this map?\n\n\n\nRemember the community detections algorithms? We can detect such communities within the street network. These are neighbourhoods of streets which are better connected internally than externally with the whole network. There is a contradiction here, no? Community detection is about nodes, not edges? However, here we are interested in clustering edges. So, we wiil do a trick. We first ‘inverse’ our spatial network, which means that the nodes become edges and vice versa. We do this with morph(to_linegraph). Read the Wikipedia entry of line graps and see teh below image for an example. The unmorgh() brings the changes – that is the new group column back to the original network, that we now call grouped_net. For more details, have a look here.\n\nSource: mathworld.wolfram.com\n\ngrouped_net = bristol_wrangled %&gt;%\n  morph(to_linegraph) %&gt;%\n  mutate(group = group_louvain()) %&gt;%\n  unmorph()\n\n# A new group column has been added with the community membership\ngrouped_net\n\n# A sfnetwork with 18048 nodes and 12066 edges\n#\n# CRS:  EPSG:4326 \n#\n# An undirected multigraph with 6705 components with spatially explicit edges\n#\n# A tibble: 18,048 × 2\n                     x     bc\n           &lt;POINT [°]&gt;  &lt;dbl&gt;\n1  (-2.460661 51.5015)     0 \n2 (-2.521586 51.51787) 11802.\n3 (-2.546315 51.54446)     0 \n4 (-2.552245 51.40075)  7013 \n5 (-2.516866 51.51245)  5907.\n6  (-2.51898 51.51272) 35002.\n# ℹ 18,042 more rows\n#\n# A tibble: 12,066 × 5\n   from    to weight                                                     x group\n  &lt;int&gt; &lt;int&gt;  &lt;dbl&gt;                                      &lt;LINESTRING [°]&gt; &lt;int&gt;\n1     6     7 219.   (-2.51898 51.51272, -2.518938 51.51293, -2.518937 51…    19\n2    17    18   5.23              (-2.528247 51.50576, -2.528179 51.50578)    19\n3    24    25 428.   (-2.550685 51.50946, -2.550843 51.50949, -2.551013 5…     6\n# ℹ 12,063 more rows\n\n# There are quite a few communities overall\ngrouped_net %&gt;%\n  activate(\"edges\") %&gt;%\n  pull(group) %&gt;%\n  unique() %&gt;%\n  length()\n\n[1] 6748\n\ngrouped_net %&gt;%\n  activate(\"edges\") %&gt;%\n  st_as_sf() %&gt;%                                     # If you remember, we used this above.\n  transmute(group = as.factor(group)) %&gt;%            # We turn community membership to a factor.\n  filter(group %in% c(1:15)) %&gt;%                     # Only plotting the first 15 communities.\n  ggplot() +\n  geom_sf(aes(col = group), lwd = 4) +               # This plots the communities ...\n  geom_sf(data = st_as_sf(bristol_wrangled, \"edges\"),# ... and this all the network.\n          col = \"grey\", lwd = 0.5, alpha = 0.4) +\n  theme(legend.position=\"none\") +\n  ggtitle(\"Bristol's street communities\")            # No legend please.\n\n\n\n\n\n\n\n\n\n\n\nTask: Read the routing vigneette of `sfnetworks and apply these techniques in the Bristol street network.",
    "crumbs": [
      "Practicals",
      "Street network analysis practical: networks within cities"
    ]
  },
  {
    "objectID": "src/sim.html",
    "href": "src/sim.html",
    "title": "Spatial interaction modelling",
    "section": "",
    "text": "Some of the materials for this tutorial have been adapted from:\n\nthe Origin-destination data with stplanr manual,\nthe Modelling Population Flows Using Spatial Interaction Models tutorial, and\nOshan (2021)\nLovelace, Nowosad, and Muenchow (2019)\n\n\nlibrary(tidyverse)\nlibrary(geojsonio)\nlibrary(SpatialPosition)\nlibrary(stargazer)\nlibrary(rprojroot)\nlibrary(kableExtra)\nlibrary(sf)\nlibrary(caret)\n\nknitr::opts_chunk$set(include=TRUE, message=FALSE, warning=FALSE)\n\n# This is the project path\npath &lt;- find_rstudio_root_file()",
    "crumbs": [
      "Practicals",
      "Spatial interaction modelling"
    ]
  },
  {
    "objectID": "src/sim.html#resources",
    "href": "src/sim.html#resources",
    "title": "Spatial interaction modelling",
    "section": "",
    "text": "Some of the materials for this tutorial have been adapted from:\n\nthe Origin-destination data with stplanr manual,\nthe Modelling Population Flows Using Spatial Interaction Models tutorial, and\nOshan (2021)\nLovelace, Nowosad, and Muenchow (2019)\n\n\nlibrary(tidyverse)\nlibrary(geojsonio)\nlibrary(SpatialPosition)\nlibrary(stargazer)\nlibrary(rprojroot)\nlibrary(kableExtra)\nlibrary(sf)\nlibrary(caret)\n\nknitr::opts_chunk$set(include=TRUE, message=FALSE, warning=FALSE)\n\n# This is the project path\npath &lt;- find_rstudio_root_file()",
    "crumbs": [
      "Practicals",
      "Spatial interaction modelling"
    ]
  },
  {
    "objectID": "src/sim.html#current-research",
    "href": "src/sim.html#current-research",
    "title": "Spatial interaction modelling",
    "section": "Current research",
    "text": "Current research\nAs an introduction, see here some a recent research project we did, which used spatial interaction type of modelling to predict interregional trade flow, which web data (Tranos, Carrascal-Incera, and Willis 2022).",
    "crumbs": [
      "Practicals",
      "Spatial interaction modelling"
    ]
  },
  {
    "objectID": "src/sim.html#commuting-data-and-networks",
    "href": "src/sim.html#commuting-data-and-networks",
    "title": "Spatial interaction modelling",
    "section": "Commuting data and networks",
    "text": "Commuting data and networks\nThis the same data and the same data preparation we did for the network analysis practical. Please follow the below workflow, which you should already be familiar with. Once the data preperation is done, we will model these commuting flows.\nFor this tutorial we will use travel to work data from the 2011 UK Census. The data is available online, but it requires an academic login. After you log in, download the WU03UK element, save the .csv on your working directory under a /data directory and unzip it. We will use the:\n\nLocation of usual residence and place of work by method of travel to work\n\nfor\n\nCensus Merged local authority districts in England and Wales, Council areas in Scotland, Local government districts in Northern Ireland.\n\nThe below code loads the data.\n\npath.data &lt;- paste0(path, \"/data/wu03uk_v3/wu03uk_v3.csv\")\ncommuting &lt;- read_csv(path.data)\ncommuting\n\n# A tibble: 110,162 × 14\n   `Area of usual residence` `Area of workplace` All categories: Method of tra…¹\n   &lt;chr&gt;                     &lt;chr&gt;                                         &lt;dbl&gt;\n 1 95AA                      95AA                                           9465\n 2 95AA                      95BB                                            107\n 3 95AA                      95CC                                             42\n 4 95AA                      95DD                                           1485\n 5 95AA                      95EE                                             35\n 6 95AA                      95FF                                             18\n 7 95AA                      95GG                                           4538\n 8 95AA                      95HH                                            139\n 9 95AA                      95II                                            282\n10 95AA                      95JJ                                            108\n# ℹ 110,152 more rows\n# ℹ abbreviated name: ¹​`All categories: Method of travel to work`\n# ℹ 11 more variables: `Work mainly at or from home` &lt;dbl&gt;,\n#   `Underground, metro, light rail, tram` &lt;dbl&gt;, Train &lt;dbl&gt;,\n#   `Bus, minibus or coach` &lt;dbl&gt;, Taxi &lt;dbl&gt;,\n#   `Motorcycle, scooter or moped` &lt;dbl&gt;, `Driving a car or van` &lt;dbl&gt;,\n#   `Passenger in a car or van` &lt;dbl&gt;, Bicycle &lt;dbl&gt;, `On foot` &lt;dbl&gt;, …\n\n\nYou might have observe some weird codes (OD0000001, OD0000002, OD0000003 and OD0000004). With some simple Google searching we can find the 2011 Census Origin-Destination Data User Guide, which indicates that these codes do not refer to local authorities:\n\nOD0000001 = Mainly work at or from home\nOD0000002 = Offshore installation\nOD0000003 = No fixed place\nOD0000004 = Outside UK\n\nFor the sake of simplicity we will remove these non-geographical nodes.\nnon.la &lt;- c(\"OD0000001\", \"OD0000002\", \"OD0000003\", \"OD0000004\")\ncommuting &lt;- commuting %&gt;% \n  filter(!`Area of workplace` %in% non.la)\ncheck the %in% operator.\nNow let’s do some clean-up of the commuting data frame. Let’s remind ourselves how the data look like\nWe are keeping the English and Wales local authorities by keeping the observations with a local authority code starting from E (for England) and W (for Wales).\n\ncommuting &lt;- commuting %&gt;% filter(startsWith(`Area of usual residence`, \"E\") |\n                                  startsWith(`Area of usual residence`, \"W\")) %&gt;% \n                           filter(startsWith(`Area of workplace`, \"E\") |\n                                  startsWith(`Area of workplace`, \"W\")) %&gt;% \n  glimpse()\n\nRows: 93,034\nColumns: 14\n$ `Area of usual residence`                  &lt;chr&gt; \"E41000001\", \"E41000001\", \"…\n$ `Area of workplace`                        &lt;chr&gt; \"E41000001\", \"E41000002\", \"…\n$ `All categories: Method of travel to work` &lt;dbl&gt; 20777, 1591, 534, 3865, 433…\n$ `Work mainly at or from home`              &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Underground, metro, light rail, tram`     &lt;dbl&gt; 6, 1, 0, 1, 0, 0, 0, 0, 0, …\n$ Train                                      &lt;dbl&gt; 26, 32, 0, 49, 11, 0, 0, 0,…\n$ `Bus, minibus or coach`                    &lt;dbl&gt; 1922, 140, 21, 167, 7, 0, 0…\n$ Taxi                                       &lt;dbl&gt; 527, 11, 4, 20, 1, 0, 0, 0,…\n$ `Motorcycle, scooter or moped`             &lt;dbl&gt; 107, 6, 6, 23, 4, 0, 0, 0, …\n$ `Driving a car or van`                     &lt;dbl&gt; 11788, 1225, 448, 3144, 360…\n$ `Passenger in a car or van`                &lt;dbl&gt; 1965, 99, 36, 365, 33, 0, 0…\n$ Bicycle                                    &lt;dbl&gt; 593, 13, 1, 29, 2, 0, 0, 0,…\n$ `On foot`                                  &lt;dbl&gt; 3789, 60, 16, 60, 15, 0, 0,…\n$ `Other method of travel to work`           &lt;dbl&gt; 54, 4, 2, 7, 0, 0, 0, 0, 0,…\n\n\nWe can also see we many rows we dropped with glimpse().\nIt is very important to distinguish between intra- and inter-local authority flows. In network analysis terms, these are the values we find on the diagonal of an adjacency matrix and refer to the commuting flows within a specific local authority or between different ones. For this exercise we are dropping the intra-local authority flows. Although not used here, we also create a new object with the intra-local authority flows.\n\ncommuting.intra &lt;- commuting %&gt;%\n  filter(`Area of usual residence` == `Area of workplace`)\ncommuting &lt;- commuting %&gt;%\n  filter(`Area of usual residence` != `Area of workplace`) %&gt;% \n  glimpse()\n\nRows: 92,688\nColumns: 14\n$ `Area of usual residence`                  &lt;chr&gt; \"E41000001\", \"E41000001\", \"…\n$ `Area of workplace`                        &lt;chr&gt; \"E41000002\", \"E41000003\", \"…\n$ `All categories: Method of travel to work` &lt;dbl&gt; 1591, 534, 3865, 433, 5, 2,…\n$ `Work mainly at or from home`              &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Underground, metro, light rail, tram`     &lt;dbl&gt; 1, 0, 1, 0, 0, 0, 0, 0, 0, …\n$ Train                                      &lt;dbl&gt; 32, 0, 49, 11, 0, 0, 0, 0, …\n$ `Bus, minibus or coach`                    &lt;dbl&gt; 140, 21, 167, 7, 0, 0, 0, 1…\n$ Taxi                                       &lt;dbl&gt; 11, 4, 20, 1, 0, 0, 0, 0, 0…\n$ `Motorcycle, scooter or moped`             &lt;dbl&gt; 6, 6, 23, 4, 0, 0, 0, 0, 0,…\n$ `Driving a car or van`                     &lt;dbl&gt; 1225, 448, 3144, 360, 5, 2,…\n$ `Passenger in a car or van`                &lt;dbl&gt; 99, 36, 365, 33, 0, 0, 0, 0…\n$ Bicycle                                    &lt;dbl&gt; 13, 1, 29, 2, 0, 0, 0, 0, 0…\n$ `On foot`                                  &lt;dbl&gt; 60, 16, 60, 15, 0, 0, 0, 0,…\n$ `Other method of travel to work`           &lt;dbl&gt; 4, 2, 7, 0, 0, 0, 0, 0, 0, …\n\n\nPlease note the constant use of glimpse() to keep control of how many observations we have and check if we missed anything.\nAlso, take a note of the commuting object, which includes multiple types of commuting flows. Therefore, we will build \\(3\\) different networks:\n\none for all the commuting flows\none only for train flows\none only for bicycle flows.\n\n\ncommuting.all &lt;- commuting %&gt;%\n  select(`Area of usual residence`,\n                `Area of workplace`,\n                `All categories: Method of travel to work`) %&gt;%\n  rename(o = `Area of usual residence`,     # Area of usual residence is annoyingly\n         d = `Area of workplace`,           # long, so I am renaiming theses columns\n         weight = `All categories: Method of travel to work`)\n\n# just FYI this is how you could have achieved the same output using base R\n# instead of dplyr of the tidyverse ecosystem\n# commuting.all &lt;- commuting[,1:3]\n# names(commuting.all)[1] &lt;- \"o\"\n# names(commuting.all)[2] &lt;- \"d\"\n# names(commuting.all)[3] &lt;- \"weight\"\n\ncommuting.train &lt;- commuting %&gt;%\n  select(`Area of usual residence`,\n         `Area of workplace`,\n         `All categories: Method of travel to work`,\n         `Train`) %&gt;%\n  rename(o = `Area of usual residence`,\n         d = `Area of workplace`,\n         weight = `All categories: Method of travel to work`) %&gt;%\n  # The below code drops all the lines with 0 train flows in order to exclude\n  # these edges from the network.\n  filter(Train!=0)\n\ncommuting.bicycle &lt;- commuting %&gt;%\n  select(`Area of usual residence`,\n                `Area of workplace`,\n                `All categories: Method of travel to work`,\n                `Bicycle`) %&gt;%\n  rename(o = `Area of usual residence`,\n         d = `Area of workplace`,\n         weight = `All categories: Method of travel to work`) %&gt;%\n  # The below code drops all the lines with 0 bicycle flows in order to exclude\n  # these edges from the network.\n  filter(Bicycle!=0)\n\nUnless you know the local authority codes by hard, it might be useful to also add the corresponding local authority names. These can be easily obtained from the ONS. The below code directly downloads a GeoJSON file with the local authorities in England and Wales. If you don’t know what a GeoJSON file is, have a look here. Boundary data can also be obtained by UK Data Service.\nFor the time being we are only interested in the local authority names and codes. We will use the spatial object later.\nTip: the below code downloads the GeoJSON file over the web. If you want to run the code multiple times, it might be faster to download the file ones, save it on your hard drive and the point this location to st_read().\n\nla &lt;-st_read(\"https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/CMLAD_Dec_2011_SGCB_GB_2022/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson\")\nglimpse(la) \n\nla.names &lt;- as.data.frame(la) %&gt;% \n  select(cmlad11cd, cmlad11nm)    # all we need is the LA names and codes",
    "crumbs": [
      "Practicals",
      "Spatial interaction modelling"
    ]
  },
  {
    "objectID": "src/sim.html#spatial-interaction-modelling",
    "href": "src/sim.html#spatial-interaction-modelling",
    "title": "Spatial interaction modelling",
    "section": "Spatial interaction modelling",
    "text": "Spatial interaction modelling\nLet’s now move to model these flows. If you remember the basic Gravity model is defined as following:\n\\[T_{ij} = k \\displaystyle \\frac{V_i^\\lambda M_j^\\alpha}{D_{ij}^\\beta}\\]\nAnd if we take the logarithms of both sides of the equation we can transform the Gravity model to something which looks like a linear model:\n\\[lnT_{ij} = lnk + \\lambda lnV_i + \\alpha lnM_j - \\beta lnD_{ij}\\]\nThe above transformed equation can be estimated as a linear model if we assume that \\(y = lnT_{ij}\\), \\(c = lnk\\), \\(x_1 = lnV_i\\), \\(a_1 = \\lambda\\) etc. Hence, we can use OLS to estimate the following:\n\\[lnT_{ij} = lnk + \\lambda lnV_i + \\alpha lnM_j - \\beta lnD_{ij} + e_{ij}\\]\nThis is what is known as the log-linear or log-normal transformation.\nThere are a number of issues with such an approach though. Most importantly, our dependent variable is not continuous, but instead a discrete, positive variable (there are no flows of -324.56 people!). Therefore we need to employ an appropriate estimator and this is what the Poisson regression does. Briefly, if we exponentiate both sides, the above equation can be written as:\n\\[T_{ij} = e^{lnk + \\lambda lnV_i + \\alpha lnM_j - \\beta lnD_{ij}}\\] The above is in the form of the Poisson regression. So, we are interested in modelling not the mean \\(T_{ij}\\) drawn from a normally distributed \\(T\\), but, instead, the mean \\(T_{ij}\\), which is the average of the all the flows (i.e. counts) between any \\(i\\) and \\(j\\). For more details about the Poisson regression have a look at Roback and Legler (2021). For this practical we will estimate the commuting flows using both OLS and Poisson regressions.\nBut before we get into the estimation we need to build a data frame, which includes all the necessary variables. These are the origin-destination flows \\(T\\) between \\(i\\) and \\(j\\), the distance \\(dist\\) between \\(i\\) and \\(j\\) and the characteristics \\(V\\) and \\(M\\) of origin \\(i\\) and destinations \\(j\\) that we believe push and pull individuals to commute.\n\n# we use the `SpatialPosition` package and the `CreateDistMatrix()` function to\n# calculate a distance matrix for all local authorities,\nla.d &lt;- CreateDistMatrix(la, la, longlat = T)\n\n# we use as column and row name the local authority codes\nrownames(la.d) &lt;- la$cmlad11cd\ncolnames(la.d) &lt;- la$cmlad11cd\n\n# This is a matrix of the distances between *all* local authorities. We then use\n# the function as.data.frame.table() to convert this matrix to a data frame each\n# line of which represents an origin-destination pair.\nla.d &lt;- as.data.frame.table(la.d, responseName = \"value\")\nglimpse(la.d)\n\nRows: 119,716\nColumns: 3\n$ Var1  &lt;fct&gt; E41000001, E41000002, E41000003, E41000004, E41000005, E41000006…\n$ Var2  &lt;fct&gt; E41000001, E41000001, E41000001, E41000001, E41000001, E41000001…\n$ value &lt;dbl&gt; 0.00, 14338.99, 20147.01, 12892.19, 23203.28, 175341.09, 164899.…\n\n# Please note that the elements of the diagonal are present in this distance matrix.\n\nIf you want to check that the distances we are correct, use google maps to calculate the distance between E41000001 (Middlesbrough) and E41000002 (Hartlepool). Remember that the la.d is expressed in meters.\nWhat is missing here? Do you remember the intra-zone commuting flows? E.g. the commuters that live and work in Bristol? We had removed these from the network analysis and visualisation element. Because we don’t have information about the distances of the intra-zone commutes, we will exclude them from this analysis.\n\nla.d &lt;- la.d %&gt;%\n  filter(Var1 != Var2) %&gt;% \n  glimpse()\n\nRows: 119,370\nColumns: 3\n$ Var1  &lt;fct&gt; E41000002, E41000003, E41000004, E41000005, E41000006, E41000007…\n$ Var2  &lt;fct&gt; E41000001, E41000001, E41000001, E41000001, E41000001, E41000001…\n$ value &lt;dbl&gt; 14338.99, 20147.01, 12892.19, 23203.28, 175341.09, 164899.50, 13…\n\n\nWhat we want to do is to match the data frame with all the distances with the commuting flows data frame. To do that we will (1) create a new data frame for the origin-destination pair and (2) match the two data frames.\n\nla.d &lt;- la.d %&gt;% \n  mutate(ij.code = paste(Var1, Var2, sep = \"_\")) %&gt;% \n  glimpse()\n\nRows: 119,370\nColumns: 4\n$ Var1    &lt;fct&gt; E41000002, E41000003, E41000004, E41000005, E41000006, E410000…\n$ Var2    &lt;fct&gt; E41000001, E41000001, E41000001, E41000001, E41000001, E410000…\n$ value   &lt;dbl&gt; 14338.99, 20147.01, 12892.19, 23203.28, 175341.09, 164899.50, …\n$ ij.code &lt;chr&gt; \"E41000002_E41000001\", \"E41000003_E41000001\", \"E41000004_E4100…\n\ncommuting &lt;- commuting %&gt;% \n  mutate(ij.code = paste(`Area of usual residence`,\n                          `Area of workplace`,\n                           sep = \"_\")) %&gt;% \n  glimpse()\n\nRows: 92,688\nColumns: 15\n$ `Area of usual residence`                  &lt;chr&gt; \"E41000001\", \"E41000001\", \"…\n$ `Area of workplace`                        &lt;chr&gt; \"E41000002\", \"E41000003\", \"…\n$ `All categories: Method of travel to work` &lt;dbl&gt; 1591, 534, 3865, 433, 5, 2,…\n$ `Work mainly at or from home`              &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Underground, metro, light rail, tram`     &lt;dbl&gt; 1, 0, 1, 0, 0, 0, 0, 0, 0, …\n$ Train                                      &lt;dbl&gt; 32, 0, 49, 11, 0, 0, 0, 0, …\n$ `Bus, minibus or coach`                    &lt;dbl&gt; 140, 21, 167, 7, 0, 0, 0, 1…\n$ Taxi                                       &lt;dbl&gt; 11, 4, 20, 1, 0, 0, 0, 0, 0…\n$ `Motorcycle, scooter or moped`             &lt;dbl&gt; 6, 6, 23, 4, 0, 0, 0, 0, 0,…\n$ `Driving a car or van`                     &lt;dbl&gt; 1225, 448, 3144, 360, 5, 2,…\n$ `Passenger in a car or van`                &lt;dbl&gt; 99, 36, 365, 33, 0, 0, 0, 0…\n$ Bicycle                                    &lt;dbl&gt; 13, 1, 29, 2, 0, 0, 0, 0, 0…\n$ `On foot`                                  &lt;dbl&gt; 60, 16, 60, 15, 0, 0, 0, 0,…\n$ `Other method of travel to work`           &lt;dbl&gt; 4, 2, 7, 0, 0, 0, 0, 0, 0, …\n$ ij.code                                    &lt;chr&gt; \"E41000001_E41000002\", \"E41…\n\n\nBefore we perform the match, keep a note of how many observations both data frames have in order to check if we loose any observations during the matching. As you can see the commuting data frame has less observations than the la.d one, which includes all the possible origin-destination pairs.\nWhat does it mean? That for some origin-destination pairs there are no commuting flows, which of course makes sense. We need to include these pairs with \\(flow = 0\\) in our data though because the lack of commuting flows is not missing data!\n\ncommuting.si &lt;- full_join(la.d, commuting, by = \"ij.code\") %&gt;% \n  glimpse()\n\nRows: 119,370\nColumns: 18\n$ Var1                                       &lt;fct&gt; E41000002, E41000003, E4100…\n$ Var2                                       &lt;fct&gt; E41000001, E41000001, E4100…\n$ value                                      &lt;dbl&gt; 14338.99, 20147.01, 12892.1…\n$ ij.code                                    &lt;chr&gt; \"E41000002_E41000001\", \"E41…\n$ `Area of usual residence`                  &lt;chr&gt; \"E41000002\", \"E41000003\", \"…\n$ `Area of workplace`                        &lt;chr&gt; \"E41000001\", \"E41000001\", \"…\n$ `All categories: Method of travel to work` &lt;dbl&gt; 990, 558, 2590, 266, 1, 4, …\n$ `Work mainly at or from home`              &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, NA, 0,…\n$ `Underground, metro, light rail, tram`     &lt;dbl&gt; 0, 1, 0, 0, 0, 0, 0, NA, 0,…\n$ Train                                      &lt;dbl&gt; 6, 3, 25, 2, 0, 0, 0, NA, 1…\n$ `Bus, minibus or coach`                    &lt;dbl&gt; 58, 8, 87, 6, 0, 0, 0, NA, …\n$ Taxi                                       &lt;dbl&gt; 1, 2, 4, 0, 0, 0, 0, NA, 0,…\n$ `Motorcycle, scooter or moped`             &lt;dbl&gt; 2, 1, 12, 0, 0, 0, 0, NA, 0…\n$ `Driving a car or van`                     &lt;dbl&gt; 783, 499, 2259, 244, 1, 4, …\n$ `Passenger in a car or van`                &lt;dbl&gt; 73, 26, 154, 10, 0, 0, 0, N…\n$ Bicycle                                    &lt;dbl&gt; 15, 9, 23, 0, 0, 0, 0, NA, …\n$ `On foot`                                  &lt;dbl&gt; 52, 8, 24, 4, 0, 0, 0, NA, …\n$ `Other method of travel to work`           &lt;dbl&gt; 0, 1, 2, 0, 0, 0, 0, NA, 0,…\n\n# Some variables are repetitive or need name change\ncommuting.si &lt;- commuting.si %&gt;% \n  rename(i = Var1,\n         j = Var2,\n         distance = value) %&gt;% \n  select(-`Area of usual residence`,\n         -`Area of workplace`) %&gt;% \n  glimpse()\n\nRows: 119,370\nColumns: 16\n$ i                                          &lt;fct&gt; E41000002, E41000003, E4100…\n$ j                                          &lt;fct&gt; E41000001, E41000001, E4100…\n$ distance                                   &lt;dbl&gt; 14338.99, 20147.01, 12892.1…\n$ ij.code                                    &lt;chr&gt; \"E41000002_E41000001\", \"E41…\n$ `All categories: Method of travel to work` &lt;dbl&gt; 990, 558, 2590, 266, 1, 4, …\n$ `Work mainly at or from home`              &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, NA, 0,…\n$ `Underground, metro, light rail, tram`     &lt;dbl&gt; 0, 1, 0, 0, 0, 0, 0, NA, 0,…\n$ Train                                      &lt;dbl&gt; 6, 3, 25, 2, 0, 0, 0, NA, 1…\n$ `Bus, minibus or coach`                    &lt;dbl&gt; 58, 8, 87, 6, 0, 0, 0, NA, …\n$ Taxi                                       &lt;dbl&gt; 1, 2, 4, 0, 0, 0, 0, NA, 0,…\n$ `Motorcycle, scooter or moped`             &lt;dbl&gt; 2, 1, 12, 0, 0, 0, 0, NA, 0…\n$ `Driving a car or van`                     &lt;dbl&gt; 783, 499, 2259, 244, 1, 4, …\n$ `Passenger in a car or van`                &lt;dbl&gt; 73, 26, 154, 10, 0, 0, 0, N…\n$ Bicycle                                    &lt;dbl&gt; 15, 9, 23, 0, 0, 0, 0, NA, …\n$ `On foot`                                  &lt;dbl&gt; 52, 8, 24, 4, 0, 0, 0, NA, …\n$ `Other method of travel to work`           &lt;dbl&gt; 0, 1, 2, 0, 0, 0, 0, NA, 0,…\n\n# Let's see if we have any missing values\nsapply(commuting.si, function(x) sum(is.na(x)))\n\n                                       i \n                                       0 \n                                       j \n                                       0 \n                                distance \n                                       0 \n                                 ij.code \n                                       0 \nAll categories: Method of travel to work \n                                   26682 \n             Work mainly at or from home \n                                   26682 \n    Underground, metro, light rail, tram \n                                   26682 \n                                   Train \n                                   26682 \n                   Bus, minibus or coach \n                                   26682 \n                                    Taxi \n                                   26682 \n            Motorcycle, scooter or moped \n                                   26682 \n                    Driving a car or van \n                                   26682 \n               Passenger in a car or van \n                                   26682 \n                                 Bicycle \n                                   26682 \n                                 On foot \n                                   26682 \n          Other method of travel to work \n                                   26682 \n\n\nThere are quite a few. What does it mean? That there are no commuting flows for these origin-destination pairs and,therefore, were excluded from the origin commuting data set we downloaded. So, we are going to replace these \\(NAs\\) with \\(0s\\).\n\ncommuting.si &lt;- commuting.si %&gt;% \n  replace(., is.na(.), 0)\n\nNow let’s bring data for some \\(i\\) and \\(j\\) characteristics that we believe that affect commuting. I have prepared such a small data set from the census, which includes resident population and working populations as push and pull variables. These data have been obtained by nomis.\n\ndata.workplace &lt;- read_csv(\"https://www.dropbox.com/s/0ym88p8quwaiyau/data_workplace.csv?dl=1\")\n\n# Dropbox trick: to use in an .Rmd the link that Dropbox provides to share a file\n# replace dl=0 with dl=1 at the end of the link\n\ndata.resident &lt;- read_csv(\"https://www.dropbox.com/s/09d7v5cm6ov3ioz/data_resident.csv?dl=1\")\n\ncommuting.si &lt;- commuting.si %&gt;% \n  left_join(data.resident, by = c('i' = 'Merging.Local.Authority.Code')) %&gt;% \n  left_join(data.workplace, by = c('j' = 'Merging.Local.Authority.Code')) \n\n\n\n\nQuestion are there any redundant columns? Can you remove them?\n\n\n\nBefore we start modelling these flows, let’s plot our variables.\nggplot(commuting.si, aes(x=distance,\n                         y=`All categories: Method of travel to work`)) +\n  geom_point() +\n  geom_smooth(method=lm)\n\nggplot(commuting.si, aes(x=resident,\n                         y=`All categories: Method of travel to work`)) +\n  geom_point() +\n  geom_smooth(method=lm)\n\nggplot(commuting.si, aes(x=workplace,\n                         y=`All categories: Method of travel to work`)) +\n  geom_point() +\n  geom_smooth(method=lm)\n\n\n\n\nQuestion What do you take from these graphs?\n\n\n\nLet’s try now to model these flows. We will start with a simple OLS to estimate the above specifications. Please pay attention to the small trick we did. Because there are non-materialised origin-destination pairs (i.e. with 0 flows), we added a small value (\\(0.5\\)) in the dependent variable. Otherwise we will receive an error as the logarithm of \\(0\\) is not defined.\n\nols.model &lt;- lm(log(`All categories: Method of travel to work`+.5) ~\n                  log(distance) + log(resident) + log(workplace),\n                data = commuting.si)\n\n# To see the model output you can use the summary() function.\nsummary(ols.model)\n\n\nCall:\nlm(formula = log(`All categories: Method of travel to work` + \n    0.5) ~ log(distance) + log(resident) + log(workplace), data = commuting.si)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.2614 -0.7144 -0.0429  0.6430  8.6140 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)     7.967357   0.106119   75.08   &lt;2e-16 ***\nlog(distance)  -1.839401   0.004610 -399.01   &lt;2e-16 ***\nlog(resident)   0.514034   0.005402   95.16   &lt;2e-16 ***\nlog(workplace)  0.852322   0.005185  164.37   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.104 on 115932 degrees of freedom\n  (4816 observations deleted due to missingness)\nMultiple R-squared:  0.6444,    Adjusted R-squared:  0.6444 \nF-statistic: 7.002e+04 on 3 and 115932 DF,  p-value: &lt; 2.2e-16\n\n\nSo, the OLS regression estimated the four parameters:\n\n\\(lnk = 7.971\\)\n\\(\\beta = -1.840\\)\n\\(\\lambda = 0.514\\)\n\\(\\alpha = -0.852\\)\n\nLet’s estimate now our model using a Poisson regression. Given that we don’t take the logarithm of the dependent variable, there is no need to add \\(0.5\\).\n\nglm.model &lt;- glm((`All categories: Method of travel to work`)~\n                   log(distance) + log(resident) + log(workplace),\n                 family = poisson(link = \"log\"), data = commuting.si)\nsummary(glm.model)\n\n\nCall:\nglm(formula = (`All categories: Method of travel to work`) ~ \n    log(distance) + log(resident) + log(workplace), family = poisson(link = \"log\"), \n    data = commuting.si)\n\nCoefficients:\n                 Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)    11.6641641  0.0091381    1276   &lt;2e-16 ***\nlog(distance)  -1.8164748  0.0002803   -6480   &lt;2e-16 ***\nlog(resident)   0.3179209  0.0005444     584   &lt;2e-16 ***\nlog(workplace)  0.8191649  0.0004200    1951   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 71855219  on 115935  degrees of freedom\nResidual deviance: 14104694  on 115932  degrees of freedom\n  (4816 observations deleted due to missingness)\nAIC: 14447299\n\nNumber of Fisher Scoring iterations: 6\n\n\nThe following parameter1 have been estimated\n\n\\(lnk = 11.635\\)\n\\(\\beta = -1.816\\)\n\\(\\lambda = 0.319\\)\n\\(\\alpha = 0.820\\)\n\nAs you can see the differences are rather small.\nThe stargazer package I use below creates elegant regression tables. Replace type = \"html\" with type = \"text\" to have be able to read the results using the .Rmd document. the “html” option is useful for when knitting the script to an .html document.\nstargazer(ols.model, glm.model, type = \"html\")\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\nlog(All categories: Method of travel to work + 0.5)\n\n\n(All categories: Method of travel to work)\n\n\n\n\n\n\nOLS\n\n\nPoisson\n\n\n\n\n\n\n(1)\n\n\n(2)\n\n\n\n\n\n\n\n\nlog(distance)\n\n\n-1.839***\n\n\n-1.816***\n\n\n\n\n\n\n(0.005)\n\n\n(0.0003)\n\n\n\n\n\n\n\n\n\n\n\n\nlog(resident)\n\n\n0.514***\n\n\n0.318***\n\n\n\n\n\n\n(0.005)\n\n\n(0.001)\n\n\n\n\n\n\n\n\n\n\n\n\nlog(workplace)\n\n\n0.852***\n\n\n0.819***\n\n\n\n\n\n\n(0.005)\n\n\n(0.0004)\n\n\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n7.967***\n\n\n11.664***\n\n\n\n\n\n\n(0.106)\n\n\n(0.009)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n115,936\n\n\n115,936\n\n\n\n\nR2\n\n\n0.644\n\n\n\n\n\n\nAdjusted R2\n\n\n0.644\n\n\n\n\n\n\nLog Likelihood\n\n\n\n\n-7,223,645.000\n\n\n\n\nAkaike Inf. Crit.\n\n\n\n\n14,447,299.000\n\n\n\n\nResidual Std. Error\n\n\n1.104 (df = 115932)\n\n\n\n\n\n\nF Statistic\n\n\n70,016.600*** (df = 3; 115932)\n\n\n\n\n\n\n\n\n\n\nNote:\n\n\np&lt;0.1; p&lt;0.05; p&lt;0.01\n\n\n\n\n\n\nQuestion Can you interpret the regression results?",
    "crumbs": [
      "Practicals",
      "Spatial interaction modelling"
    ]
  },
  {
    "objectID": "src/sim.html#this-is-not-a-machine-learning-introduction",
    "href": "src/sim.html#this-is-not-a-machine-learning-introduction",
    "title": "Spatial interaction modelling",
    "section": "This is not a Machine Learning introduction…",
    "text": "This is not a Machine Learning introduction…\n… but maybe a sneak preview of the philosophy behind modern data science approaches to answer computational problems. We are using the caret package to:\n\nsplit our data into test and training\ntrain a lm()and a glm() model using the training data set\nuse the estimated models to make out-of-sample predictions using the test data set\nplot the results and the relevant metrics and choose the best model.\n\nThis is obviously an oversimplification, but it provides a good preview of machine learning frameworks.\nIt is worth browsing the caret package.\nThe below will take a few minutes!\ncommuting.si &lt;- commuting.si %&gt;% \n  drop_na() \n\nset.seed(3456)\ntrainIndex &lt;- createDataPartition(commuting.si$`All categories: Method of travel to work`, p = .8, \n                                  list = FALSE, \n                                  times = 1)\ndim(trainIndex)\n[1] 92751 1\ndim(commuting.si)\n[1] 115936 22\ncommuting.si.train &lt;- commuting.si[ trainIndex,]\ncommuting.si.test  &lt;- commuting.si[-trainIndex,]\n\nmodel.lm &lt;- train(`All categories: Method of travel to work` ~\n                    distance + resident + workplace,\n                    data = commuting.si,\n                    method = \"lm\")\n\npredictions.lm &lt;- predict(model.lm, commuting.si.test)\nlm.metrics &lt;- postResample(pred = predictions.lm, obs = commuting.si.test$`All categories: Method of travel to work`) \n\nmodel.glm &lt;- train(`All categories: Method of travel to work` ~\n                    distance + resident + workplace,\n                    data = commuting.si,\n                    method = \"glmnet\",\n                    family = \"poisson\", \n                    na.action = na.omit)\n\npredictions.glm &lt;- predict(model.glm, commuting.si.test)\nglm.metrics &lt;- postResample(pred = predictions.glm, obs = commuting.si.test$`All categories: Method of travel to work`) \nbind_rows(lm.metrics, glm.metrics) %&gt;% \n  mutate(Model = c(\"lm\", \"glm\")) %&gt;% \n  select(Model, Rsquared, RMSE, MAE) %&gt;% \n  kable(digits = 3)\n\n\n\nModel\nRsquared\nRMSE\nMAE\n\n\n\n\nlm\n0.067\n824.067\n214.033\n\n\nglm\n0.422\n687.811\n112.527\n\n\n\n\n\n\nQuestion Which model would you choose?\n\n\n\npredict.lm.plot &lt;- bind_cols(commuting.si.test$`All categories: Method of travel to work`, predictions.lm) %&gt;% \n  rename(y = '...1',\n         y_hat = '...2') %&gt;% \n  ggplot(aes(x=y, y=y_hat)) + geom_point() + ggtitle(\"lm\") + \n  theme(plot.title = element_text(hjust = 0.5))\n\npredict.glm.plot &lt;- bind_cols(commuting.si.test$`All categories: Method of travel to work`, predictions.glm) %&gt;% \n  rename(y = '...1',\n         y_hat = '...2') %&gt;% \n  ggplot(aes(x=y, y=y_hat)) + geom_point() + ggtitle(\"glm\") + \n  theme(plot.title = element_text(hjust = 0.5))\n\nlibrary(patchwork)\npredict.lm.plot + predict.glm.plot",
    "crumbs": [
      "Practicals",
      "Spatial interaction modelling"
    ]
  },
  {
    "objectID": "src/syllabus.html",
    "href": "src/syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Cities, a very very brief introduction\nWhy do cities exist? One cannot study, analyse and model cities and systems of cities unless they know their fundamental attributes, and the reasons why cities have been developed at the first instance.\nSmart cities, urban big data, digital twins and other buzz terms\n\nPractical: APIs and urban data\n\nHow do digital technologies change cities? How does their usage actually enables citizens to act as sensors? And, how do these changes affect urban research? We will first approach these issues from a theoretical perspective and then utilise such free and open urban data using APIs.\nNetworks: an introduction\nNetworks are everywhere! After this lecture you will hopefully start seeing them.\nNetwork analysis practical: networks of cities\nStreet network analysis practical: networks within cities\nThese two practical sessions will put into practise your newly acquired network understanding of cities.\n\n\n\n\nReading week\nNetwork science, urban laws and scaling\n\nPractical: Build and compare models\n\nMoving from network analysis to network science with clear urban applications.\nMethods in transport geography\nSame methods, different facets of urban research. This part of the unit will allow you to apply your network skills to answer transport related questions. It will also make the transition from networks to flows.\n\n\n\n\n\n\n\n\n\n\nSpatial interaction modelling\nYou ve’learned how to analyse networks, now you can learn how to analyse and model flows. Do you see the parallel?\n\n\n\nAccessibility\nDiversity in cities\nWhy is diversity important in cities and how do we measure it?",
    "crumbs": [
      "Content",
      "Syllabus"
    ]
  },
  {
    "objectID": "src/transport_geography.html#transport-geography-quantitative-dimension",
    "href": "src/transport_geography.html#transport-geography-quantitative-dimension",
    "title": "Methods in transport geography",
    "section": "Transport geography: quantitative dimension",
    "text": "Transport geography: quantitative dimension\n\nEmpirical data\nData analytics\nApplied science: improve the efficiency of movements / spatial constraints\nWhy in this unit?",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#transport-geography-key-elements",
    "href": "src/transport_geography.html#transport-geography-key-elements",
    "title": "Methods in transport geography",
    "section": "Transport geography: key elements",
    "text": "Transport geography: key elements\n\nDistance\nAccessibility: the capacity of a location to be reached by, or to reach different locations\nSpatial interaction: movement of people, freight or information between an origin and destination\nTransportation and land use models",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#graph-theory-aka-network-analysis",
    "href": "src/transport_geography.html#graph-theory-aka-network-analysis",
    "title": "Methods in transport geography",
    "section": "Graph theory, aka network analysis",
    "text": "Graph theory, aka network analysis\n\n\n\n\nAbstraction\nRepresent the structure not the appearance\nTerminal = node\nNode (vertex)\nLink (edge)\nSub-graph - Loop (buckle)\nPlanar graph\nNon-planar graph\nCycle, circuit\nTree \\((e = v-1)\\)\n\n\n\n  Source: Rodrigue (2020)",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#graph-theory-aka-network-analysis-1",
    "href": "src/transport_geography.html#graph-theory-aka-network-analysis-1",
    "title": "Methods in transport geography",
    "section": "Graph theory, aka network analysis",
    "text": "Graph theory, aka network analysis\n\n\\(\\beta = e / v\\), where \\(e\\) is the number of links & \\(v\\) the number of nodes\n\\(Gamma\\) AKA network density (number of liks / maximum number of links)\n\nplanar: \\(\\gamma = \\frac{e}{3(v-2)}\\)\nnon-planar: \\(\\gamma = \\frac{2e}{v(v-1)}\\)",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#graph-theory-aka-network-analysis-2",
    "href": "src/transport_geography.html#graph-theory-aka-network-analysis-2",
    "title": "Methods in transport geography",
    "section": "Graph theory, aka network analysis",
    "text": "Graph theory, aka network analysis\n\nDegree centrality\nEccentricity: the distance from a given node to the farthest node from it in the network\nShimbel index, or nodal accessibility, or Fareness (see Lecture 3\n\n\\(c_𝑖= \\sum_j d_{ij}\\)\nThis is a purely topological accessibility metric, remember this for later.",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#closeness-centrality-from-lecture-3",
    "href": "src/transport_geography.html#closeness-centrality-from-lecture-3",
    "title": "Methods in transport geography",
    "section": "Closeness centrality (from Lecture 3)",
    "text": "Closeness centrality (from Lecture 3)\n\nWhich node has the shortest distance to other nodes\nInstead of focusing on the number of links, the focus turns to the network distances\nDifferent definitions:\nCloseness, \\(c_{i} = 1/\\sum_{j} d_{ij}\\)\nFareness, \\(c_{i} = \\sum_{j} d_{ij}\\)\nigraph calculates closeness",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#the-gini-coefficient",
    "href": "src/transport_geography.html#the-gini-coefficient",
    "title": "Methods in transport geography",
    "section": "The Gini coefficient",
    "text": "The Gini coefficient\n\n\n\nInequality measure\n\n0: perfect equality\n1 :perfect inequality\n\nOrdered X and Y, cumulative percentage\nMostly used for income inequalities, but can be more widely used\n\\(Gini = A / (A + B)\\)\n\n\n\n Source: Rodrigue (2020)",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#section",
    "href": "src/transport_geography.html#section",
    "title": "Methods in transport geography",
    "section": "",
    "text": "Source: Rodrigue (2020)",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#section-1",
    "href": "src/transport_geography.html#section-1",
    "title": "Methods in transport geography",
    "section": "",
    "text": "Source: Rodrigue (2020)",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#the-location-quotient-coefficient",
    "href": "src/transport_geography.html#the-location-quotient-coefficient",
    "title": "Methods in transport geography",
    "section": "The Location Quotient Coefficient",
    "text": "The Location Quotient Coefficient\n\nDegree of concentration of a certain activities\nVery common for regional analysis too\n\\(M_{ti}\\) is the traffic of a merchandise \\(t\\) at a terminal \\(i\\)\n\\(Mi\\) is the traffic of all merchandise at a terminal \\(i\\)\n\\(M_{t}\\) is the total of all merchandises of type \\(t\\) for all terminals, and\n\\(M\\) is the total of all types of merchandises for all terminals",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#the-location-quotient-coefficient-1",
    "href": "src/transport_geography.html#the-location-quotient-coefficient-1",
    "title": "Methods in transport geography",
    "section": "The Location Quotient Coefficient",
    "text": "The Location Quotient Coefficient\n\n\n  \n\\(LQ = \\frac{\\frac{M_{it}}{M_i}}{\\frac{M_t}{M}}\\)\n\n\n\\(LQ &lt;1\\): traffic of merchandise \\(t\\) in terminal \\(i\\) is under-represented compared to the same merchandise in all terminals\n\\(LQ = 1\\) traffic of merchandise \\(t\\) in terminal \\(i\\) is proportional to its participation to total traffic\n\\(LQ &gt; 1\\) traffic of merchandise \\(t\\) in a terminal \\(i\\) is preponderant in total traffic.",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#section-2",
    "href": "src/transport_geography.html#section-2",
    "title": "Methods in transport geography",
    "section": "",
    "text": "Employment in manufacturing sector\n Source: ONS",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#spatial-interactions-and-the-gravity-model",
    "href": "src/transport_geography.html#spatial-interactions-and-the-gravity-model",
    "title": "Methods in transport geography",
    "section": "Spatial interactions and the gravity model",
    "text": "Spatial interactions and the gravity model\n\nA spatial interaction is a realised movement of people, freight or information between an origin and a destination\nIt is a transport demand/supply relationship expressed over geographical space.",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#spatial-interactions-and-the-gravity-model-1",
    "href": "src/transport_geography.html#spatial-interactions-and-the-gravity-model-1",
    "title": "Methods in transport geography",
    "section": "Spatial interactions and the gravity model",
    "text": "Spatial interactions and the gravity model\nConditions for spatial interaction to be materialised\n\nComplementarity\nIntervening opportunity\nTransferability",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#section-3",
    "href": "src/transport_geography.html#section-3",
    "title": "Methods in transport geography",
    "section": "",
    "text": "Source: Rodrigue (2020)",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#spatial-interactions-and-the-gravity-model-2",
    "href": "src/transport_geography.html#spatial-interactions-and-the-gravity-model-2",
    "title": "Methods in transport geography",
    "section": "Spatial interactions and the gravity model",
    "text": "Spatial interactions and the gravity model\n\nOrigin/destination matrices\nVery large matrices\nMissing data/0s\nEstimation of flows",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#spatial-interactions-and-the-gravity-model-3",
    "href": "src/transport_geography.html#spatial-interactions-and-the-gravity-model-3",
    "title": "Methods in transport geography",
    "section": "Spatial interactions and the gravity model",
    "text": "Spatial interactions and the gravity model\n\\(T_{ij} = f(V_i, W_j, S_{ij})\\)\n\nFlows are a function of the attributes of the locations of origin, the attributes of the locations of destination and the friction of distance between the concerned origins and the destinations",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#spatial-interactions-and-the-gravity-model-4",
    "href": "src/transport_geography.html#spatial-interactions-and-the-gravity-model-4",
    "title": "Methods in transport geography",
    "section": "Spatial interactions and the gravity model",
    "text": "Spatial interactions and the gravity model\n\\(T_{ij} = f(V_i, W_j, S_{ij})\\)\n\n\\(T_{ij}\\): Interaction between location \\(i\\) (origin) and location \\(j\\) (destination)\n\\(V_i\\): Attributes of the location of origin \\(i\\) (e.g. population, number of jobs available, industrial output, GDP); push factors; the potential of origins",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#spatial-interactions-and-the-gravity-model-5",
    "href": "src/transport_geography.html#spatial-interactions-and-the-gravity-model-5",
    "title": "Methods in transport geography",
    "section": "Spatial interactions and the gravity model",
    "text": "Spatial interactions and the gravity model\n\\(T_{ij} = f(V_i, W_j, S_{ij})\\)\n\n\\(W_j\\): Attributes of the location of destination \\(j\\), pull factors; attractiveness of destinations\n\\(S_{ij}\\): Attributes of separation between \\(i\\) and \\(j\\) (e.g. distance, transport costs, or travel time); cost of overcoming the separation between origins and destinations",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#spatial-interactions-and-the-gravity-model-6",
    "href": "src/transport_geography.html#spatial-interactions-and-the-gravity-model-6",
    "title": "Methods in transport geography",
    "section": "Spatial interactions and the gravity model",
    "text": "Spatial interactions and the gravity model\n\\(T_{ij} = k\\frac{V_i^\\lambda W_j^\\alpha}{d_{ij}^\\beta}\\)\n\n\\(\\beta\\): transport friction parameter\n\\(\\lambda\\): Potential to generate movements\n\\(\\alpha\\): Potential to attract movements",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#calculate-flows-naive",
    "href": "src/transport_geography.html#calculate-flows-naive",
    "title": "Methods in transport geography",
    "section": "1. Calculate flows (naive)",
    "text": "1. Calculate flows (naive)\n\\(T_{ij} = k\\frac{V_i^\\lambda W_j^\\alpha}{d_{ij}^\\beta}\\)\n\nKnown: \\(V\\), \\(W\\), and \\(d\\)\nDefine: \\(\\lambda=1\\), \\(\\alpha=1\\), \\(\\beta=2\\), and \\(k=0.00001\\)\nThese are some standard results from past empirical studies\nBig unknown: \\(T\\)\nExample from Tranos, Gheasi, and Nijkamp (2015)",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#calculate-flows-naive-1",
    "href": "src/transport_geography.html#calculate-flows-naive-1",
    "title": "Methods in transport geography",
    "section": "1. Calculate flows (naive)",
    "text": "1. Calculate flows (naive)",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#calculate-flows-naive-2",
    "href": "src/transport_geography.html#calculate-flows-naive-2",
    "title": "Methods in transport geography",
    "section": "1. Calculate flows (naive)",
    "text": "1. Calculate flows (naive)\n\nFairly good estimation of reality for such an oversimplified model, but…\n… not good enough.",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#estimate-lambda-alpha-beta-and-k",
    "href": "src/transport_geography.html#estimate-lambda-alpha-beta-and-k",
    "title": "Methods in transport geography",
    "section": "2. Estimate \\(\\lambda\\), \\(\\alpha\\), \\(\\beta\\) and \\(k\\)",
    "text": "2. Estimate \\(\\lambda\\), \\(\\alpha\\), \\(\\beta\\) and \\(k\\)\n\nKnown: \\(T\\), \\(V\\), \\(W\\), \\(d\\) and \\(k\\)\nEstiamte: \\(\\lambda=1\\), \\(\\alpha=1\\), and \\(\\beta=2\\)\nWhy? To understand the effect of distance, pull and push factors\nHow? Regression",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#estimate-lambda-alpha-beta-and-k-1",
    "href": "src/transport_geography.html#estimate-lambda-alpha-beta-and-k-1",
    "title": "Methods in transport geography",
    "section": "2. Estimate \\(\\lambda\\), \\(\\alpha\\), \\(\\beta\\) and \\(k\\)",
    "text": "2. Estimate \\(\\lambda\\), \\(\\alpha\\), \\(\\beta\\) and \\(k\\)\n\n\n\\(T_{ij} = k\\frac{V_i^\\lambda W_j^\\alpha}{d_{ij}^\\beta}\\)\nLook up properties of logarithms, e.g. here\n\\(T_{ij} = kV_i^\\lambda W_j^\\alpha d_{ij}^{-\\beta}\\)\n\\(ln T_{ij} = ln (kV_i^\\lambda W_j^\\alpha d_{ij}^{-\\beta})\\)\n\\(ln T_{ij} = lnk + lnV_i^\\lambda + ln W_j^\\alpha + lnd_{ij}^{-\\beta}\\)\n\\(\\color{red}{ln T_{ij}} = \\color{blue}{lnk} + \\lambda \\color{green}{lnV_i} + \\alpha \\color{orange}{ln W_j} -\\beta \\color{purple}{lnd_{ij}}\\)\n\\(\\color{red}{y} = \\color{blue}{c} + \\lambda \\color{green}{x_1} + \\alpha \\color{orange}{x_2} + \\beta \\color{purple}{x_3}\\)\nMultivariate linear regression",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#estimate-lambda-alpha-beta-and-k-2",
    "href": "src/transport_geography.html#estimate-lambda-alpha-beta-and-k-2",
    "title": "Methods in transport geography",
    "section": "2. Estimate \\(\\lambda\\), \\(\\alpha\\), \\(\\beta\\) and \\(k\\)",
    "text": "2. Estimate \\(\\lambda\\), \\(\\alpha\\), \\(\\beta\\) and \\(k\\)",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#estimate-lambda-alpha-beta-and-k-3",
    "href": "src/transport_geography.html#estimate-lambda-alpha-beta-and-k-3",
    "title": "Methods in transport geography",
    "section": "2. Estimate \\(\\lambda\\), \\(\\alpha\\), \\(\\beta\\) and \\(k\\)",
    "text": "2. Estimate \\(\\lambda\\), \\(\\alpha\\), \\(\\beta\\) and \\(k\\)\n\n\\(c = lnk = 13.84\\)\n\\(\\lambda = lnV_i = 0.727\\)\n\\(\\alpha = lnW_j = 0.464\\)\n\\(\\beta = lnd_{ij} = -0.624\\)\nWhat did we learn?\nHow can we use these coefficients",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#estimate-accessibility-indicators",
    "href": "src/transport_geography.html#estimate-accessibility-indicators",
    "title": "Methods in transport geography",
    "section": "3. Estimate accessibility indicators",
    "text": "3. Estimate accessibility indicators\n\nThe potential of opportunities for interaction\nEase of spatial interaction\nAttractiveness of a node in a network taking into account the mass of other nodes and the costs to reach those nodes via the network",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#estimate-accessibility-indicators-1",
    "href": "src/transport_geography.html#estimate-accessibility-indicators-1",
    "title": "Methods in transport geography",
    "section": "3. Estimate accessibility indicators",
    "text": "3. Estimate accessibility indicators\nDifferent typologies (Holl 2007)\n\nNetwork access\n\ndistance to access the network\ntravel opportunities\n\nTravel cost measures\n\nnetwork access + distance/time travelled on the network\n\nMarket potential accessibility\n\ndestinations at greater distance provide diminishing opportunities",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#estimate-accessibility-indicators-2",
    "href": "src/transport_geography.html#estimate-accessibility-indicators-2",
    "title": "Methods in transport geography",
    "section": "3. Estimate accessibility indicators",
    "text": "3. Estimate accessibility indicators\n\n\\(Acc_{i} = \\sum_j \\frac{W_j}{d_{ij}^2}\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSource:Rodrigue (2020)",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#estimate-accessibility-indicators-3",
    "href": "src/transport_geography.html#estimate-accessibility-indicators-3",
    "title": "Methods in transport geography",
    "section": "3. Estimate accessibility indicators",
    "text": "3. Estimate accessibility indicators\n\nGeographical indicator\nSpatial structure (e.g. distance) and economic activities (e.g. population)\nThe potential for interaction\nOpportunities",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/transport_geography.html#references",
    "href": "src/transport_geography.html#references",
    "title": "Methods in transport geography",
    "section": "References",
    "text": "References\n\n\n\n\n\n\n\n\nBruinsma, Frank, and Pieter Rietveld. 1998. “The Accessibility of European Cities: Theoretical Framework and Comparison of Approaches.” Environment and Planning A 30 (3): 499–521.\n\n\nHoll, Adelheid. 2007. “Twenty Years of Accessibility Improvements. The Case of the Spanish Motorway Building Programme.” Journal of Transport Geography 15 (4): 286–97. https://doi.org/https://doi.org/10.1016/j.jtrangeo.2006.09.003.\n\n\nRodrigue, Jean-Paul. 2020. The Geography of Transport Systems. Routledge. https://transportgeography.org/.\n\n\nTranos, Emmanouil, Masood Gheasi, and Peter Nijkamp. 2015. “International Migration: A Global Complex Network.” Environment and Planning B: Planning and Design 42 (1): 4–22.",
    "crumbs": [
      "Lectures",
      "Methods in transport geography"
    ]
  },
  {
    "objectID": "src/why_cities.html#why-should-we-care-about-cities",
    "href": "src/why_cities.html#why-should-we-care-about-cities",
    "title": "Cities, a very very brief introduction",
    "section": "Why should we care about cities?",
    "text": "Why should we care about cities?\nThe most overused figure (Nations 2009)…\n\nIn 2009 for the first time in history 2009 more than 50% of the population lived within cities\n\n… but still true!\nSource of:\n\neconomic growth,\ninnovation - technology - …,\nbut also - pandemics (!)",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#why-should-we-care-about-cities-1",
    "href": "src/why_cities.html#why-should-we-care-about-cities-1",
    "title": "Cities, a very very brief introduction",
    "section": "Why should we care about cities?",
    "text": "Why should we care about cities?\n\nStrong links historically between (McCann and Acs 2011):\n\nGlobalisation\nUrbanisation\nIndustrialisation",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#why-should-we-care-about-cities-2",
    "href": "src/why_cities.html#why-should-we-care-about-cities-2",
    "title": "Cities, a very very brief introduction",
    "section": "Why should we care about cities?",
    "text": "Why should we care about cities?\n\n\n\n\n\n\n\nTremendous growth\nNot the same everywhere",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#urban-analytics-and-city-science",
    "href": "src/why_cities.html#urban-analytics-and-city-science",
    "title": "Cities, a very very brief introduction",
    "section": "Urban analytics and city science",
    "text": "Urban analytics and city science\n\nUnderstand cities and how they change\nUse critically and effectively urban data\nUnderstand and master methodological tools\nSupport urban policy making",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#different-terms",
    "href": "src/why_cities.html#different-terms",
    "title": "Cities, a very very brief introduction",
    "section": "Different terms",
    "text": "Different terms\n\nAcademics love inventing new terms\nUrban science, city science, urban analytics, urban geography, geographic data science, urban data science, complexity science, TheNextBigThing\nHave a look: Batty (2019)",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#why-do-cities-exist",
    "href": "src/why_cities.html#why-do-cities-exist",
    "title": "Cities, a very very brief introduction",
    "section": "Why do cities exist?",
    "text": "Why do cities exist?\n\nAn economist’s answer: to economise!\nBecause of economies of scale and agglomeration economies",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#scale-economies",
    "href": "src/why_cities.html#scale-economies",
    "title": "Cities, a very very brief introduction",
    "section": "Scale economies",
    "text": "Scale economies\n\nAKA increasing returns to scale, or\nAKA economies of scale\nBusiness enterprises become more efﬁcient at large scales of operation\nMore output per unit of input than at smaller scales\n➔ larger enterprises\nWithin firms",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#scale-economies-1",
    "href": "src/why_cities.html#scale-economies-1",
    "title": "Cities, a very very brief introduction",
    "section": "Scale economies",
    "text": "Scale economies",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#scale-economies-2",
    "href": "src/why_cities.html#scale-economies-2",
    "title": "Cities, a very very brief introduction",
    "section": "Scale economies",
    "text": "Scale economies\nIncreasing returns to scale\n\n\ndouble ALL the inputs ➔\nmore than double output",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#scale-economies-3",
    "href": "src/why_cities.html#scale-economies-3",
    "title": "Cities, a very very brief introduction",
    "section": "Scale economies",
    "text": "Scale economies",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#scale-economies-4",
    "href": "src/why_cities.html#scale-economies-4",
    "title": "Cities, a very very brief introduction",
    "section": "Scale economies",
    "text": "Scale economies\nConstant returns to scale:\n\n\ndouble ALL the inputs ➔\ndouble output",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#scale-economies-5",
    "href": "src/why_cities.html#scale-economies-5",
    "title": "Cities, a very very brief introduction",
    "section": "Scale economies",
    "text": "Scale economies",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#scale-economies-6",
    "href": "src/why_cities.html#scale-economies-6",
    "title": "Cities, a very very brief introduction",
    "section": "Scale economies",
    "text": "Scale economies\nDecreasing returns to scale\n\n\ndouble ALL the inputs ➔\nless than double output",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#scale-economies-7",
    "href": "src/why_cities.html#scale-economies-7",
    "title": "Cities, a very very brief introduction",
    "section": "Scale economies",
    "text": "Scale economies",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#scale-economies-8",
    "href": "src/why_cities.html#scale-economies-8",
    "title": "Cities, a very very brief introduction",
    "section": "Scale economies",
    "text": "Scale economies\nHow do they affect space?\n\n\nClustering of workers near factories\nClustering of services for workers near factories\nThe company town example\nIllustrative",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#agglomeration-economies",
    "href": "src/why_cities.html#agglomeration-economies",
    "title": "Cities, a very very brief introduction",
    "section": "Agglomeration economies",
    "text": "Agglomeration economies\n\nAKA external economies of scale\nExternal to the firm\nVery important for cities\nTwo types:\n\nLocalisation economies AKA Marshallian externalities\nUrbanisation economies AKA Jacobian externalities",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#localization-economies",
    "href": "src/why_cities.html#localization-economies",
    "title": "Cities, a very very brief introduction",
    "section": "Localization Economies",
    "text": "Localization Economies\n\nWithin a group of firms of the same industry\nClustered together at the same place\nWhy?\n\nInformation exchange\nLabour mobility\nSpecialist services\n\n\nExamples: Silicon Valley (micro-electronics), The City of London (finance), Detroit and Michigan (automobile), Seattle (aerospace), etc.",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#localization-economies-1",
    "href": "src/why_cities.html#localization-economies-1",
    "title": "Cities, a very very brief introduction",
    "section": "Localization Economies",
    "text": "Localization Economies",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#urbanization-economies",
    "href": "src/why_cities.html#urbanization-economies",
    "title": "Cities, a very very brief introduction",
    "section": "Urbanization economies",
    "text": "Urbanization economies\n\nFirms across different sectors\nClustered together at the same place (Jane Jacobs 1961)\nA city\nWhy?\n\nSupport services to firms experiencing internal and localization economies\nClustering\nIncreased local factor prices\nEconomies of scale",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#agglomeration-economies-1",
    "href": "src/why_cities.html#agglomeration-economies-1",
    "title": "Cities, a very very brief introduction",
    "section": "Agglomeration economies",
    "text": "Agglomeration economies\n\nDiversity vs. specialization\nInternal economies of scale (firm specific)\nLocalization economies (industry specific)\nUrbanization economies (city specific)",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#the-sources-of-agglomeration",
    "href": "src/why_cities.html#the-sources-of-agglomeration",
    "title": "Cities, a very very brief introduction",
    "section": "The sources of agglomeration",
    "text": "The sources of agglomeration\n\nKnowledge spillovers (Marshall 1890)\n\n\nInteractions between employees of different firms\nProximity\nTacit knowledge\nMutual trading of information",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#the-sources-of-agglomeration-economies",
    "href": "src/why_cities.html#the-sources-of-agglomeration-economies",
    "title": "Cities, a very very brief introduction",
    "section": "The sources of agglomeration economies",
    "text": "The sources of agglomeration economies\n\nNon-traded local inputs\n\n\nEfficient provision of specialist inputs\nInfrastructure",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#the-sources-of-agglomeration-economies-1",
    "href": "src/why_cities.html#the-sources-of-agglomeration-economies-1",
    "title": "Cities, a very very brief introduction",
    "section": "The sources of agglomeration economies",
    "text": "The sources of agglomeration economies\n\nLocal skilled labour pool\n\n\nSufficient quantity of labour to respond to market changes\nSpecialised labour / cost of training",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#the-sources-of-agglomeration-economies-2",
    "href": "src/why_cities.html#the-sources-of-agglomeration-economies-2",
    "title": "Cities, a very very brief introduction",
    "section": "The sources of agglomeration economies",
    "text": "The sources of agglomeration economies\n\nProcesses of learning, sharing and matching (Duranton and Puga 2004)\nClustering:\n\nInteraction\nDynamic\n➔ reduces knowledge and information transaction cost\n\nHigher profitability for firms within the cluster than those outside the cluster",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#agglomeration-economies-pecuniary-vs.-technological",
    "href": "src/why_cities.html#agglomeration-economies-pecuniary-vs.-technological",
    "title": "Cities, a very very brief introduction",
    "section": "Agglomeration economies: pecuniary vs. technological",
    "text": "Agglomeration economies: pecuniary vs. technological\n\nPecuniary ➔ input cost reduction\nmake inputs cheaper in larger cities\nTechnological ➔ raise productivity\nmake inputs more productive in larger cities\n\n\nBased on Brueckner (2011)",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#agglomeration-economies-a-citique",
    "href": "src/why_cities.html#agglomeration-economies-a-citique",
    "title": "Cities, a very very brief introduction",
    "section": "Agglomeration economies: a citique",
    "text": "Agglomeration economies: a citique\nBounded rationality (Simon 1955, 1966)\n\nInformation about space and location in limited\nRelocation issues, the ability of a rational decision is limited\nRelocation cost",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#why-cities-do-exist",
    "href": "src/why_cities.html#why-cities-do-exist",
    "title": "Cities, a very very brief introduction",
    "section": "Why cities do exist?",
    "text": "Why cities do exist?\nTo economise!\nIn other words, collocation of people and firms increases efficiency.",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#cities-as-complex-system",
    "href": "src/why_cities.html#cities-as-complex-system",
    "title": "Cities, a very very brief introduction",
    "section": "Cities as complex system",
    "text": "Cities as complex system\n\n\n\n\n\n\n\n\nHeterogeneity\nDifferences in information, profession, culture, race, ethnicity, and economic status\n\n\nInterconnectivity\nInterdependence between people, organizations, and infrastructure in networks\n\n\nScaling\nSelf-similar economies of scale per capita in material infrastructure and increasing returns to socioeconomic activity\n\n\nCircular causality\nInterdependence dynamics between socioeconomic activities, institutions, and services\n\n\nEvolution\nOpen-ended change supported by new information, investment, and collective action\n\n\n\n Source: Bettencourt (2021)",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#cities-as-complex-system-scale",
    "href": "src/why_cities.html#cities-as-complex-system-scale",
    "title": "Cities, a very very brief introduction",
    "section": "Cities as complex system: scale",
    "text": "Cities as complex system: scale",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#urban-models-looking-into-cities",
    "href": "src/why_cities.html#urban-models-looking-into-cities",
    "title": "Cities, a very very brief introduction",
    "section": "Urban models: looking into cities",
    "text": "Urban models: looking into cities\nThe Burgess model\n\n Source: bbc.co.uk",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#urban-models-looking-into-cities-1",
    "href": "src/why_cities.html#urban-models-looking-into-cities-1",
    "title": "Cities, a very very brief introduction",
    "section": "Urban models: looking into cities",
    "text": "Urban models: looking into cities\nThe Burgess model\n\nCreated by E.W. Burgess in 1925\nDeveloped in rings, reflecting waves of immigrants\nUsed Chicago as his model\nMost European cities developed this way (pre-automobile)",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#urban-models-looking-into-cities-2",
    "href": "src/why_cities.html#urban-models-looking-into-cities-2",
    "title": "Cities, a very very brief introduction",
    "section": "Urban models: looking into cities",
    "text": "Urban models: looking into cities\nThe Von Thünen model (The isolated state in 1826)\n\nBasic idea: Agricultural land uses follow predictable patterns around cities, which are the markets for the farm goods\nGoods with greatest demand and having the highest transport costs should be produced closest to the city",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#urban-models-looking-into-cities-3",
    "href": "src/why_cities.html#urban-models-looking-into-cities-3",
    "title": "Cities, a very very brief introduction",
    "section": "Urban models: looking into cities",
    "text": "Urban models: looking into cities\n\n Source: Coe, Kelly, and Yeung (2019)",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#urban-models-systems-of-cities",
    "href": "src/why_cities.html#urban-models-systems-of-cities",
    "title": "Cities, a very very brief introduction",
    "section": "Urban models: systems of cities",
    "text": "Urban models: systems of cities\nWhy aren’t we all clustered in a huge city?\n\n\nDiseconomies of scale\nAKA Decreasing returns to scale\n\n Source: Bettencourt (2021)",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#urban-models-systems-of-cities-1",
    "href": "src/why_cities.html#urban-models-systems-of-cities-1",
    "title": "Cities, a very very brief introduction",
    "section": "Urban models: systems of cities",
    "text": "Urban models: systems of cities\nCentral place theory\n\n Source: Wood and Roberts (2012) adapted from Christaller (1966)",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#urban-models-systems-of-cities-2",
    "href": "src/why_cities.html#urban-models-systems-of-cities-2",
    "title": "Cities, a very very brief introduction",
    "section": "Urban models: systems of cities",
    "text": "Urban models: systems of cities\nCentral place theory\n\nSpatial distribution of cities and towns in Southern Germany\nInductive instead of deductive\nHierarchy of 3 different goods (3, 2, 1), 3 different market areas and 3 different levels of urban centres\nAssumptions: homogeneous land and equal\nTransport possibilities in all directions",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#urban-models-systems-of-cities-3",
    "href": "src/why_cities.html#urban-models-systems-of-cities-3",
    "title": "Cities, a very very brief introduction",
    "section": "Urban models: systems of cities",
    "text": "Urban models: systems of cities\nThe core-periphery model\n\n\n\n2 region model\nTransport cost steadily fall over time\nAs transport cost ⟱, separation of production and consumption becomes feasible\n⤇ Core-periphery\n\n\n\n\n Source: Krugman and Elizondo (1996)",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#summary",
    "href": "src/why_cities.html#summary",
    "title": "Cities, a very very brief introduction",
    "section": "Summary",
    "text": "Summary\n\nUrban structure is not random\nMultiple scales: individual, neighbourhoods, cities, urban networks\nCities are complex adaptive systems",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/why_cities.html#references",
    "href": "src/why_cities.html#references",
    "title": "Cities, a very very brief introduction",
    "section": "References",
    "text": "References\n\n\n\n\n\n\n\n\nBatty, Michael. 2019. “Urban Analytics Defined.” Environment and Planning B: Urban Analytics and City Science 46 (3): 403–5. https://doi.org/10.1177/2399808319839494.\n\n\nBettencourt, Luı́s MA. 2021. “Introduction to Urban Science: Evidence and Theory of Cities as Complex Systems.”\n\n\nBrueckner, Jan K. 2011. Lectures on Urban Economics. MIT press.\n\n\nChristaller, Walter. 1966. Central Places in Southern Germany. Vol. 10. Prentice-Hall.\n\n\nCoe, Neil M, Philip F Kelly, and Henry WC Yeung. 2019. Economic Geography: A Contemporary Introduction. John Wiley & Sons.\n\n\nDuranton, Gilles, and Diego Puga. 2004. “Micro-Foundations of Urban Agglomeration Economies.” Handbook of Regional and Urban Economics 4: 2063–2117.\n\n\nJane Jacobs. 1961. The Death and Life of Great American Cities. Vintage Books.\n\n\nKrugman, Paul, and Raul Livas Elizondo. 1996. “Trade Policy and the Third World Metropolis.” Journal of Development Economics 49 (1): 137–50.\n\n\nMarshall, Alfred. 1890. “Principles of Economics: An Introductory Volume.” The Macmillan Press Ltd.\n\n\nMcCann, Philip, and Zoltan J Acs. 2011. “Globalization: Countries, Cities and Multinationals.” Regional Studies 45 (1): 17–32.\n\n\nNations, United. 2009. Urban and Rural Areas. New Yorl: United Nations.\n\n\nSimon, Herbert A. 1955. “A Behavioral Model of Rational Choice.” The Quarterly Journal of Economics 69 (1): 99–118.\n\n\n———. 1966. “Theories of Decision-Making in Economics and Behavioural Science.” In Surveys of Economic Theory, 1–28. Springer.\n\n\nWood, Andrew, and Susan Roberts. 2012. Economic Geography: Places, Networks and Flows. Routledge.",
    "crumbs": [
      "Lectures",
      "Cities, a very very brief introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#outline",
    "href": "src/intro_networks.html#outline",
    "title": "Networks",
    "section": "Outline",
    "text": "Outline\n\nWhy networks?\nNetwork Data\nNetwork Measures",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#why-networks",
    "href": "src/intro_networks.html#why-networks",
    "title": "Networks",
    "section": "Why Networks",
    "text": "Why Networks\n\n\n\nNetworks are everywhere!\nThe focus is not on individual attributes, but…\n… on who is connected to whom.\nAKA networks are about relationships\nInteractions, or\nflows between nodes (actors, places, …)\nSocial Network Analysis, Graph Theory, Network Science and Complexity Theory",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#scale-and-levels",
    "href": "src/intro_networks.html#scale-and-levels",
    "title": "Networks",
    "section": "Scale and levels",
    "text": "Scale and levels\n\n\n\n\n\n\n\n\n\n\n\nLevel (aggregation of linkages and nodes)\n\nGeographical scale (network boundary)\n\n\n\n\n\n\n\n\n1 – Local\n2 – Regional\n3 – Global\n\n\nA -- Macro\nCities\nCity as a whole entity\nCentral place system (Christaller 1966)\n\n\n\nB -- Meso\nFirms\nClusters (Porter 2000)\nRegional economic intergration and functional polycentrism (e.g. Scott 2001: Boschma 2005)\nGlobal inter-firm network (e.g. Cohen 1981)\n\n\nC – Micro\nPeople\nA neighbourly economic suport support network (e.g. Wellman 1979)\nA local labou market (e.g. Granovetter 1974)\nThe global economic elite (Sassen 1991)\n\n\n\n\n Source: (Neal and Rozenblat 2021)",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#section-1",
    "href": "src/intro_networks.html#section-1",
    "title": "Networks",
    "section": "",
    "text": "Source: Facebook.com",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#section-2",
    "href": "src/intro_networks.html#section-2",
    "title": "Networks",
    "section": "",
    "text": "Source: http://www.opte.org/",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#directed-non-weighted-networks",
    "href": "src/intro_networks.html#directed-non-weighted-networks",
    "title": "Networks",
    "section": "1. Directed, non-weighted networks1",
    "text": "1. Directed, non-weighted networks1\n\n\nBasic elements: nodes and links\nData is not arranged in vectors but on square matrices\n1 and 0 represent the existence of a link\n\nAdjacency matrix\n\n\n\n\nA\nB\nC\nD\n\n\nA\n0\n1\n1\n1\n\n\nB\n0\n0\n1\n0\n\n\nC\n0\n0\n0\n1\n\n\nD\n0\n0\n0\n0\n\n\n\n\nHanneman and Riddle (2005) is a very useful online source for most of the concepts presented here.",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#directed-non-weighted-networks-1",
    "href": "src/intro_networks.html#directed-non-weighted-networks-1",
    "title": "Networks",
    "section": "1. Directed, non-weighted networks",
    "text": "1. Directed, non-weighted networks\n\n\nBasic elements: nodes and links\nData is not arranged in vectors but on square matrices\n1 and 0 represent the existence of a link\nEdge list\n\n\n\ni\nj\nw\n\n\n\n\nA\nB\n1\n\n\nA\nC\n1\n\n\nA\nD\n1\n\n\nB\nC\n1\n\n\nC\nD\n1\n\n\nD\nC\n1",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#directed-non-weighted-networks-2",
    "href": "src/intro_networks.html#directed-non-weighted-networks-2",
    "title": "Networks",
    "section": "1. Directed, non-weighted networks",
    "text": "1. Directed, non-weighted networks\n\n\nBasic elements: nodes and links\nData is not arranged in vectors but on square matrices\n1 and 0 represent the existence of a link",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#undirected-non-weighted-networks",
    "href": "src/intro_networks.html#undirected-non-weighted-networks",
    "title": "Networks",
    "section": "2. Undirected, non-weighted networks",
    "text": "2. Undirected, non-weighted networks\n\n\nSymmetrical ties\nSymmetrical adjacency matrices\n\nAdjacency matrix\n\n\n\n\nA\nB\nC\nD\n\n\nA\n0\n1\n1\n1\n\n\nB\n1\n0\n1\n0\n\n\nC\n1\n1\n0\n1\n\n\nD\n1\n0\n1\n0",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#undirected-non-weighted-networks-1",
    "href": "src/intro_networks.html#undirected-non-weighted-networks-1",
    "title": "Networks",
    "section": "2. Undirected, non-weighted networks",
    "text": "2. Undirected, non-weighted networks\n\nEdge list\n\n\n\ni\nj\nw\n\n\n\n\nA\nB\n1\n\n\nA\nC\n1\n\n\nA\nD\n1\n\n\nB\nA\n1\n\n\nB\nC\n1\n\n\nC\nA\n1\n\n\nC\nB\n1\n\n\nC\nD\n1\n\n\nD\nA\n1\n\n\nD\nC\n1",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#undirected-non-weighted-networks-2",
    "href": "src/intro_networks.html#undirected-non-weighted-networks-2",
    "title": "Networks",
    "section": "2. Undirected, non-weighted networks",
    "text": "2. Undirected, non-weighted networks",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#directed-weighted-networks",
    "href": "src/intro_networks.html#directed-weighted-networks",
    "title": "Networks",
    "section": "3. Directed, weighted networks",
    "text": "3. Directed, weighted networks\n\nLinks are characterized by weights i.e. strength of a friendship, commuting flows, trade flows\nAdjacency matrix\n\n\n\n\nA\nB\nC\nD\n\n\nA\n0\n3\n1\n5\n\n\nB\n0\n0\n1\n0\n\n\nC\n0\n0\n0\n6\n\n\nD\n0\n0\n7\n0",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#directed-weighted-networks-1",
    "href": "src/intro_networks.html#directed-weighted-networks-1",
    "title": "Networks",
    "section": "3. Directed, weighted networks",
    "text": "3. Directed, weighted networks\n\nLinks are characterized by weights i.e. strength of a friendship, commuting flows, trade flows\nEdge list\n\n\n\ni\nj\nw\n\n\n\n\nA\nB\n3\n\n\nA\nC\n1\n\n\nA\nD\n5\n\n\nB\nC\n1\n\n\nC\nD\n6\n\n\nD\nC\n7",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#directed-weighted-networks-2",
    "href": "src/intro_networks.html#directed-weighted-networks-2",
    "title": "Networks",
    "section": "3. Directed, weighted networks",
    "text": "3. Directed, weighted networks",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#undirected-weighted-networks",
    "href": "src/intro_networks.html#undirected-weighted-networks",
    "title": "Networks",
    "section": "4. Undirected, weighted networks",
    "text": "4. Undirected, weighted networks\n\nLinks are characterized by weights i.e. strength of a friendship, commuting flows, trade flows…\n… and also have symmetrical matrices\nAdjacency matrix\n\n\n\n\nA\nB\nC\nD\n\n\nA\n0\n3\n1\n5\n\n\nB\n3\n0\n1\n0\n\n\nC\n1\n1\n0\n6\n\n\nD\n5\n0\n6\n0",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#undirected-weighted-networks-1",
    "href": "src/intro_networks.html#undirected-weighted-networks-1",
    "title": "Networks",
    "section": "4. Undirected, weighted networks",
    "text": "4. Undirected, weighted networks\n\nEdge list\n\n\n\ni\nj\nw\n\n\n\n\nA\nB\n3\n\n\nA\nC\n1\n\n\nA\nD\n5\n\n\nB\nC\n1\n\n\nB\nA\n3\n\n\nC\nD\n6\n\n\nC\nA\n1\n\n\nC\nB\n1\n\n\nD\nC\n6\n\n\nD\nA\n5",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#undirected-weighted-networks-2",
    "href": "src/intro_networks.html#undirected-weighted-networks-2",
    "title": "Networks",
    "section": "4. Undirected, weighted networks",
    "text": "4. Undirected, weighted networks",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#network-data-summary",
    "href": "src/intro_networks.html#network-data-summary",
    "title": "Networks",
    "section": "Network data: summary",
    "text": "Network data: summary\n\n\n4 possible combinations of network data\n\nDirectional and non-weighted (or binary)\nDirectional and weighted\nUndirected and non-weighted (or binary)\nUndirected and weighted\n\nNodes, aka vertices (singular: vertex)\nLinks or ties, edges or arcs\nConventional data: actors and attributes\nNetwork data: actors and their relations",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#network-size",
    "href": "src/intro_networks.html#network-size",
    "title": "Networks",
    "section": "Network size",
    "text": "Network size\n\n\\(k\\) numbers of nodes\nmaximum number of links:\n\n\\(k(k-1)\\) for directed\n\\(k(k-1)/2\\) for undirected networks",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#network-density",
    "href": "src/intro_networks.html#network-density",
    "title": "Networks",
    "section": "Network density",
    "text": "Network density\n\nNumbers of links / Max. number of links:\n\n\\(L/k(k-1)\\) for directed\n\\(2L/k(k-1)\\) for undirected networks",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#network-distance",
    "href": "src/intro_networks.html#network-distance",
    "title": "Networks",
    "section": "Network distance",
    "text": "Network distance\nA macro characteristic of the network ➔ efficiency\n\n\nMultiple paths between two nodes\nA walk is a path in which each node and each link are used once\nGeodesic distance: the number of relations in the shortest possible path from one node to another\nDiameter: the longest geodesic distance in the network",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#reciprocity",
    "href": "src/intro_networks.html#reciprocity",
    "title": "Networks",
    "section": "Reciprocity",
    "text": "Reciprocity\n\nThe extent to which ties are reciprocated (if A ➔ B, then B ➔ A)\nAt least two different approaches:\n\nReciprocated ties / maximum number of ties (0.33)\nReciprocated ties / number of existing ties (0.5)",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#assortativity",
    "href": "src/intro_networks.html#assortativity",
    "title": "Networks",
    "section": "Assortativity",
    "text": "Assortativity\n\nA bias towards connections between network nodes with similar network characteristics\nAssortativity coefficient is the Pearson correlation coefficient of the degree centralities of pairs of connected nodes",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#clustering",
    "href": "src/intro_networks.html#clustering",
    "title": "Networks",
    "section": "Clustering",
    "text": "Clustering\n\nLarge proportion of links are highly “clustered” into local neighborhoods ➔ small worlds\n\\(C_{i} = 2 E_{i} / k_{i}(k_{i}-1)\\)\nthe ratio between the number of edges \\(E_{i}\\) that exist among \\(i\\)’s nearest neighbors and the maximum number of these edges, where \\(k_{i}\\) is the number of nodes in the sub-net\nAKA Transitivity",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#community-detection",
    "href": "src/intro_networks.html#community-detection",
    "title": "Networks",
    "section": "Community detection",
    "text": "Community detection\n\nExploratory process\nThe emphasis is not on the behaviour of single entities, but on the information of who is connected to whom\n“The problem of community detection requires the partition of a network into communities of densely connected nodes, with the nodes belonging to different communities being only sparsely connected” (Blondel et al. 2008, 2)\nClusters of nodes with dense connections inside the clusters, but not between the clusters",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#community-detection-1",
    "href": "src/intro_networks.html#community-detection-1",
    "title": "Networks",
    "section": "Community detection",
    "text": "Community detection\n\n\nLouvain method (Blondel et al. 2008): maximization of links inside the communities (modularity)\nNetwork of communities extracted from a Belgian mobile phone network\nNode size proportional to the number of individuals in the community\nColour represents the main language spoken in the community (red for French and green for Dutch)\nWhat does the intermediate community of mixed colours between the two main clusters represent?",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#community-detection-2",
    "href": "src/intro_networks.html#community-detection-2",
    "title": "Networks",
    "section": "Community detection",
    "text": "Community detection\n\nRedrawing the Map of Great Britain from a Network of Human Interactions (Ratti et al. 2010)\n\nDo administrative boundaries follow the more natural ways people interact across space?\nLarge telecommunications database in Great Britain.",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#degree-centrality-for-undirected-networks",
    "href": "src/intro_networks.html#degree-centrality-for-undirected-networks",
    "title": "Networks",
    "section": "Degree centrality for undirected networks",
    "text": "Degree centrality for undirected networks\n\nThe simplest centrality measure\nWho has the most connections?\nThe number of links per node\n\\(D_{i} = \\sum_{j}^{N} x_{ij}= \\sum_{j}^{N} x_{ji}\\)",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#degree-centrality-for-directed-networks",
    "href": "src/intro_networks.html#degree-centrality-for-directed-networks",
    "title": "Networks",
    "section": "Degree centrality for directed networks",
    "text": "Degree centrality for directed networks\n\nIndegree: the number of ingoing links per node \\(D_{i} = \\sum_{j}^{N} x_{ji}\\)\nOutdegree: the number of outgoing links per node \\(D_{i} = \\sum_{j}^{N} x_{ij}\\)",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#degree-centrality-for-weighted-networks",
    "href": "src/intro_networks.html#degree-centrality-for-weighted-networks",
    "title": "Networks",
    "section": "Degree centrality for weighted networks",
    "text": "Degree centrality for weighted networks\n\\[D_{i} = \\sum_{j}^{N} w_{ij} = \\sum_{j}^{N} w_{ji}\\]\n\\(w\\) denotes the weight of the links",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#degree-cenralities",
    "href": "src/intro_networks.html#degree-cenralities",
    "title": "Networks",
    "section": "Degree cenralities",
    "text": "Degree cenralities",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#degree-cenralities-1",
    "href": "src/intro_networks.html#degree-cenralities-1",
    "title": "Networks",
    "section": "Degree cenralities",
    "text": "Degree cenralities",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#degree-cenralities-2",
    "href": "src/intro_networks.html#degree-cenralities-2",
    "title": "Networks",
    "section": "Degree cenralities",
    "text": "Degree cenralities",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#degree-cenralities-3",
    "href": "src/intro_networks.html#degree-cenralities-3",
    "title": "Networks",
    "section": "Degree cenralities",
    "text": "Degree cenralities\n\n\n\n\nA\nB\nC\nD\nout-degree\n\n\n\n\nA\n0\n3\n1\n5\n9\n\n\nB\n3\n0\n1\n0\n4\n\n\nC\n2\n4\n0\n9\n15\n\n\nD\n7\n0\n5\n0\n12\n\n\nin-degree\n12\n7\n7\n14",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#closeness-centrality",
    "href": "src/intro_networks.html#closeness-centrality",
    "title": "Networks",
    "section": "Closeness centrality",
    "text": "Closeness centrality\n\nWhich node has the shortest distance to other nodes\nInstead of focusing on the number of links, the focus turns to the network distances\nDifferent definitions:\nCloseness, \\(c_{i} = 1/\\sum_{j} d_{ij}\\)\nFareness, \\(c_{i} = \\sum_{j} d_{ij}\\)\nigraph calculates closeness",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#betweenness-centrality",
    "href": "src/intro_networks.html#betweenness-centrality",
    "title": "Networks",
    "section": "Betweenness centrality",
    "text": "Betweenness centrality\n\nWhich nodes control information flows\nHow many geodesic links between actors \\(i\\) and \\(j\\) contain actor \\(k\\)?\n\n\\(B_{k} = \\sum_{i \\not=j \\not=k} \\frac{g_{ij}(k)}{g_{ij}}\\)",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#eigenvector-centrality",
    "href": "src/intro_networks.html#eigenvector-centrality",
    "title": "Networks",
    "section": "Eigenvector centrality",
    "text": "Eigenvector centrality\n\nNot all connections are equal\nConnections to more central vertices are more important than connections to less central ones\nIt is still important to have a large number of connections, but a node with fewer and more important connections will end up being more central than a node with more and less important links\nGlobal structure of the network: both direct links and shortest paths\nEigenvector of the adjacency matrix associated with the larger eigenvalue",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#pagerank-centrality",
    "href": "src/intro_networks.html#pagerank-centrality",
    "title": "Networks",
    "section": "PageRank centrality",
    "text": "PageRank centrality\n\nThe basis of Google search engine\nWebpages that link to \\(i\\), and have high PageRank scores themselves, should be given more weight.\nWebpages that link to \\(i\\), but link to a lot of other webpages in general, should be given less weight.\nDirected networks\nIterative algorithm",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#centralities",
    "href": "src/intro_networks.html#centralities",
    "title": "Networks",
    "section": "Centralities",
    "text": "Centralities\n\nWhile easy to identify in simple graphs, much more difficult in large, complex networks\nVarious other centrality measures exist (e.g. see igraph)\nHighlight different aspects of the distribution and sources of power",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#other-types-of-networks",
    "href": "src/intro_networks.html#other-types-of-networks",
    "title": "Networks",
    "section": "Other types of networks",
    "text": "Other types of networks\n\nTwo mode networks\nMultilayer\nDynamic\nSpatial\n\nSee also Light and Moody (2020)",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/intro_networks.html#references",
    "href": "src/intro_networks.html#references",
    "title": "Networks",
    "section": "References",
    "text": "References\n\n\n\n\n\n\n\n\nBlondel, Vincent D, Jean-Loup Guillaume, Renaud Lambiotte, and Etienne Lefebvre. 2008. “Fast Unfolding of Communities in Large Networks.” Journal of Statistical Mechanics: Theory and Experiment 2008 (10): P10008.\n\n\nChristaller, Walter. 1966. Central Places in Southern Germany. Vol. 10. Prentice-Hall.\n\n\nHanneman, Robert A, and Mark Riddle. 2005. “Introduction to Social Network Methods.” University of California Riverside. http://faculty.ucr.edu/~hanneman/nettext/.\n\n\nLight, Ryan, and James Moody. 2020. The Oxford Handbook of Social Networks. Oxford University Press.\n\n\nNeal, Zachary P, and Céline Rozenblat. 2021. Handbook of Cities and Networks. Edward Elgar Publishing.\n\n\nRatti, Carlo, Stanislav Sobolevsky, Francesco Calabrese, Clio Andris, Jonathan Reades, Mauro Martino, Rob Claxton, and Steven H Strogatz. 2010. “Redrawing the Map of Great Britain from a Network of Human Interactions.” PloS One 5 (12): e14248.\n\n\nTranos, Emmanouil, Masood Gheasi, and Peter Nijkamp. 2015. “International Migration: A Global Complex Network.” Environment and Planning B: Planning and Design 42 (1): 4–22.",
    "crumbs": [
      "Lectures",
      "Networks: an introduction"
    ]
  },
  {
    "objectID": "src/causality.html",
    "href": "src/causality.html",
    "title": "Causal design and urban policy evaluation: Potential outcomes & Geo RDD practical",
    "section": "",
    "text": "library(dplyr)\nlibrary(tidyr)\nlibrary(sf)         # for spatial operations\nlibrary(rdrobust)   # for tools and graphical output for regression discontinuity designs\nlibrary(units)      # for dealing with units\nlibrary(rprojroot)\nlibrary(ggplot2)\nlibrary(stringr)    # for string cleaning\nlibrary(sfheaders)  # for converting object to linestring\nlibrary(concaveman) # for convex hull\n\nknitr::opts_chunk$set(include=TRUE, message=FALSE, warning=FALSE, tidy.opts=list(width.cutoff=60),tidy=TRUE)\nThe purpose of this practical is twofold: first it aims to provide a concrete example of the potential outcomes framework to support the lecture and second to provide an interactive walk through of implementing a regression discontinuity design where a geographic boundary is leveraged as the discontinuity.\nAll the data required for this practical has been uploaded to the learning materials section of blackboard.",
    "crumbs": [
      "Practicals",
      "Causal design and urban policy evaluation"
    ]
  },
  {
    "objectID": "src/causality.html#potential-outcomes-in-action",
    "href": "src/causality.html#potential-outcomes-in-action",
    "title": "Causal design and urban policy evaluation: Potential outcomes & Geo RDD practical",
    "section": "1) Potential Outcomes in action",
    "text": "1) Potential Outcomes in action\nRemember that the Potential Outcomes framework allows us to express causality as a comparison between two alternate versions of the world: one in which a unit, \\(i\\), receives a policy intervention (the treatment), \\(Y_i^1\\), and the counterfactual state in which it doesn’t, \\(Y_i^0\\). We call these realized and counterfactual states ‘potential outcomes’. This allows us to estimate causal effects, \\(\\delta_i\\), as the difference between the world we observe and the world we don’t: \\(\\delta_i = Y_i^1 - Y_i^0\\).\nFor concreteness, suppose we wanted to understand the effect of gender on budgetary decisions across cities.1 Specifically, we want to understand how a city having a woman as a mayor effects the proportion of the budget allocated to health programs including the provision of clean drinking water or maternal care. There is huge interest in questions like this within both political science and development economics. To do this, we collect data across seven cities recording whether the mayor was a man or a women (our treatment) and the share of the city’s budget allocated to health programs (the outcome). We observe the treatment status, gender of mayor, and outcome, budget allocation, for each city. Furthermore, suppose that, for the time being, men and women mayors have been assigned to cities at random. Also suppose that we are also able to observe the counterfactual scenario as well. In other words, we can see how a man would have allocated the budget of a city headed by a woman, and vice versa.\nOur data might look something like this:\n\ncomplete_information = data.frame (city_i = c(\"city_1\", \"city_2\", \"city_3\", \"city_4\", \n                                              \"city_5\", \"city_6\", \"city_7\"),\n                                   Y_0_man = c(10, 15, 20, 20, 10, 15, 15),\n                                   Y_1_woman = c(15, 15, 30, 15, 20, 15, 30))\ncomplete_information\n\n  city_i Y_0_man Y_1_woman\n1 city_1      10        15\n2 city_2      15        15\n3 city_3      20        30\n4 city_4      20        15\n5 city_5      10        20\n6 city_6      15        15\n7 city_7      15        30\n\n\nIn this example we can estimate individual treatment effects (the effect that being treated with some policy intervention has on specific units) because the data is complete (we’ve observed both potential outcomes). Remember, the Simple Difference in Outcomes (SDO) will return the effect of being treated for any individual unit: \\(\\delta_i = Y_i^1 - Y_i^0\\).\nExercise - calculate the individual treatment effects using the SDO:\n\n#Example code\ncomplete_information = complete_information %&gt;%\n  dplyr::mutate(treatment_effect_i = Y_1_woman - Y_0_man)\ncomplete_information\n\n  city_i Y_0_man Y_1_woman treatment_effect_i\n1 city_1      10        15                  5\n2 city_2      15        15                  0\n3 city_3      20        30                 10\n4 city_4      20        15                 -5\n5 city_5      10        20                 10\n6 city_6      15        15                  0\n7 city_7      15        30                 15\n\n\nWe see that most places would received more healthcare spending under a women mayor whereas one, city 4, would have actually seen less healthcare spending.\nWe can also estimate an Average Treatment Effect (ATE) across the two groups by comparing the difference in group means. Exercise, calculate the difference in means.\n\n#Example code\nmean(complete_information$Y_1_woman) - mean(complete_information$Y_0_man)\n\n[1] 5\n\n\nHowever, we can see that this presents us with a problem because we can only observe one of these potential outcomes in real life. We call this the fundamental problem in causal inference. This fact is formalized by the switching equation, which literally ‘switches’ our potential outcomes between the realized and counterfactual worlds depending on whether or not we observe the treatment being assigned:\n\\[\nY_i = D_iY_i^1 + (1-D_i)Y_i^0\n\\]\nWhere:\n\\[Y_i \\begin{cases} Y_i^1 \\text{ if } D_i = 1, \\\\\n                     Y_i^0 \\text{ if }  D_i = 0\n       \\end{cases} \\]\nSo, in reality me might have a scenario something more like this:\n\nmissing_information = data.frame(city_i = c(\"city_1\", \"city_2\", \"city_3\", \"city_4\", \n                                            \"city_5\", \"city_6\", \"city_7\"),\n                                   Y_0_man = c(NA, 15, 20, 20, 10, 15, NA),\n                                   Y_1_woman = c(15, NA, NA, NA, NA, NA, 30))\nmissing_information\n\n  city_i Y_0_man Y_1_woman\n1 city_1      NA        15\n2 city_2      15        NA\n3 city_3      20        NA\n4 city_4      20        NA\n5 city_5      10        NA\n6 city_6      15        NA\n7 city_7      NA        30\n\n\nCan we calculate individual treatment effects?\n\n#Example code \nmissing_information = missing_information %&gt;%\n  dplyr::mutate(treatment_effect_i = Y_1_woman - Y_0_man)\nmissing_information\n\n  city_i Y_0_man Y_1_woman treatment_effect_i\n1 city_1      NA        15                 NA\n2 city_2      15        NA                 NA\n3 city_3      20        NA                 NA\n4 city_4      20        NA                 NA\n5 city_5      10        NA                 NA\n6 city_6      15        NA                 NA\n7 city_7      NA        30                 NA\n\n\nNo, we can’t.\nBut we have a distribution of both \\(y_i^1\\) and \\(y_i^0\\) in the population. So, we can estimate ‘average treatment effects’ (ATE) across the population by comparing outcomes for units in the ‘treatment’ (those with \\(y_i^1\\)) and ‘control’ (those with \\(y_i^0\\)) groups. We have also seen how the simple difference in means between the treated and control groups returns the ATE under random assignment into treatment (which I’ve said we have here). This is because the potential outcomes across these groups are the same. In other words, random assignment ensures that \\(E[Y0|T=1] = E[Y0|T=0]\\) and selection bias has been reduced to zero.2\nCalculate the average treatment effect (ATE) from missing infomation.\n\nmean(missing_information$Y_1_woman, na.rm = T) - # na.rm = T ignores the NAs\n  mean(missing_information$Y_0_man, na.rm = T)   # na.rm = T ignores the NAs\n\n[1] 6.5\n\n\nNote - we’ve had to remove the NA values in each vector.\nAlso note, that we’ve calculated a different ATE, 6.5, compared to the example with complete information, 5. This is because, even under random assignment we have heterogeneity across individual treatment effects. We can’t recover these (at least not in this context) so we do get some bias from heterogeneous individual treatment effects.3",
    "crumbs": [
      "Practicals",
      "Causal design and urban policy evaluation"
    ]
  },
  {
    "objectID": "src/causality.html#geographic-boundaries-as-regression-discontinuities---landlord-licensing-in-bristol",
    "href": "src/causality.html#geographic-boundaries-as-regression-discontinuities---landlord-licensing-in-bristol",
    "title": "Causal design and urban policy evaluation: Potential outcomes & Geo RDD practical",
    "section": "2) Geographic boundaries as regression discontinuities - Landlord licensing in Bristol",
    "text": "2) Geographic boundaries as regression discontinuities - Landlord licensing in Bristol\nAbout nine years ago Bristol city council introduced a policy requiring that landlords of rented Homes of Multiple Occupancy (HMOs) in certain inner-city areas to obtain licenses from the council.4 The scheme aimed to protect and improve the conditions of rented housing in the city and gives council housing officers increased powers to inspect and sanction rogue landlords. Over time the scheme has been rolled out across more and more city wards.\nWe can map this data to observe the distribution of these wards throughout the city. We’ll call them Special Licencing Areas (SLAs). You can directly download the Bristol ward spatial data as a .gpkg file from the below URL we use in the read_sf(). To read more about the geopackage type format, use this [link]](https://www.geopackage.org/).\n\nbristol_wards = read_sf(\"https://www.dropbox.com/s/3pujrbqtde5tpwr/wards_with_sla_date.gpkg?dl=1\")\n\nsla_wards = bristol_wards %&gt;%\n  #drop the wards without an SLA implementation data (i.e., no SLA)\n  tidyr::drop_na(sla_date) %&gt;%\n  sf::st_as_sf()\n\nggplot(bristol_wards) + \n    geom_sf(fill = \"white\", size = .05) +\n    geom_sf(sla_wards, fill = \"red\", color = \"red\", size = 0.5, mapping = aes()) + \n    theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\nThe landlords of properties within the SLA wards must have a licence to operate. Those outside don’t. Licences cost money to obtain and require that landlords invest in their properties to ensure they meet the minimum standards required of the scheme. We might, therefore, expect that this policy will have a knock on effect on the rental prices of properties within SLA wards. Specifically, we’d expect landlord to raise prices to cover the cost of the license fee and the additional investment required to keep their properties up to code.\nHow has the SLA impacted the prices of rented property prices?\nThis question seems well suited to a Regression Discontinuity Design with Geographic Boundaries (aka GeoRDD). We have a treatment that is assigned at a discrete cutoff. Remember RDD assumes that treated and untreated units immediately to either side of the cutoff are so similar in terms of their potential outcomes that we can deal with the treatment as if it were assigned at random. The closer we get to this boundary, the more similar units are.\nTo answer this question we will also need to data on property listings. Ideally we’d use data from medium-long term rental listings in the city. However, this data is sensitive and tricky to come by. Instead, we’ll use data on AirBnB listings from Bristol which, as rented accommodation in the city, are also subject to the SLA policy. We get this data from InsideAirBNB. The data contains the location and prices of AirBnB listings over the last twelve months alongside several ancillary attributes.\nThis code reads the data in and plots it. Again, you can directly download the .csv file with the data we prepared for you using the below URL in the read.csv()\n\nlistings = read.csv(\"https://www.dropbox.com/s/uaf9rj6wf95iy5m/airbnb_listings.csv?dl=1\") %&gt;%\n  sf::st_as_sf(., coords = c(\"longitude\", \"latitude\"), crs = 4326) %&gt;%\n  sf::st_transform(st_crs(bristol_wards)) %&gt;%\n  #convert price to integer and remove £ sign\n  dplyr::mutate(price = as.integer(stringr::str_remove(price, \"[$]\"))) \n\nggplot(bristol_wards) +\n  geom_sf(fill = \"white\", size = .05) +\n  geom_sf(sla_wards, fill = \"red\", color = \"red\", size = 0.5, mapping = aes()) + \n  geom_sf(data = listings, size = .1, fill = \"darkred\") + \n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\nWe can see from the map that we’ve got lots of listings in and around the SLA wards which means there should be plenty of data around the threshold that we can use for our Geo-RDD.\nThe outcome variable will be the price of each listing within and outside of the SLA areas, our hypothesis being that, because landlords in SLA wards are subject to tighter controls and regulations and more checks, they must invest more intro their properties and will raise prices to compensate. We expect this to be observable in the average prices of properties.\nThe price variable is skewed so we need to log transform it, there are also some zeros, which seems implausible, so we’ll need to address that by removing them.\n\nggplot(listings, aes(x=price)) + geom_histogram()\n\n\n\n\n\n\n\nlistings = listings %&gt;%\n  dplyr::filter(price &gt; 0) %&gt;%\n  dplyr::mutate(log_price = log(price))\n\nggplot(listings, aes(x=log_price)) + geom_histogram()\n\n\n\n\n\n\n\n\nThere, that looks better.\nWith the dependent variable sorted, we’re going to do the following: 1) Assign a treatment status to each property based upon its (non)membership of the SLA wards 2) Select bandwidth that allows us to compare properties immediately to either side of the SLA boundary",
    "crumbs": [
      "Practicals",
      "Causal design and urban policy evaluation"
    ]
  },
  {
    "objectID": "src/causality.html#assigning-the-treatment",
    "href": "src/causality.html#assigning-the-treatment",
    "title": "Causal design and urban policy evaluation: Potential outcomes & Geo RDD practical",
    "section": "Assigning the treatment",
    "text": "Assigning the treatment\nWe’re interested in whether a listing falls within or outside of a special licensing area (SLA). We basically need to do two things here. First, we need to assign a cutoff or threshold at which a listing will be assigned to either the treatment or control group. We’ll do this by linking each listing to the SLA boundaries via a spatial join which used their geometric attributes to create the links. Second, we need to create our running variable. We’ll do this by calculating the minimum distance of each listing to the exterior boundary of the special licences areas. But we want to draw a distinction between listings that fall within SLAs and those that don’t. To do this we’ll assign all distances within an SLA as negative and those outside as positive. Meaning our cutoff is zero.\nThe code below spatially joins SLA ward membership to the individual listings and creates a “treatment_status” variable that takes the value of 1 if the listing is within an SLA ward, otherwise zero.\n\nlistings = listings %&gt;%\n  #note we just want the name variable from the wards \n  sf::st_join(., sla_wards %&gt;% dplyr::select(WD21NM, geom), st_within, left = T, largest = T) %&gt;%\n  replace(is.na(.), 0) %&gt;%\n  #assign so zero = ctonrol and 1 = treated\n  dplyr::mutate(treatment_status = as.factor(ifelse(WD21NM == 0, 0, 1)))\ntable(listings$treatment_status)\n\n\n   0    1 \n 758 1557 \n\n\nWe can see that we’ve got more listings in the treatment group than control. That tells us something about the geography of the SLA policy and the phenomenon it’s designed to address. This imbalance is fine however, as we’re going to be losing a lot of these listing when we define our bandwidth.\nQuestion: is this an example of a ‘sharp’ or ‘fuzzy’ regression discontinuity?\nGreat, now that we’ve got our treatment status we need to create our our running variable. Remember, this is the variable along which the threshold sits and we’ll apply our bandwidth to. Usually in an RDD this would already be in our data, but here, because of the geographical nature of the problem we’ll have to create it ourselves. We’ll do this by calculating the distance of each listing from the threshold (i.e., the external boundary of the SLA neighborhoods).\nFirst, we need to create a single object for the external boundary of all the LSA wards from which the running variable can be calculated.\n\n#st_union 'dissolves' internal boundaries creating a single polygon\nsla_wards_boundary = sf::st_union(sla_wards)\nggplot(sla_wards_boundary) +\n  geom_sf(fill = \"white\", size = .05)\n\n\n\n\n\n\n\n\nHowever, as you can see, we’ve got a problem here. The river is counted as an external boundary meaning that we now have a boundary running through the middle of our LSA wards. This is going to be a problem. Take a moment to think why before moving onto the next bit. Remember, that we’re trying to use the external boundary of the combined LSA areas as the discontinuity.\nOk, so, the problem is that, when we calculate the distance of properties to the external boundary, those that are close to the river are going to be given false distances, as the algorithm will ‘snap onto’ the river rather than the external boundary. These properties won’t make for valid points of comparison to those immediately outside of the LSA wards because they’re not actually geographically close. Thus we can’t assume that, as the distance tends to zero, their potential outcomes will be the same in expectation. We are going to need to address this somehow by removing the river.\nWe’ll do this by creating a concave hull around our SLA wards which will cut out the river. Don’t worry too much about how I’m going to do this - just run the code - I’ve left it in for the interested student and it’s a good warm-up for the more GIS focused things you’ll be doing next term. It’s also a good example of the types of challeneges that get thrown up when we try to implement these research designs in practice.\n\n#The concave hull algorithm requires spatial points \n#convert polygon boundary to points for the convex hull\nboundary_points = sla_wards_boundary %&gt;%\n  # convert to multilinestring \n  sf::st_cast(\"MULTILINESTRING\") %&gt;%\n  # convert to line string\n  sf::st_cast(\"LINESTRING\") %&gt;%\n  # sample points from along this line at regular intervals\n  sf::st_line_sample(., n = 500)\n\n#create concave hull\nhull = concaveman::concaveman(st_coordinates(boundary_points)[,1:2])\n#conveert back to linestring\nsla_linestring = sfheaders::sf_linestring(hull, x = \"V1\", y = \"V2\") %&gt;%\n  sf::st_set_crs(., st_crs(listings))\n\nLet’s see how that looks.\n\nggplot(sla_linestring) +\n  geom_sf(fill = \"white\", size = 2) +\n  geom_sf(sla_wards, fill = \"red\", color = \"red\", size = 0.5, mapping = aes()) + \n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\nGreat. Now we need to calculate the distance of each listing from this boundary.\n\nlistings = listings %&gt;%\n  #use linestring to get non-zero values\n  dplyr::mutate(distance_to_boundary = sf::st_distance(listings, sla_linestring)) %&gt;% \n  #drop units (m)\n  units::drop_units() %&gt;%\n  #multiply untreated by -1 to give negative sign\n  dplyr::mutate(running_variable = ifelse(treatment_status == 0, distance_to_boundary*-1, distance_to_boundary))\n\nLet’s check that this has done what we wanted it to.\n\nggplot(sla_wards_boundary) +\n  geom_sf(fill = \"white\", size = .05) +\n  geom_sf(data = listings, aes(color = running_variable), size = .1) \n\n\n\n\n\n\n\n\nLooks good, we’ve successfully created a running variable. Now lets create a regression discontinuity plot. This graphically displays the distribution of property prices around the discontinuity.\n\nggplot(data=listings, aes(x=running_variable, y=log_price)) +\n  geom_point() +\n  geom_vline(xintercept = 0, linetype=\"dotted\", \n                color = \"red\") +\n  labs(y = \"Price (ln)\",\n       x = \"Distance to LSA boundary (m)\")\n\n\n\n\n\n\n\n\nDo we see the possibility of higher prices within the SLA wards? It looks like prices might be a little higher closer to the line.\nWe can start exploring this by fitting regression lines either side of the threshold to graphically show any discontinuity in prices along the running variable.\n\nggplot(listings, aes(x = running_variable, y = log_price, color = treatment_status)) +\n  geom_point() +\n  geom_smooth(aes(group=treatment_status), method = \"lm\", color = \"black\") +\n  guides(color = F) +\n  geom_vline(xintercept = 0, color = \"red\",\n    size = 1, linetype = \"dashed\") +\n  labs(y = \"Price (ln)\",\n       x = \"Distance to LSA boundary (m)\")\n\n\n\n\n\n\n\n\nIt looks like we might have a discontinuity in prices at the cutoff. We can also use a polynomial to fit a curved line through these points. Sometimes RDDs are estimate using these kinds of regressions, but we’ll stick with the linear case in this example.\n\nggplot(listings, aes(x = running_variable, y = log_price, color = treatment_status)) +\n  geom_point() +\n  geom_smooth(aes(group=treatment_status), method = \"lm\", formula = y ~ poly(x, 4), \n              se = FALSE, color = \"black\") +\n  guides(color = F) +\n  geom_vline(xintercept = 0, color = \"red\",\n    size = 1, linetype = \"dashed\") +\n  labs(y = \"Price (ln)\",\n       x = \"Distance to LSA boundary (m)\")\n\n\n\n\n\n\n\n\nSo, we’ve seen what looks like a discontinuity in property prices at the threshold which could suggest that the SLA policy has a causal effect on house prices. Do we see a difference in the raw comparison of means?\n\ntreated_prices = listings %&gt;%\n  dplyr::filter(treatment_status == 1)\n\ncontrol_prices = listings %&gt;%\n  dplyr::filter(treatment_status == 0) \n\nmean(treated_prices$price) - mean(control_prices$price)\n\n[1] 30.87929\n\n\nSeems so. We can see that being treated, in an SLA ward appears to be associated with a ~$31 boost in price.\nHowever, remember that we’re not comparing equivalent properties either side of the cutoff (i.e., potential outcomes for properties in the treatment and control groups are unlikely to be the same in expectation). We’re currently looking at properties along the full range of the running variable, not those directly to either side of the cutoff which we expect to have very similar potential outcomes. Some of you will have observed that the LSA wards form the city center of Bristol and include some of the city’s most desirable and busy neighborhoods. It is plausible that properties in the SLA wards are likely to be the most desirable to those renting short-term accommodation. This would mean that the price boost we’ve captured would not by caused by the policy but another variable, unobserved variable.\nSo let’s look locally (i.e., either side of the SLA boundary) to do this we’ll need to start playing with bandwidths. Given that the whole raison d’etre of design- as opposed to model-based inference is to reduce researcher degrees of freedom, the selection of bandwidths is not a straight forward choice. Indeed, it requires researchers to make informed but often arbitrary decisions about how the bandwidth will be defined. Let’s explore this.",
    "crumbs": [
      "Practicals",
      "Causal design and urban policy evaluation"
    ]
  },
  {
    "objectID": "src/causality.html#assign-a-bandwidth",
    "href": "src/causality.html#assign-a-bandwidth",
    "title": "Causal design and urban policy evaluation: Potential outcomes & Geo RDD practical",
    "section": "Assign a bandwidth",
    "text": "Assign a bandwidth\nRemember, in RDD we’re assuming that units that are just to either side of the cutoff, like really close, are similar enough for us to consider their assignment into treatment as being random. In other words, we’re saying that things close to the cutoff are more similar than things far away and the farther away we get, the less similar things will be. The bandwidth is how much area around the cutoff we consider things to be comparable. This is the same for regular RDD, but our cutoff is a geographical boundary.\nWe could assign an arbitrary bandwidth at, say 500m, from the the cutoff. Let’s see what this looks like.\n\nggplot(data=listings, aes(x=running_variable, y=log_price)) +\n  geom_point() + \n  #add points we're looking at for the RDD in orange\n  geom_point(data = listings %&gt;% dplyr::filter(between(running_variable, -500, 500)), \n             aes(x=running_variable, y=log_price, colour = \"orange\")) + \n  theme(legend.position = \"none\") +\n  geom_vline(xintercept = 0, linetype=\"dotted\", color = \"red\") + \n  geom_vline(xintercept = c(500, -500), linetype=\"solid\", color = \"black\") +\n  labs(y = \"Price (ln)\",\n       x = \"Distance to LSA boundary (m)\")\n\n\n\n\n\n\n\nbanded_listings = listings %&gt;% dplyr::filter(between(running_variable, -500, 500))\ntable(banded_listings$treatment_status)\n\n\n  0   1 \n214 440 \n\n\nIn terms of our regression discontinuity, this is what we are now looking at.\n\nggplot(listings %&gt;% dplyr::filter(between(running_variable, -500, 500)), \n                                  aes(x = running_variable, y = log_price, \n                                      color = treatment_status)) +\n  geom_point() +\n  geom_smooth(aes(group=treatment_status), method = \"lm\", se = FALSE, color = \"black\") +\n  guides(color = F) +\n  theme(legend.position = \"none\") +\n  geom_vline(xintercept = 0, linetype=\"dotted\", color = \"red\") + \n  geom_vline(xintercept = c(500, -500), linetype=\"solid\", color = \"black\") +\n  labs(y = \"Price (ln)\",\n       x = \"Distance to LSA boundary (m)\")\n\n\n\n\n\n\n\n\nThis starts to cast doubt around the presence of a discontinuity since, when we look within the bandwidth, the regression slop to the left of the cutoff is now positive. In other words, the properties that are not very close to the boundary were doing a lot of the heavy lifting in our previous graphs.\nWe could go further here and it’s common to test multiple bandwidths and kernal functions that assign greater weight to observations closest to the cutoff. This is because we expect differences in potential outcomes to be smallest at the cutoff (i.e. two properties &lt; 1m from the cutoff should have identical potential outcomes in expectation). However, this can get pretty complicated pretty quickly and we’re more interested in the intuition of GeoRDD here, so we’re going to set this issue aside for now.\nExcellent, we’ve gotten to the point where we can estimate a proper GeoRDD. Earlier we saw how the causal effect in an RDD could be estimated from the difference in coefficients between two regression representing the left and right hand side of the cutoff. We can also do this within a single equation:\n\\[\nY = \\beta_0 + \\beta_1(Running - Cutoff) + \\beta_2 Treated + \\beta_3(Running - Cutoff) \\times Treated + \\epsilon\n\\]\nNote that we’ve centered the running variable around the cutoff by using \\((Running - Cutoff)\\) which takes a negative value to the left of the cutoff and a positive value to the right.\nNow let’s estimate this in r. We don’t need to worry about centering our running variable around the cutoff as this has been done by design, so the actual estimation is fairly straightforward.\n\n#simply expressed in r \nlm(log_price ~ treatment_status + running_variable + treatment_status:running_variable,\n   data = listings %&gt;% dplyr::filter(between(running_variable, -500, 500))) %&gt;% \n  summary()\n\n\nCall:\nlm(formula = log_price ~ treatment_status + running_variable + \n    treatment_status:running_variable, data = listings %&gt;% dplyr::filter(between(running_variable, \n    -500, 500)))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.42819 -0.52665 -0.01144  0.46860  2.42930 \n\nCoefficients:\n                                     Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                         4.355e+00  8.108e-02  53.716   &lt;2e-16 ***\ntreatment_status1                   5.777e-02  1.082e-01   0.534    0.594    \nrunning_variable                    3.099e-04  2.982e-04   1.039    0.299    \ntreatment_status1:running_variable -9.677e-05  3.783e-04  -0.256    0.798    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.6476 on 650 degrees of freedom\nMultiple R-squared:  0.02108,   Adjusted R-squared:  0.01656 \nF-statistic: 4.666 on 3 and 650 DF,  p-value: 0.003102\n\n\nWhat can we infer from this regression about the causal effect of the SLA policy on AirBnB prices?\nOne issue that might be confounding inference is the fact that properties inside SLA wards, being located towards the center of the city, tend to be smaller than those more suburban properties outside of the SLA. Let’s account for this by controlling for the number of rooms in a property.5\n\n#simply expressed in r \nlm(log_price ~ treatment_status + running_variable + treatment_status:running_variable + bedrooms,\n   data = listings %&gt;% dplyr::filter(between(running_variable, -500, 500))) %&gt;% \n  summary()\n\n\nCall:\nlm(formula = log_price ~ treatment_status + running_variable + \n    treatment_status:running_variable + bedrooms, data = listings %&gt;% \n    dplyr::filter(between(running_variable, -500, 500)))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.85944 -0.34037  0.02546  0.32130  1.32871 \n\nCoefficients:\n                                     Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                         3.738e+00  6.511e-02  57.410   &lt;2e-16 ***\ntreatment_status1                  -4.426e-02  7.965e-02  -0.556   0.5786    \nrunning_variable                    4.208e-04  2.192e-04   1.920   0.0553 .  \nbedrooms                            4.118e-01  1.749e-02  23.545   &lt;2e-16 ***\ntreatment_status1:running_variable -5.017e-05  2.780e-04  -0.180   0.8569    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.476 on 649 degrees of freedom\nMultiple R-squared:  0.472, Adjusted R-squared:  0.4688 \nF-statistic: 145.1 on 4 and 649 DF,  p-value: &lt; 2.2e-16\n\n\n\n\n\nQuestion: Is this a valid GeoRDD? As we’ve discussed in the lecture, our causal claims are only as good as the assumptions we make. If these assumptions are violated, then our inferences are going to be biased somehow. Thinking about the assumptions we’re making, let’s consider a few issues that might challenge the validity of this application.\n\n\nPossible issues: non-compliance in treatment group - illegal landlords without a licence within SLA wards. compliance in control group - landlords outside of the SLA wards are free to opt in to the policy. *Both of these cases would violate our assumption that units cannot sort themselves over the threshold.",
    "crumbs": [
      "Practicals",
      "Causal design and urban policy evaluation"
    ]
  },
  {
    "objectID": "src/causality.html#footnotes",
    "href": "src/causality.html#footnotes",
    "title": "Causal design and urban policy evaluation: Potential outcomes & Geo RDD practical",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThis example has been adapted from Gerber and Green (2012) “Field Experiments: Design, Analysis, and Interpretation”.↩︎\nWhile it is true that random assignment guarantees balance of \\(y_i^1\\) and \\(y_i^0\\) along all unobserved confounders in expectation, this doesn’t necessarily hold in practice. Chance imbalances can be introduced from time to time.↩︎\nI did not mention heterogeneous treatment effect bias in the lecture because it was not instrumental to our initial understanding of the potential outcomes framework. This means that, without randomization, our estimated causal effect (i.e., the difference in outcomes/means) is not just a function of the ATE and selection bias, as presented in the lecture, but also heterogeneous treatment effect bias.↩︎\nA property is an HMO if at least 3 tenants forming more than 1 household live there and there are shared facilities such as toilet, bathroom or kitchen facilities.↩︎\nWe could also control for other differences across wards by blocking (using fixed effects) at this level.↩︎",
    "crumbs": [
      "Practicals",
      "Causal design and urban policy evaluation"
    ]
  },
  {
    "objectID": "assignments/project.html",
    "href": "assignments/project.html",
    "title": "Project Brief: Analyse a spatial network",
    "section": "",
    "text": "You need to identify and analyse a spatial network you are interested in. This involves:\n\nSelecting a spatial network, which is of interest for you; finding, using and analysing relevant network data – more on this below.\nSetting up research questions. You will need to set up clear research questions that your analysis will answer. Although I don’t expect a full literature review section in your report, you need to link these research questions to some previous literature.\nAnalysing your network. You will need to employ relevant methods and tools that we discussed during the course (from data acquisition to network analysis and from diversity measures to spatial interaction models) to answer your research questions. The methods you will use should be appropriate for the research questions you need to answer. I will encourage you (and give extra points) if you utilise relevant methods beyond those discussed during the classes. Your methodological choices should be justified in the text.\nWriting up the report, which needs to be adequately structured (i.e. introduce the problem, link it to some previous literature, describe the methods and the data, present and discuss the results, indicate some key outcomes). The report should be written as an RMarkdown document and knitted as an .html document that allows the reader to see both the text, the code you will develop and the output of this code. Your report should include tables and figures where appropriate – these form an important element of the assessment. Be critical to what outputs will be included in the report. The report needs to be appropriately referenced.\n\n\n\n\nIn order to address the different interests the cohort might have, the data choice is up to you. I offer below a few ideas, but if you want to analyse other data, please get in touch with me directly to discuss. You will need to do this early on during the term, so please start thinking about the report early.\n\nUS internal migration flows. You can use data from the American Community Survey (ACS). There are quite a few R packages, which enable you to directly access these data through an API.\nAfrica migration flows from WorldPop.\nData for Good by Facebook. There are quite a few interesting datasets there. Some of them are ready to download, some require an application. If you are interested in the latter, apply sooner than later.\nInternet submarine cables\nNYC Taxi trips\nFlight data\n\n\n\n\nThe report should be 3,500 long excluding references and code. It is worth 100% of the unit’s mark and on top of the programme marking criteria, I will also consider:\n\nThe reproducibility of the analysis.\nThe quality of visualisations and tables and the appearance of the knitted .html document.\nThe relevance and the novelty of setting up specific research questions.\nThe use of relevant tools beyond the ones directly demonstrated during this unit.\nThe robustness of the analysis and modelling.\nThe complexity of the data that you will use.\n\n\n\n\nProject submission: 3rd December 2024\nOpportunity for non-marked feedback: What data do you want to use for your project? Send an email to Emmanouil describing and justifying the data you want to use by by 31st October.",
    "crumbs": [
      "Content",
      "Assessment"
    ]
  },
  {
    "objectID": "assignments/project.html#assignment-description",
    "href": "assignments/project.html#assignment-description",
    "title": "Project Brief: Analyse a spatial network",
    "section": "",
    "text": "You need to identify and analyse a spatial network you are interested in. This involves:\n\nSelecting a spatial network, which is of interest for you; finding, using and analysing relevant network data – more on this below.\nSetting up research questions. You will need to set up clear research questions that your analysis will answer. Although I don’t expect a full literature review section in your report, you need to link these research questions to some previous literature.\nAnalysing your network. You will need to employ relevant methods and tools that we discussed during the course (from data acquisition to network analysis and from diversity measures to spatial interaction models) to answer your research questions. The methods you will use should be appropriate for the research questions you need to answer. I will encourage you (and give extra points) if you utilise relevant methods beyond those discussed during the classes. Your methodological choices should be justified in the text.\nWriting up the report, which needs to be adequately structured (i.e. introduce the problem, link it to some previous literature, describe the methods and the data, present and discuss the results, indicate some key outcomes). The report should be written as an RMarkdown document and knitted as an .html document that allows the reader to see both the text, the code you will develop and the output of this code. Your report should include tables and figures where appropriate – these form an important element of the assessment. Be critical to what outputs will be included in the report. The report needs to be appropriately referenced.",
    "crumbs": [
      "Content",
      "Assessment"
    ]
  },
  {
    "objectID": "assignments/project.html#data-sets",
    "href": "assignments/project.html#data-sets",
    "title": "Project Brief: Analyse a spatial network",
    "section": "",
    "text": "In order to address the different interests the cohort might have, the data choice is up to you. I offer below a few ideas, but if you want to analyse other data, please get in touch with me directly to discuss. You will need to do this early on during the term, so please start thinking about the report early.\n\nUS internal migration flows. You can use data from the American Community Survey (ACS). There are quite a few R packages, which enable you to directly access these data through an API.\nAfrica migration flows from WorldPop.\nData for Good by Facebook. There are quite a few interesting datasets there. Some of them are ready to download, some require an application. If you are interested in the latter, apply sooner than later.\nInternet submarine cables\nNYC Taxi trips\nFlight data",
    "crumbs": [
      "Content",
      "Assessment"
    ]
  },
  {
    "objectID": "assignments/project.html#word-limit-and-marking-criteria",
    "href": "assignments/project.html#word-limit-and-marking-criteria",
    "title": "Project Brief: Analyse a spatial network",
    "section": "",
    "text": "The report should be 3,500 long excluding references and code. It is worth 100% of the unit’s mark and on top of the programme marking criteria, I will also consider:\n\nThe reproducibility of the analysis.\nThe quality of visualisations and tables and the appearance of the knitted .html document.\nThe relevance and the novelty of setting up specific research questions.\nThe use of relevant tools beyond the ones directly demonstrated during this unit.\nThe robustness of the analysis and modelling.\nThe complexity of the data that you will use.",
    "crumbs": [
      "Content",
      "Assessment"
    ]
  },
  {
    "objectID": "assignments/project.html#deadline",
    "href": "assignments/project.html#deadline",
    "title": "Project Brief: Analyse a spatial network",
    "section": "",
    "text": "Project submission: 3rd December 2024\nOpportunity for non-marked feedback: What data do you want to use for your project? Send an email to Emmanouil describing and justifying the data you want to use by by 31st October.",
    "crumbs": [
      "Content",
      "Assessment"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Urban Analytics and City Science",
    "section": "",
    "text": "Welcome!\nThis is the webpage for the Urban Analytics and City Science unit, a core unit for the MSc in Geographic Data Science and Spatial Analytics. This programme is part of the School of Geographical Sciences at the University of Bristol and has been developed by the Quantitative Spatial Science Research Group.\nAll the unit material can be accessed in .html form from the left-hand side menu. If you want to access the source code please go to the src directory of the GitHub repository."
  }
]